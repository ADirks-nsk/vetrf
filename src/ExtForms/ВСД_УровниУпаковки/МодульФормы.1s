// Меркурий - Сведения об упаковке. Дмитрий Жуков 2018-01-15 zhukov@kb99
// Передаваемые /возвращаемые данные
// СтроковоеПредставление Значения - Преобразованная в строку Таблица Значений,
// содержащая 1- Трансп уровень,2 - ФормаУпаковки, 3 - Количество, 4 - Преобразованный в строку СписокЗначений Маркировок Упаковки трансп. уровня (Строка - Class, Значение - значение).


Перем СзКлассы, СЗНомераУровней;
Перем СтрСведенияОбУпаковке;
//******************************************* 


Функция ЗначениеМаркировки()
	текУровень = ТЗУровни.ТекущаяСтрока();
	Если ТекУровень = 0 Тогда		
	    Возврат "";
	КонецЕсли;
	Рез = "";
	СЗНомераУровней.ПолучитьЗначение(ТЗУровни.НомерУровня,Рез);
	Марк =  ЗначениеИзСтроки(ТЗУровни.Маркировки);
	Если ТипЗначенияСтр(Марк) = "СписокЗначений" Тогда
		Марк.Выгрузить(СзМаркировки);
	Иначе
		СЗМаркировки.УдалитьВсе();
	КонецЕсли;
	
	поз = СзМаркировки.ТекущаяСтрока();
	Если ПустоеЗначение(поз) = 1 Тогда
	    Возврат Рез;
	КонецЕсли;
	Стр = ""; 	
	зн = СзМаркировки.ПолучитьЗначение(поз,Стр);
	Возврат Рез+"; марк. "+Стр+" "+зн;
КонецФункции


Процедура ОчиститьУровень()
	Если ТЗУровни.ТекущаяСтрока()=0 Тогда
	    Возврат;
	КонецЕсли;
	Если Вопрос("Удалить текущий уровень?","Да+Нет")="Нет" Тогда
	    Возврат;
	КонецЕсли;
	СЗМаркировки.УдалитьВсе();	
	ТЗУровни.УдалитьСтроку(ТЗУровни.ТекущаяСтрока()); 
	Если ТЗУровни.КоличествоСтрок()=0 Тогда
		СтрСведенияОбУпаковке = "";		
	Иначе
		СтрСведенияОбУпаковке = ЗначениеВСтроку(ТЗУровни);		
	КонецЕсли;
КонецПроцедуры






Процедура ДобавитьСтрокуУровня()
//	Если ТЗУровни.КоличествоСтрок()>0 Тогда
//		Возврат;    
//	КонецЕсли;
	НомерУровня = "";
	Если НЕ(СзНомераУровней.ВыбратьЗначение(НомерУровня,"Номер Уровня")=1) Тогда
    	Возврат;
	КонецЕсли;	
    
	стр = 0;
	Если ТЗУровни.НайтиЗначение(НомерУровня,стр,"НомерУровня")=1 Тогда
		Предупреждение("Уровень "+НомерУровня+" уже присутствует");
		ТЗУровни.ТекущаяСтрока(стр);
		Возврат;    
	КонецЕсли;


	Упак = СоздатьОбъект("Справочник.ВСД_ФормыУпаковки");
	Если Упак.Выбрать("Упаковка","ФормаСписка") = 0 Тогда
	    Возврат;
	КонецЕсли;
	Кол = 0;
	ВвестиЧисло(Кол,"Кол-во",9,0);
	ТЗУровни.НоваяСтрока();
	ТЗУровни.НомерУровня = НомерУровня;
	ТЗУровни.Упаковка = Упак.ТекущийЭлемент();
	ТЗУровни.КолВо = Кол;
	СтрСведенияОбУпаковке = ЗначениеВСтроку(ТЗУровни); // добавить или обновить сведения об уровне	
	ТЗУровни.ТекущаяСтрока(ТЗУровни.КоличествоСтрок());
КонецПроцедуры 


//************ Маркировки
Процедура ДобавитьМаркВУпак()
	Если ТЗУровни.КоличествоСтрок()=0 Тогда
		Возврат;    
	КонецЕсли;
	Если СЗМаркировки.РазмерСписка()=0 Тогда
		ТЗУровни.Маркировки = "";    
	Иначе
		ТЗУровни.Маркировки = ЗначениеВСтроку(СЗМаркировки);	
	КонецЕсли;	
	СтрСведенияОбУпаковке = ЗначениеВСтроку(ТЗУровни); // добавить или обновить сведения об уровне	
	
КонецПроцедуры 


Процедура ДобавитьМаркировку()
	Если ТЗУровни.КоличествоСтрок()=0 Тогда
		Предупреждение("Нет сведений об упаковке");
		Возврат;    
	КонецЕсли;

	Класс = "";
	Если НЕ(СзКлассы.ВыбратьЗначение(Класс,"Класс")=1) Тогда
    	Возврат;
	КонецЕсли;	
	//Проверить - уже введена такая маркировка?
	Маркзнач = "";
	ВвестиСтроку(МаркЗнач,"Значение",50);
	
	СзМаркировки.ДобавитьЗначение(МаркЗнач,Класс);
	ДобавитьМаркВУпак();
КонецПроцедуры


Процедура УбратьМаркировку()
	тстр = СзМаркировки.ТекущаяСтрока();
	Если ПустоеЗначение(тстр) = 1 Тогда
	    Возврат;
	КонецЕсли;
	Если Вопрос("Удалить текущую маркировку ?","Да+Нет")="Нет" Тогда
	    Возврат;
	КонецЕсли;
	
	СзМаркировки.УдалитьЗначение(тстр); 
	ДобавитьМаркВУпак();
КонецПроцедуры

Процедура КликМаркировка()
	поз = СзМаркировки.ТекущаяСтрока();
	Если ПустоеЗначение(поз) = 1 Тогда
	    Возврат;
	КонецЕсли;
	Стр = ""; 	
	рез = СзМаркировки.ПолучитьЗначение(поз,Стр);
	Если ВвестиСтроку(Рез,"Значение",50) = 1 Тогда
		СзМаркировки.УстановитьЗначение(поз,Рез,Стр);    
	КонецЕсли;
	ДобавитьМаркВУпак();	
КонецПроцедуры


//Конец ********Маркировки


Процедура ОбработкаКлика() // корр сведений об упаковке и кол-ве 
	Если ТЗУровни.ТекущаяСтрока()=0 Тогда
		Возврат;    
	КонецЕсли;
	Если ТЗУровни.ТекущаяКолонка()="КолВо" Тогда
		Кол = ТЗУровни.КолВо;
		Если ВвестиЧисло(Кол,"Кол-во",9,0)=1 Тогда
			ТЗУровни.КолВо = Кол;		
		КонецЕсли;
	ИначеЕсли ТЗУровни.ТекущаяКолонка()="Упаковка" Тогда
		Упак = СоздатьОбъект("Справочник.ВСД_ФормыУпаковки");
		Если Упак.Выбрать("Упаковка","ФормаСписка") = 0 Тогда
	    	Возврат;
		КонецЕсли;
		ТЗУровни.Упаковка = Упак.ТекущийЭлемент();
	Иначе
		Возврат;
	КонецЕсли;
	СтрСведенияОбУпаковке = ЗначениеВСтроку(ТЗУровни);
КонецПроцедуры


Процедура ПриОткрытии()
	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
	    СтрСведенияОбУпаковке = Форма.Параметр;
		промТЗ = ЗначениеИзСтроки(СтрСведенияОбУпаковке);
		Если ТипЗначенияСтр(ПромТЗ) = "ТаблицаЗначений" Тогда
	    	промТЗ.Выгрузить(ТЗУровни);
			ТЗУровни.ВидимостьКолонки("Маркировки",0);
		Иначе
			//Предупреждение("Передан неверный параметр");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


Процедура ПриЗакрытии()
	// учесть отмену изменений
//	Если ПустоеЗначение(Форма.Параметр) = 0 Тогда
	    Форма.Параметр = СтрСведенияОбУпаковке;
//	КонецЕсли;
КонецПроцедуры

ТЗУровни.НоваяКолонка("НомерУровня","Число",1,0,,2);
ТЗУровни.НоваяКолонка("Упаковка","Справочник.ВСД_ФормыУпаковки");
ТЗУровни.НоваяКолонка("КолВо","Число",9,0,,5);
ТЗУровни.НоваяКолонка("Маркировки");
ТЗУровни.ВидимостьКолонки("Маркировки",0);

//СЗУровниУпаковки = СоздатьОбъект("СписокЗначений"); //на форме
СЗНомераУровней = СоздатьОбъект("СписокЗначений");
СЗНомераУровней.ДобавитьЗначение(1,"Внутренний уровень.");
СЗНомераУровней.ДобавитьЗначение(2,"Потребительский уровень.");
СЗНомераУровней.ДобавитьЗначение(3,"Промежуточный уровень.");
СЗНомераУровней.ДобавитьЗначение(4,"Торговый уровень.");
СЗНомераУровней.ДобавитьЗначение(5,"Дополнительный уровень.");
СЗНомераУровней.ДобавитьЗначение(6,"Транспортный (Логистический) уровень.");


СзКлассы = СоздатьОбъект("СписокЗначений");
СзКлассы.ДобавитьЗначение("UNDEFINED");
СзКлассы.ДобавитьЗначение("BN");
СзКлассы.ДобавитьЗначение("SSCC");
СзКлассы.ДобавитьЗначение("EAN8");
СзКлассы.ДобавитьЗначение("EAN13");
СзКлассы.ДобавитьЗначение("EAN128");
СзКлассы.ДобавитьЗначение("BUNDLE");

//UNDEFINED 	Класс неопределен. Это значение используется по умолчанию.
//BN 	Номер производственной партии.
//    Важно, чтобы номера партий совпадали при совершении операции незавершённого производства. 
//SSCC 	SSCC-код (глобально-уникальный код грузовых контейнеров - Serial Shipping Container Code).
//EAN8 	Маркировка в соответствии с EAN-8.
//EAN13 	Маркировка в соответствии с EAN-13.
//EAN128 	Маркировка в соответствии с EAN-128.
//BUNDLE 	Маркировка вышестоящей групповой упаковки, например, паллеты. Может использоваться для поиска группы вет.сертификатов для партий, находящихся на данной паллете. 
