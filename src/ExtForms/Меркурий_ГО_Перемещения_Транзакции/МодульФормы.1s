// Автор: Синявский Филипп phsin@kb99.pro
// Все права принадлежат ИП Синявский Ф.А.

Перем ГМ;
Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем КаталогОбработки;
перем ПартияИнфо;
Перем ДокументыИнфо;
Перем ДокументыИнфоПредупреждение;
Перем ВыбСтрока;
Перем ТекСтрока; //курсор в таблице СписокДокументов

//******************************************************************************
 // предопределенная процедура
 //
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
 	ТекСтрока = СписокДокументов.ТекущаяСтрока();
 	
 	Если ЗначениеЗакладки="Перемещения" Тогда
		Форма.ИспользоватьСлой("Основной, СписокДокументов, Перемещения");
		//СписокДокументов.УдалитьСтроки();
		//ЗаполнитьСписокДокументов();
	ИначеЕсли ЗначениеЗакладки="Партии" Тогда
		Форма.ИспользоватьСлой("Основной, Партии");
		//ЗаполнитьПартии();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;     
	
КонецПроцедуры 

//*******************************************
Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Документов: "+СписокДокументов.КоличествоСтрок()+" шт
	|Общий вес: "+Окр(СписокДокументов.Итог("Вес"))+" кг");
	
	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;	      
	ВыбКолво = Окр(ВыбКолво);
	
	//Если ВыбКолво>Партия.Количество Тогда 
	//	Форма.ДокИнфо.Видимость(0);
	//	Форма.ДокПредупреждение.Видимость(1);
	//	ДокументыИнфоПредупреждение =  "Выбрано "+ВыбДок+" док "+ВыбКолво+" кг "+" не хватает "+(ВыбКолво - Партия.Количество);	
	//	Форма.ДокПредупреждение.Заголовок(ДокументыИнфоПредупреждение);
	//Иначе 
	//	Форма.ДокПредупреждение.Видимость(0);
	//	Форма.ДокИнфо.Видимость(1);
	//	ДокументыИнфо = "Выбрано "+ВыбДок+" док "+ВыбКолво+" кг ";	
	//	//ДокументыИнфо=ДокументыИнфо+" останется "+(Партия.Количество - ВыбКолво);
	//КонецЕсли;
КонецПроцедуры

//============================================================
Процедура УбратьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=1;		
	КонецЦикла;	 
	
	ОбновитьИнф();
КонецПроцедуры

//============================================================
Процедура ПометитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.инфо = 36 Тогда 
			СписокДокументов.Пометка=2;		
		КонецЕсли;
	КонецЦикла;	      

	ОбновитьИнф();	
КонецПроцедуры

Процедура ЗаголовокНадпись()
	
	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись


Процедура РаскраситьСписокДокументов( тз )
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл		

		тз.инфо = 35;
		Если (ПустоеЗначение(тз.ВСД)=0) Тогда
			Если СокрЛП(тз.ВСД.Статус)="COMPLETED" Тогда
				тз.инфо = 36;
				тз.сЦвет = цвЗеленый;
			КонецЕсли;
		//ИначеЕсли (ПустоеЗначение(тз.Док.Авто)=1) или 
		//	(Найти( ВРЕГ(СокрЛП(тз.Док.Авто)),"САМОВЫВОЗ" )>0 ) Тогда
		//		тз.инфо = 35;
		//		тз.сЦвет = цвФиолетовый;							
		ИначеЕсли ПустоеЗначение(тз.ХозСубъект.GUID)=1 Тогда 			
			тз.сЦвет = цвКрасный;
		ИначеЕсли (ПустоеЗначение(тз.Площадка)=0) Тогда
			Если (ПустоеЗначение(тз.Площадка.GUID)=0)  Тогда 
				тз.инфо = 36;
				тз.сЦвет = "";							
			КонецЕсли;
		Иначе			
			тз.сЦвет = цвЖелтый;							
		КонецЕсли;
		
	КонецЦикла;
	
	//ТекСтрока = СписокДокументов.ТекущаяСтрока();
	
	СписокДокументов.Загрузить(тз);
	
	СписокДокументов.ВыводитьПиктограммы("Пометка");
	СписокДокументов.ВыводитьПиктограммы("Инфо");

	Если ПустоеЗначение(ТекСтрока)=1 Тогда 
		СписокДокументов.ТекущаяСтрока(1);
	Иначе
		СписокДокументов.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;
КонецПроцедуры

Процедура РаскраситьСписокПартий()
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл		

		Если (СписокПартий.Колво = 0 ) или (СписокПартий.КолвоМест=0) Тогда 
			СписокПартий.сЦвет = цвКрасный;	
		ИначеЕсли (СписокПартий.Колво >= СписокПартий.КолвоСписания) и 
			(СписокПартий.КолвоМест >= СписокПартий.КолвоМестСписания) Тогда
				СписокПартий.сЦвет = цвЗеленый;
		Иначе			
			СписокПартий.сЦвет = цвЖелтый;							
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры



Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Площадка");
		
		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если ПустоеЗначение(СтараяПлощадка)=0 Тогда 
			Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка.Контрагент,0,0)=1 Тогда
				Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
					//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
					СпрПлощадка.Контрагент = "";
					СпрПлощадка.Записать();				
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		СпрПлощадка.НайтиЭлемент(Элемент);
		СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
		СпрПлощадка.Записать();
		//Сообщить("Установили привязку площадки "+СпрПлощадка.Контрагент);
		КонтФормы.Форма.Закрыть();    
		
		СписокДокументов.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());
		
		тзДок = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тзДок);
		
		РаскраситьСписокДокументов( тзДок );		
	ИначеЕсли Элемент.Вид()="ВСД_Партия" Тогда
		//СтараяПлощадка = СписокПартий.ПолучитьЗначение(ВыбСтрока,"Площадка");
		
		//СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		//Если ПустоеЗначение(СтараяПлощадка)=0 Тогда 
		//	Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка.Контрагент,0,0)=1 Тогда
		//		Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
		//			//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
		//			СпрПлощадка.Контрагент = "";
		//			СпрПлощадка.Записать();				
		//		КонецЦикла;
		//	КонецЕсли;
		//КонецЕсли;
		//
		//СпрПлощадка.НайтиЭлемент(Элемент);
		//СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
		//СпрПлощадка.Записать();
		//Сообщить("Установили привязку площадки "+СпрПлощадка.Контрагент);
		КонтФормы.Форма.Закрыть();    
		
		СписокПартий.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		СписокПартий.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		СписокПартий.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест);
		
		РаскраситьСписокПартий();		
		//тзДок = СоздатьОбъект("ТаблицаЗначений");
		//СписокДокументов.Выгрузить(тзДок);
		//
		//РаскраситьСписокДокументов( тзДок );		
		

	КонецЕсли;
	
КонецПроцедуры

Процедура Клик()
	текСтр = СписокДокументов.ТекущаяСтрока();
	текКол = СписокДокументов.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = СписокДокументов.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокДокументов.Пометка=1;
		Иначе
			СписокДокументов.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол="Площадка" Тогда 
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;			
				
		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

Процедура Клик_партии()
	текСтр = СписокПартий.ТекущаяСтрока();
	текКол = СписокПартий.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = СписокПартий.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокПартий.Пометка=1;
		Иначе
			СписокПартий.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол="Партия" Тогда 
		ВыбСтрока = текСтр;
		ТекПартия = СписокПартий.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		//СписокОтбора = СоздатьОбъект("СписокЗначений");
		//
		//Тз.ВыбратьСтроки();
		//Пока ТЗ.ПолучитьСТроку()=1 Цикл
		//	СписокОтбора.ДобавитьЗначение(тз.id);
		//КонецЦикла;			
				
		ОткрытьПодбор("Справочник.ВСД_Партия", "ФормаСписка", ,0, текПартия);
		
	Иначе
		Эл = СписокПартий.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

Процедура ЗаполнитьСписокДокументов()
	Попытка
		
		Если ГМ.ЭтоSQL=1 Тогда 	
			RS = СоздатьОбъект("ODBCRecordset");
			RS.УстБД1С();     
			
			ТекстЗапроса = "
			|SELECT
			|    Жур.IDDoc as [Док $Документ],
			|    Жур.IDDocDef as Док_вид,
			|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_транзакция],
			|	Жур.DocNo as [НомерДок],
			|	$ДокР.Склад as [Склад $Справочник.Склады],
			|	$ДокР.СкладПолучатель as [СкладПолучатель $Справочник.Склады],
			|	SUM($ДокСтроки.Количество) [Количество]
			//|	SUM($ДокСтроки.КоличествоМест) [КоличествоМест],
			|FROM
			|    _1SJourn Жур
			|INNER JOIN 
			|	$ДокументСтроки.ПеремещениеТМЦ as ДокСтроки 
			|		ON Жур.IDDoc = ДокСтроки.IDDoc
			|INNER JOIN 
			|	$Документ.ПеремещениеТМЦ as ДокР 
			|		ON Жур.IDDoc = ДокР.IDDoc
			|Left join 
			|	$Документ.ВСД_транзакция as ДокВСД
			|	ON SUBSTRING($ДокВСД.ДокОснование, 5, 8) = Жур.IDDoc
		//	|		AND $ДокВСД.Статус = 'COMPLETED'
			|WHERE
			|    Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = $ВидДокумента.ПеремещениеТМЦ
			|	and Жур.Closed & 1 = 1
			//|	%УсловиеПоГрузополучателю%
			//|	%УсловиеПоСвойствуТовара%
			//|	%УсловиеПоФирме%
			//|	%УсловиеПоФилиалу%
			|
			|GROUP BY
			|	Жур.IDDoc,
			|	Жур.IDDocDef,
			|	ДокВСД.IDDoc,
			|	Жур.DocNo,
			|	$ДокР.Склад,
			|	$ДокР.СкладПолучатель
			//|	СпрЗн.descr
			|order by Жур.DocNo
			|";
			
			//RS.УложитьСписокОбъектов(ВыбКонтрагент, "#ГруппаК","Контрагенты");
			RS.УстановитьТекстовыйПараметр("НачДата", НачДата);
			RS.УстановитьТекстовыйПараметр("КонДата", КонДата);
			        
			//RS.Отладка(1);
			ТЗ = RS.ВыполнитьИнструкцию(ТекстЗапроса);
			//ТЗ.ВыбратьСтроку();
		  	
		Иначе	
				
			Запрос = ГМ.базаДанных.НовыйЗапрос();
		
			ТекстЗапроса = "
			|SELECT
			|    Жур.IDDoc as [Док :Документ],
			|    Жур.IDDocDef as Док_вид,
			|	Жур.DocNo as [НомерДок],
			|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_транзакция],
			|	ДокР.Склад as [Склад :Справочник.Склады],
			|	ДокР.СкладПолучатель as [СкладПолучатель :Справочник.Склады],		
			|	SUM(ДокСтроки.Количество) [Количество]
			//|	SUM(ДокСтроки.КоличествоМест) [КоличествоМест],
			|FROM
			|    Журнал Жур
			|INNER JOIN 
			|	[ДокументСтроки.Реализация] as ДокСтроки 
			|		ON Жур.IDDoc = ДокСтроки.IDDoc
			|INNER JOIN 
			|	[Документ.ПеремещениеТМЦ] as ДокР 
			|		ON Жур.IDDoc = ДокР.IDDoc
			|Left join 
			|	[Документ.ВСД_транзакция] as ДокВСД
			|	ON SUBSTR(ДокВСД.ДокОснование, 5, 8) = Жур.IDDoc
			//|		AND ДокВСД.Статус = 'COMPLETED'	
			|WHERE
			|    Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = :ВидДокумента.Реализация
			|	and Жур.Closed & 1 = 1
			|	%УсловиеПоГрузополучателю%
			|	%УсловиеПоСвойствуТовара%
			|	%УсловиеПоФирме%
			|
			|GROUP BY
			|	Жур.IDDoc,
			|	Жур.IDDocDef,
			|	Жур.DocNo,
			|	ДокР.Склад,
			|	ДокР.СкладПолучатель
			|order by Жур.DocNo
			|";
		
	//		УсловиеПоГрузополучателю = "";
	//		УсловиеПоСвойствуТовара="";
	//		//Если ПустоеЗначение(ВыбТипПродукции) = 0 Тогда		
	//		//	УсловиеПоСвойствуТовара = "and СпрЗн.ID = :ВыбТипПродукции";
	//		//КонецЕсли;
	//		Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
	//			УсловиеПоГрузополучателю = " and ДокР."+НазваниеРеквизитаГрузополучатель+" IN (SELECT Val FROM ГруппаК) ";
	//			базаДанных.УложитьОбъекты(ВыбКонтрагент, "ГруппаК",, "Контрагенты");
	//		КонецЕсли;
	//		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
	//		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСвойствуТовара%", УсловиеПоСвойствуТовара);
			        
			Запрос.Подставлять("НачДата", НачДата);
			Запрос.Подставлять("КонДата", КонДата);
			//Запрос.Подставлять("ВыбФирма", ВыбФирма);
		
			//Запрос.Отладка();
			ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
			//ТЗ.ВыбратьСтроку();
		КонецЕсли;
			
		СписокДокументов.УдалитьСтроки();
		
		тзДок = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тзДок);
		
		тз.ВыбратьСтроки();
		Ном=0;
		ПредДок="";
		Пока тз.ПолучитьСтроку()=1 Цикл 
			тзДок.НоваяСтрока();
			тзДок.Пометка=1;
			тзДок.Контрагент = тз.Склад;
			тзДок.Грузополучатель = тз.СкладПолучатель;
			тзДок.Док = тз.Док;
			тзДок.Колво = тз.Количество;
			тзДок.Вес = тз.Количество;
			Попытка			
				тзДок.КолвоМест = тз.КоличествоМест;
			Исключение			
			КонецПопытки;
					
			//СписокДокументов.ХозСубъект = НайтиХозСубъект(тз.Склад);
			тзДок.ХозСубъект = Отправитель_ХозСубъект;
			тзДок.Площадка = ГМ.НайтиПлощадкуПоСкладу(тзДок.Грузополучатель);
	
			Попытка
				Если тз.ДокВСД.ПометкаУдаления()=0 Тогда 
					тзДок.ВСД = тз.ДокВСД;
				КонецЕсли;
			Исключение
			КонецПопытки;
			
			тзДок.инфо = 35;
	
		КонецЦикла; 
		    
		РаскраситьСписокДокументов( тзДок);
		ОбновитьИнф();
	Исключение
		Сообщить("Не удалось выполнить запрос по документам. Проверьте параметры
		|"+ ОписаниеОшибки());
	КонецПопытки;
	
	ПометитьВсеДокументы();
КонецПроцедуры


Процедура СоздатьВСД()
	
	Если СписокПартий.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица партий.","!");
		Возврат;
	КонецЕсли;
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
			//	Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
			//	Продолжить;
			//КонецЕсли;
			
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		

		Состояние("Заполнение списка партий ВСД ");
		
		
		Если СписокДокументов.Контрагент.Вид()="Склады" Тогда 
			ХС = Отправитель_ХозСубъект;
		Иначе
			ХС = ГМ.НайтиХозСубъект( СписокДокументов.Контрагент );
		КонецЕсли;
		Если СписокДокументов.Грузополучатель.Вид()="Склады" Тогда
			Площадка = ГМ.НайтиПлощадкуПоСкладу(СписокДокументов.Грузополучатель);
		Иначе
			Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( СписокДокументов.Грузополучатель );
		КонецЕсли;
		
		// создание кастомного ВСД
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_транзакция.ert")=1 Тогда
			
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Док,				"ДокОснование");    
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Контрагент,		"Контрагент");    
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Грузополучатель,	"Грузополучатель");    
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,			"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,				"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение(Перевозчик_ХозСубъект,			"Перевозчик_ХозСубъект");    
			//СписокПараметров.ДобавитьЗначение(Партия,							"Партия");    
			//СписокПараметров.ДобавитьЗначение(ТермическиеУсловияПеревозки,		"ТермическиеУсловияПеревозки");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,				"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( ХС,				"ХС");    
			СписокПараметров.ДобавитьЗначение( Площадка,		"Площадка");    
			СписокПараметров.ДобавитьЗначение( СписокДокументов.Колво,			"Колво");    
			СписокПараметров.ДобавитьЗначение( СписокДокументов.КолвоМест,		"КолвоМест");    
			
			СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,					"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,					"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,				"ВСД_ОсобыеОтметки");    
			
			СписокПараметров.ДобавитьЗначение( СписокПартий,					"СписокПартий");    
				
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_транзакция.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
		Иначе

			//Если ПустоеЗначение(СписокДокументов.Док.Маршрут)=1 Тогда
			//	Сообщить("Не указан маршрут в документе "+СписокДокументов.Док);
			//	Продолжить;
			//КонецЕсли;
	
			ДокВСД = СоздатьОбъект("Документ.ВСД_транзакция");
			ДокВСД.Новый();
			//ДокВСД.НомерДок = ;
			ДокВСД.ДокОснование = СписокДокументов.Док;
			
			//ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
			ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
			
			ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
			
			ДокВСД.Получатель_ХозСубъект = ХС;		
			ДокВСД.Получатель_Площадка = Площадка;					
			ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
	
			//ДокВСД.Производитель_Площадка = Партия.Производитель_Площадка;
			
			ТТН = ДокВСД.ДокОснование.Маршрут;		
			//ТТН = СписокДокументов.Док.НомерМаршрута;	
						
			ДокВСД.ТтнСерия = ""; //ТТН.Серия;
			ДокВСД.ТтнНомер = СписокДокументов.Док.НомерДок;
			ДокВСД.ТтнДата = СписокДокументов.Док.ДатаДок;
			Попытка				
				ДокВСД.номерАвто = ТТН.Авто.НомернойЗнак;
			Исключение
				ДокВСД.номерАвто = "не используется";
			КонецПопытки;
			Если ПустоеЗначение(ДокВСД.номерАвто)=1 Тогда
				ДокВСД.номерАвто = "не используется";
			КонецЕсли;
			
			Попытка
				ДокВСД.Автор = глПользователь;
			Исключение
			КонецПопытки;

			Попытка				
				ДокВСД.Филиал = глПользователь.Филиал;
			Исключение
			КонецПопытки;
			ДокВСД.ФормаВСД = 1;
			//ДокВСД.ТермическоеСостояние = ТермическиеУсловияПеревозки;
			
			ДокВСД.Экспертиза 		= ВСД_Экспертиза;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
			ДокВСД.cargoInspected  	= 1;			
			
			тз = ГМ.СвернутьТч(ДокВСД.ДокОснование);
			
			тз.ВыбратьСтроки();
			Пока тз.ПолучитьСтроку() = 1 Цикл
				Если ПропускатьПустыеСвойства=1 Тогда 
					Если ПустоеЗначение(тз.Свойство)=1 Тогда
						Сообщить("Пропущено пустое значение, количество = "+тз.Количество,"!");
						Продолжить;
					КонецЕсли;
				КонецЕсли;			
				
				стр=0;
				
				Если СписокПартий.НайтиЗначение(тз.ВСД_Продукция_Элемент,стр,"ВСД_Продукция_Элемент")>0 Тогда 
					Партия = СписокПартий.ПолучитьЗначение(стр,"Партия");
				Иначе
					Сообщить("Не найдена партия для свойства "+тз.ВСД_Продукция_Элемент+"
					|документ "+ДокВСД.ДокОснование+" пропущен","!");
					Продолжить;
				КонецЕсли;
				ДокВСД.НоваяСтрока();
				ДокВСД.Партия = Партия;
				ДокВСД.Количество = тз.Количество;
				ДокВСД.КоличествоМест = тз.КоличествоМест;			
				ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
				ДокВСД.ФормаУпаковки = ДокВСД.Партия.ФормаУпаковки;
				ДокВСД.Продукция = ДокВСД.Партия.Продукция;
				ДокВСД.ВидПродукции = ДокВСД.Партия.ВидПродукции;

				ДокВСД.Продукция_Элемент 	= ДокВСД.Партия.Продукция_Элемент;
				ДокВСД.ТермическоеСостояние = ДокВСД.Продукция_Элемент.ТермическиеУсловияПеревозки;
				
			КонецЦикла;
			
			//ДокВСД.СвойствоНоменклатурыЗначение = ВыбТипПродукции;
			
			//Если ПустоеЗначение( СокрЛП(ДокВСД.номерАвто) )=1 Тогда
			//	Сообщить("В документе "+ДокВСД.ТтнНомер+"не указан № автомобиля 
			//	|ВСД не сформирован");
			//	Продолжить;
			//КонецЕсли;
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		СписокДокументов.ВСД = ДокументСсылка;
		
		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");		
	КонецЦикла;

	//тзДок = СоздатьОбъект("ТаблицаЗначений");
	//СписокДокументов.Выгрузить(тзДок);
	
	//РаскраситьСписокДокументов(тзДок);	
	
	
КонецПроцедуры

//В этой функции выбираем партию, которая подходит под количество и свойство
//выбираем партию, которая подходит под условия отбора: количество, свойство, площадка
Функция НайтиПервуюПартию(Продукция_Элемент)
	Рез="";
	
	Спр = СоздатьОбъект("Справочник.ВСД_Партия");
	Если Спр.ВыбратьЭлементыПоРеквизиту("Продукция_Элемент",Продукция_Элемент,1)=1 Тогда 
		Пока Спр.ПолучитьЭлемент()=1 Цикл
			Если Спр.Получатель_Площадка <> Отправитель_Площадка Тогда
				Продолжить;
			КонецЕсли;
			
			Если (Спр.ПометкаУдаления()=0) и (Спр.Количество>0) Тогда 
				возврат Спр.ТекущийЭлемент();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат рез;
КонецФункции

Процедура ЗаполнитьПартии()

	////Сохраним привязку партии к свойству 
	//Если ПустоеЗначение(ВыбТипПродукции)=0 Тогда 
	//	Спр = СоздатьОбъект("Справочник.ВСД_Партия");
	//	Спр.НайтиЭлемент(Партия);	
	//	Спр.СвойствоНоменклатурыЗначение = ВыбТипПродукции;
	//	Спр.Записать();                              
	//КонецЕсли;

	
	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	//Если ПустоеЗначение(Партия)=1 Тогда
	//	Сообщить("Не выбран параметр Партия ","!");			
	//	Возврат;
	//КонецЕсли;			
	//Если ПустоеЗначение(ТермическиеУсловияПеревозки)=1 Тогда
	//	Сообщить("Не выбран ТермическиеУсловияПеревозки ","!");			
	//	Возврат;
	//КонецЕсли;			
	
	Форма.Закладки.ТекущаяСтрока(2);
	//ЗаполнитьПартии();
	ПриВыбореЗакладки(2,"Партии");
		
	СписокПартий.УдалитьСтроки();
	
	тзНовыеВСД = СоздатьОбъект("ТаблицаЗначений");
	тзНовыеВСД.НоваяКолонка("Документ");
	тзНовыеВСД.НоваяКолонка("ВСД_Продукция_Элемент");
	тзНовыеВСД.НоваяКолонка("Колво");
	тзНовыеВСД.НоваяКолонка("КолвоМест");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
			//	// в накладной несколько видов Продукции - проверяем 
			//	// если ВСД [Completed] для Продукциия - тогда пропускаем
			//	//Если ( СписокДокументов.ВСД.Партия = Партия ) Тогда 
			//		Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
			//		Продолжить;
			//	//КонецЕсли;
			//КонецЕсли;
			
			//Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
			//	Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
			//	Продолжить;
			//КонецЕсли;		
		КонецЕсли;		

		Состояние("Заполнение списка партий ВСД ");
		
		тз = ГМ.СвернутьТч(СписокДокументов.Док);
				
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл

			тзНовыеВСД.НоваяСтрока();
			
			стр=0;
			Если СписокПартий.НайтиЗначение(тз.ВСД_Продукция_Элемент,стр,"ВСД_Продукция_Элемент")>0 Тогда 
				колво = Число(СписокПартий.ПолучитьЗначение(стр, "КолвоСписания"));
				СписокПартий.УстановитьЗначение(стр,"КолвоСписания", колво+тз.Количество);
				колвоМест = Число(СписокПартий.ПолучитьЗначение(стр, "КолвоМестСписания"));
				СписокПартий.УстановитьЗначение(стр,"КолвоМестСписания", колвоМест+тз.КоличествоМест);
			Иначе
				СписокПартий.НоваяСтрока();
				СписокПартий.ВСД_Продукция_Элемент = тз.ВСД_Продукция_Элемент;
				СписокПартий.КолвоСписания = тз.Количество;
				СписокПартий.КолвоМестСписания = тз.КоличествоМест;
			КонецЕсли;
			тзНовыеВСД.Документ = СписокДокументов.Док;
			тзНовыеВСД.ВСД_Продукция_Элемент = тз.ВСД_Продукция_Элемент;
			тзНовыеВСД.Колво = СписокДокументов.Колво;
			тзНовыеВСД.КолвоМест = СписокДокументов.КолвоМест;			
						
		КонецЦикла;
	КонецЦикла;
	
	//Выберем партии автоматом
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Попытка
			СписокПартий.Партия = НайтиПервуюПартию(СписокПартий.Свойство);
			СписокПартий.Колво = СписокПартий.Партия.Количество;
			СписокПартий.КолвоМест = СписокПартий.Партия.КоличествоМест;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	РаскраситьСписокПартий();

КонецПроцедуры

Процедура ПроверитьПартию()
	//Если Партия.ТермическоеСостояние=0 Тогда 
	//	Предупреждение("Не указано термическое состояние партии");
	//	Партия = "";
	//	Возврат;
	//КонецЕсли;
	//Если ПустоеЗначение(Партия)=1 Тогда 
	//	ПартияИнфо = "<<Партия не выбрана>>";
	//Иначе
	//	ПартияИнфо = "Партия: "+Партия.Количество+" кг - "+СокрЛП(Партия.НаименованиеПродукции);
	//КонецЕсли;
	
	ОбновитьИнф();
КонецПроцедуры	

//*******************************************
Процедура ПриОткрытии()
	
   //{Интеграционный модуль для переопределения функций, плюс несколько базовых функций
    глМеркурийИнтеграция 		= СоздатьОбъект("МеркурийИнтеграция");

    ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
    ГМ.Инициализация();        
	ГМ.ЗагрузитьПараметры();
    ГМ.ЗагрузитьПараметрыВФорму(Контекст);

    //Переопределение функций, если они определены в модуле
    глМеркурийИнтеграция.Инициализация(ГМ);    
    //}		
	
	ЗаголовокНадпись();   
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Перемещения");
	Форма.Закладки.ДобавитьЗначение("Партии");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, СписокДокументов, Перемещения");
	
	Партия = "";
	
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
		
		//Команда = Парам.Получить("Команда");
		//
		//Если Команда="ОтправитьВсдИсходящие" Тогда
		//	
		//	НачДата = Парам.Получить("НачДата");
		//	КонДата = Парам.Получить("КонДата");
		//	Если ПустоеЗначение(НачДата)=1 Тогда
		//		НачДата = ТекущаяДата();
		//	КонецЕсли;
		//	Если ПустоеЗначение(КонДата)=1 Тогда 
		//		КонДата = ТекущаяДата();
		//	КонецЕсли;
		//	Сообщить("отправляются ВСД исходящие за период "+ПериодСтр(НачДата, КонДата));
		//	
		//	СписокВСД = Парам.Получить("СписокВСД");
		
		Если ПустоеЗначение(Парам)=0 тогда 
			Для Д=1 По Парам.РазмерСписка() Цикл
				Док = Парам.ПолучитьЗначение(Д);
				СписокДокументов.НоваяСтрока();
				СписокДокументов.Пометка= 1;
				//СписокДокументов.инфо = ;
				СписокДокументов.Док = Док;
				//СписокДокументов.ВСД = ;
				СписокДокументов.Колво = Док.ВесДокумента;
				СписокДокументов.Вес = Док.ВесДокумента;
				СписокДокументов.КолвоМест = Док.КоличествоМестДокумента;
				СписокДокументов.Контрагент = Док.Контрагент;
				СписокДокументов.Грузополучатель = Док.ПолучитьАтрибут(НазваниеРеквизитаГрузополучатель);
				СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(СписокДокументов.Контрагент);
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту(СписокДокументов.Грузополучатель);
			КонецЦикла;
			
			тз = СоздатьОбъект("ТаблицаЗначений");
			СписокДокументов.Выгрузить(тз);
			РаскраситьСписокДокументов(тз);
			
			ПометитьВсеДокументы();	
		КонецЕсли;
	Иначе
		//стандартное заполнение документов
		ЗаполнитьСписокДокументов();
	КонецЕсли;   

КонецПроцедуры

Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
КонецФункции


Процедура ОтправитьВСД()
	
	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 		
			Если ПроверитьВСД(СписокДокументов.ВСД)=1 Тогда 
				СписокВСД.ДобавитьЗначение(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ.ОтправитьВсе_ВСД_Транзакция(СписокВСД, НачДата, КонДата);
	
КонецПроцедуры

Процедура ПолучитьПартии()
	ЗаписьЖурналаРегистрации("Меркурий получение партий ");
	
	ГМ.ПолучитьПартии(Отправитель_Площадка);
	
КонецПроцедуры

Процедура Реестр()
	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		
		Таб.ВывестиСекцию("Строка");		
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");	
КонецПроцедуры

Процедура ЗагрузитьПлощадки()
	
	ГМ.ЗагрузитьПлощадки(СписокДокументов.ХозСубъект);

	ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"Реализации");
КонецПроцедуры

процедура выбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока()));
		ЗаполнитьСписокДокументов();
	конецесли;
конецпроцедуры

Процедура БыстрыйВыборПартии()
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = "
	|эл = Справочник.ВСД_Партия.ТекущийЭлемент;
	|Свво = Справочник.ВСД_Партия.СвойствоНоменклатурыЗначение;
	|Кол = Справочник.ВСД_Партия.Количество;
	|Код = Справочник.ВСД_Партия.Код;
	|
	|Условие ((Свво = ВыбТипПродукции) ); //или (Свво = '')
	|Функция Колво = Сумма(Кол);
	|
	|группировка эл Без Групп Упорядочить по Эл.Код;
	|Группировка Свво;
	|";
	тз = СоздатьОбъект("ТаблицаЗначений");
	тз.НоваяКолонка("Партия",,,,,30);
	тз.НоваяКолонка("Свво",,,,,30);
	тз.НоваяКолонка("Колво",,,,,30);
	Запрос.Выполнить(ТекстЗапроса);
	
	Пока Запрос.Группировка(1,-1)=1 Цикл
		тз.НоваяСтрока();
		тз.Партия = Запрос.эл;
		тз.Колво = Запрос.Колво;
		Пока Запрос.Группировка(2)=1 Цикл
			тз.Свво = Запрос.Свво;
		КонецЦикла;
	КонецЦикла;
	//Запрос.Выгрузить(тз);
	
	Если тз.ВыбратьСтроку()=1 Тогда
		Партия = тз.Партия;
	КонецЕсли;
	
	//СпрПартии = СоздатьОбъект("Справочник.ВСД_Партия");
	//СпрПартии.Выбрать("Партия ВСД","ФормаСписка");
КонецПроцедуры

Процедура Создать_ВСД_Производство()
	
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(СписокПартий.Партия)=0 Тогда
			Сообщить("В строке партий № "+СписокПартий.НомерСтроки+" указана партия. Пропускаем...");
			Продолжить;
		КонецЕсли;

		//Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
		//	//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
		//	//	Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
		//	//	Продолжить;
		//	//КонецЕсли;
		//	
		//	Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
		//		Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
		//		Продолжить;
		//	КонецЕсли;		
		//КонецЕсли;		

		Состояние("Создание ВСД_Производство ");
				
		
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			//
			
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,				"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,					"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( СписокПартий.КолвоСписания,			"Колво");    
			СписокПараметров.ДобавитьЗначение( СписокПартий.КолвоМестСписания,		"КолвоМест");    
			СписокПараметров.ДобавитьЗначение( СписокПартий.ВСД_Продукция_Элемент,	"Продукция_Элемент");    
			//
			СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,		"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,	"ВСД_ОсобыеОтметки");    

			СписокПараметров.ДобавитьЗначение( НачДата,				"НачДата");
			СписокПараметров.ДобавитьЗначение( КонДата,				"КонДата");    
			
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}
		
		Иначе
			
			ДокВСД = СоздатьОбъект("Документ.ВСД_Производство");
			ДокВСД.Новый();
			//ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
			ДокВСД.ДатаДок = НачДата;			
			
			ДокВСД.Производитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Производитель_площадка = Отправитель_Площадка;
			
			Попытка				
				ДокВСД.Автор = глПользователь;
			Исключение
			КонецПопытки;
			Попытка				
				ДокВСД.Филиал = глПользователь.Филиал;
			Исключение
			КонецПопытки;
			
			ДокВСД.Экспертиза 		= ВСД_Экспертиза;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
							
			ДокВСД.НоваяСтрока();
			
			ДокВСД.Продукция_Элемент 	= СписокПартий.ВСД_Продукция_Элемент;
			ДокВСД.Количество 			= СписокПартий.КолвоСписания;
			ДокВСД.КоличествоМест 		= СписокПартий.КолвоМестСписания;			
			ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			ДокВСД.ФормаУпаковки 		= ДокВСД.Продукция_Элемент.ФормаУпаковки;
			ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
			ДокВСД.ВидДвижения 			= 1;
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
			
			
			ДокВСД.ЗавершитьОперацию = 1;
			ДокВСД.ДатаИзготовления1 = НачДата;
			Если КонДата>НачДата Тогда
				ДокВСД.ДатаИзготовления2 = КонДата;
			КонецЕсли;
			ДокВСД.ДатаСрокГодности1 = ДокВСД.ДатаИзготовления1+ДокВСД.Продукция_Элемент.СрокГодности;
				
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		СписокПартий.ВСД_Производство = ДокументСсылка;
		
		Сообщить(" создан документ "+СписокПартий.ВСД_Производство,"i");		
	КонецЦикла;
	
КонецПроцедуры


Функция ПроверитьВСД_Производство(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	//Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
	//	Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
	//	Возврат 0;
	//КонецЕсли;
	
	Возврат 1;
КонецФункции

Процедура ВыбратьПартию_ВСД_Производство()
	СпрПартия = СоздатьОбъект("Справочник.ВСД_Партия");
	
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(СписокПартий.ВСД_Производство)=1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СписокПартий.ВСД_Производство.Проведен()=1 Тогда 
			Если СпрПартия.ВыбратьЭлементыПоРеквизиту("ДокОснование", СписокПартий.ВСД_Производство, 0, 0)=1 Тогда 
				Пока СпрПартия.ПолучитьЭлемент()=1 Цикл
					Если СпрПартия.ПометкаУдаления()=1 Тогда 
						Продолжить;
					КонецЕсли;
					Если СпрПартия.СвойствоНоменклатурыЗначение <> СписокПартий.Свойство Тогда
						Продолжить;
					КонецЕсли;
					
					СписокПартий.Партия = СпрПартия.ТекущийЭлемент();
					СписокПартий.Колво = СписокПартий.Партия.Количество;
					СписокПартий.КолвоМест = СписокПартий.Партия.КоличествоМест;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	РаскраситьСписокПартий();
КонецПроцедуры

Процедура Отправить_ВСД_Производство()

	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПроверитьВСД_Производство(СписокПартий.ВСД_Производство)=1 Тогда 
			СписокВСД.ДобавитьЗначение(СписокПартий.ВСД_Производство);
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД Производство");
	
	ГМ.ОтправитьВсе_ВСД_Производство(СписокВСД, НачДата, КонДата);

	ВыбратьПартию_ВСД_Производство();
КонецПроцедуры

Процедура Очистить_Партию()
	СписокПартий.Партия="";	
КонецПроцедуры

НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов.НоваяКолонка("сЦвет",,,,,1,);
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("инфо",,,,,3,);
СписокДокументов.НоваяКолонка("Грузополучатель",,,,,70,);
СписокДокументов.НоваяКолонка("Площадка",,,,,30,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Колво",,,,,10,);
СписокДокументов.НоваяКолонка("Вес",,,,,10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,,10,);

СписокДокументов.НоваяКолонка("Док",,,,,30,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,10,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,10,);

СписокДокументов.ВыводитьПиктограммы("Пометка");
СписокДокументов.ВыводитьПиктограммы("Инфо");


СписокПартий.НоваяКолонка("сЦвет",,,,,1,);
СписокПартий.НоваяКолонка("ВСД_Продукция_Элемент",,,,,15,);
СписокПартий.НоваяКолонка("Партия",,,,,15,);
СписокПартий.НоваяКолонка("Колво","Число",,,,10,);
СписокПартий.НоваяКолонка("КолвоМест","Число",,,,10,);
СписокПартий.НоваяКолонка("КолвоСписания","Число",,,,10,);
СписокПартий.НоваяКолонка("КолвоМестСписания","Число",,,,10,);
СписокПартий.НоваяКолонка("ВСД_Производство",,,,,10,);

ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

ПартияИнфо = "<<выберите партию>>";

НазваниеВидаДокументаРеализация = "Реализация";
НазваниеРеквизитаКоличество = "Количество";

ЗагрузитьВнешнююКомпоненту("1cpp.dll");
ЗагрузитьВнешнююКомпоненту("formex.dll");

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();

