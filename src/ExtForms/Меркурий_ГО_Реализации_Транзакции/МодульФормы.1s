Перем ГМ;
Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем КаталогОбработки;
Перем ВыбСтрока;
Перем Филиал;

Перем ТекСтрока; //курсор в таблице СписокДокументов

//=========================== СЛУЖЕБНЫЕ ФУНКЦИИ =============================

Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Документов: "+СписокДокументов.КоличествоСтрок()+", количество: "+Окр(СписокДокументов.Итог("Вес"))+" ");
	
	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;	      
	ВыбКолво = Окр(ВыбКолво);

	Форма.ИнфоВыбор.Заголовок("Выбрано "+ВыбДок+" документов, количество = "+ВыбКолво+" ");
	
КонецПроцедуры

Процедура ЗаголовокНадпись()
	
	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

Процедура РаскраситьСписокДокументов(тзДок="")
	
	Если ПустоеЗначение(тзДок)=1 Тогда 
		тз = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тз);
	Иначе
		тз = тзДок;
	КонецЕсли;	
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл		

		Если (ПустоеЗначение(тз.ВСД)=0) Тогда
			Если СокрЛП(тз.ВСД.Статус)="COMPLETED" Тогда
				тз.сЦвет = цвЗеленый;
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(тз.ХозСубъект.GUID)=1 Тогда 			
			тз.сЦвет = цвКрасный;
		ИначеЕсли (ПустоеЗначение(тз.Площадка)=0) Тогда
			Если (ПустоеЗначение(тз.Площадка.GUID)=0)  Тогда 
				тз.сЦвет = "";							
			КонецЕсли;
		Иначе			
			тз.сЦвет = цвЖелтый;							
		КонецЕсли;
		
	КонецЦикла;
	
	ТекСтрока = СписокДокументов.ТекущаяСтрока();
	
	СписокДокументов.Загрузить(тз);
	
	СписокДокументов.ВыводитьПиктограммы("Пометка");

	Если ПустоеЗначение(ТекСтрока)=1 Тогда 
		СписокДокументов.ТекущаяСтрока(1);
	Иначе
		СписокДокументов.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;
КонецПроцедуры

Процедура РаскраситьСписокПартий()
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл		

		Если (СписокПартий.Колво = 0 ) или (СписокПартий.КолвоМест=0) Тогда 
			СписокПартий.сЦвет = цвКрасный;	
		ИначеЕсли (СписокПартий.Колво >= СписокПартий.КолвоСписания) и 
			(СписокПартий.КолвоМест >= СписокПартий.КолвоМестСписания) Тогда
				СписокПартий.сЦвет = цвЗеленый;
		Иначе			
			СписокПартий.сЦвет = цвЖелтый;							
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


Процедура Клик()
	текСтр = СписокДокументов.ТекущаяСтрока();
	текКол = СписокДокументов.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = СписокДокументов.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокДокументов.Пометка=1;
		Иначе
			СписокДокументов.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол="Площадка" Тогда 
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;			
				
		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

Процедура Клик_партии()
	текСтр = СписокПартий.ТекущаяСтрока();
	текКол = СписокПартий.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = СписокПартий.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокПартий.Пометка=1;
		Иначе
			СписокПартий.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол="Партия" Тогда 
		ВыбСтрока = текСтр;
		ТекПартия = СписокПартий.ПолучитьЗначение(ТекСтр,текКол);
		Тек_ВСД_Продукция_Элемент = СписокПартий.ПолучитьЗначение(ТекСтр,"ВСД_Продукция_Элемент");
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		//СписокОтбора = СоздатьОбъект("СписокЗначений");
		//
		//Тз.ВыбратьСтроки();
		//Пока ТЗ.ПолучитьСТроку()=1 Цикл
		//	СписокОтбора.ДобавитьЗначение(тз.id);
		//КонецЦикла;			
		КонтекстОтбора = СоздатьОбъект("СписокЗначений");
		КонтекстОтбора.ДобавитьЗначение(ТекПартия,"Партия");
		КонтекстОтбора.ДобавитьЗначение(Тек_ВСД_Продукция_Элемент,"ВСД_Продукция_Элемент");
		КонтекстОтбора.ДобавитьЗначение(Отправитель_Площадка, "Площадка");
				
		ОткрытьПодбор("Справочник.ВСД_Партия", "ФормаСписка",КонтекстОтбора,0, текПартия);
		
	Иначе
		Эл = СписокПартий.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

// перенесена в ГМ = Глобальный модуль
//Функция СвернутьТчПоСвойству(Док)
//	тзДок = СоздатьОбъект("ТаблицаЗначений");
//	Док.ВыгрузитьТабличнуюЧасть(тзДок);
//	
//	тзРез = СоздатьОбъект("ТаблицаЗначений");
//	тзРез.НоваяКолонка("ВСД_Продукция_Элемент");
//	тзРез.НоваяКолонка("Количество");
//	тзРез.НоваяКолонка("КоличествоМест");
//	
//	тзДок.ВыбратьСтроки();
//	Пока тзДок.ПолучитьСтроку() = 1 Цикл
//		ВремНоменклатура = тзДок.ПолучитьЗначение(тзДок.НомерСтроки, ГМ.НазваниеРеквизитаНоменклатура());
//		Если ПропускатьПустыеСвойства=1 Тогда 
//			Если ПустоеЗначение(ВремНоменклатура.ВСД_Продукция_Элемент)=1 Тогда
//				Сообщить("["+тзДок.Номенклатура+"] количество = "+тзДок.Количество+" не указан ВСД_Продукция_Элемент - пропущен","!");
//				Продолжить;
//			КонецЕсли;
//		КонецЕсли;			
//		
//		тзРез.НоваяСтрока();
//		 
//		тзРез.ВСД_Продукция_Элемент = ВремНоменклатура.ВСД_Продукция_Элемент;//Дима тзДок.Номенклатура.ВСД_Продукция_Элемент;
//		тзРез.Количество = тзДок.Количество;
//		тзРез.КоличествоМест = тзДок.ПолучитьЗначение(тзДок.НомерСтроки, НазваниеРеквизитаКоличествоМест );
//	КонецЦикла;
//		
//	тзРез.Свернуть("ВСД_Продукция_Элемент","Количество, КоличествоМест");
//	
//	Возврат тзРез;
//КонецФункции	

//выбираем партию, которая подходит под условия отбора: количество, свойство, площадка
Функция НайтиПервуюПартию(Продукция_Элемент)
	Рез="";
	
	Спр = СоздатьОбъект("Справочник.ВСД_Партия");
	Если Спр.ВыбратьЭлементыПоРеквизиту("Продукция_Элемент",Продукция_Элемент,1)=1 Тогда 
		Пока Спр.ПолучитьЭлемент()=1 Цикл
			Если Спр.Получатель_Площадка <> Отправитель_Площадка Тогда
				Продолжить;
			КонецЕсли;
			
			Если (Спр.ПометкаУдаления()=0) и (Спр.Количество>0) Тогда 
				возврат Спр.ТекущийЭлемент();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат рез;
КонецФункции

Процедура ВыбратьПартию_ВСД_Производство()
	СпрПартия = СоздатьОбъект("Справочник.ВСД_Партия");
	
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(СписокПартий.ВСД_Производство)=1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СписокПартий.ВСД_Производство.Проведен()=1 Тогда 
			Если СпрПартия.ВыбратьЭлементыПоРеквизиту("ДокОснование", СписокПартий.ВСД_Производство, 0, 0)=1 Тогда 
				Пока СпрПартия.ПолучитьЭлемент()=1 Цикл
					Если СпрПартия.ПометкаУдаления()=1 Тогда 
						Продолжить;
					КонецЕсли;
					Если СпрПартия.Продукция_Элемент <> СписокПартий.ВСД_Продукция_Элемент Тогда
						Продолжить;
					КонецЕсли;
					
					СписокПартий.Партия = СпрПартия.ТекущийЭлемент();
					СписокПартий.Колво = СписокПартий.Партия.Количество;
					СписокПартий.КолвоМест = СписокПартий.Партия.КоличествоМест;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	РаскраситьСписокПартий();
КонецПроцедуры


//=========================== ПЕЧАТНЫЕ ФОРМЫ =============================

Процедура Реестр()
	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		
		Таб.ВывестиСекцию("Строка");		
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");	
КонецПроцедуры

//=========================== ФУНКЦИИ КНОПОК =============================

Процедура ЗаполнитьСписокДокументов_Реализации()  
    Если  ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert")=1 Тогда
		//{ переопределение функции заполнения списка документов 
		// интеграция переопределяется в \Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert
		//
		СписокПараметров = СоздатьОбъект("СписокЗначений");
		СписокПараметров.ДобавитьЗначение(НачДата,			"НачДата");    
		СписокПараметров.ДобавитьЗначение(КонДата,			"КонДата");    
		СписокПараметров.ДобавитьЗначение(ВыбКонтрагент,	"ВыбКонтрагент");    
		СписокПараметров.ДобавитьЗначение(ВыбФирма,			"ВыбФирма");    
			
		ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert");
		
		тз = "";
		
		Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда				
			тз = СписокПараметров.Получить("ТЗ");				
		Иначе
			Возврат;
		КонецЕсли; 			
		Если ПустоеЗначение(ТЗ)=1 Тогда
			Предупреждение("В подключаемом модуле не удалось заполнить список документов","!");
			Возврат;
		КонецЕсли;
		//}
	Иначе // стандартный запрос
		тз = ГМ.ПолучитьТзРеализаций(НачДата, КонДата, ВыбКонтрагент);
	КонецЕсли;	

	СписокДокументов.УдалитьСтроки();
	
	тзДок = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тзДок);
	
	тз.ВыбратьСтроки();
	Ном=0;
	ПредДок="";
	Пока тз.ПолучитьСтроку()=1 Цикл 
		тзДок.НоваяСтрока();
		тзДок.Пометка=1;
		тзДок.Контрагент = тз.Контрагент;
		тзДок.Грузополучатель = тз.Грузополучатель;
		тзДок.Док = тз.Док;
		тзДок.Колво = тз.Количество;
		тзДок.Вес = тз.Количество;
		Попытка			
			тзДок.КолвоМест = тз.КоличествоМест;
		Исключение			
		КонецПопытки;
				
		тзДок.ХозСубъект = ГМ.НайтиХозСубъект(тз.Контрагент);
		Если ПустоеЗначение(тзДок.ХозСубъект)=0 Тогда
			тзДок.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( тзДок.Грузополучатель);
		КонецЕсли;

		Попытка
			Если тз.ДокВСД.ПометкаУдаления()=0 Тогда 
				тзДок.ВСД = тз.ДокВСД;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
	КонецЦикла; 
	      
	РаскраситьСписокДокументов( тзДок );
	ОбновитьИнф();
КонецПроцедуры

процедура ВыбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока()));
		СписокДокументов.УдалитьСтроки();
		ЗаполнитьСписокДокументов_Реализации();
	конецесли;
конецпроцедуры

Процедура СоздатьВСД()
	
	Если СписокПартий.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица партий.","!");
		Возврат;
	КонецЕсли;
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
			//	Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
			//	Продолжить;
			//КонецЕсли;
			
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		

		Состояние("Заполнение списка партий ВСД ");
				
		//Если СписокДокументов.Контрагент.Вид()="Склады" Тогда 
		//	ХС = Отправитель_ХозСубъект;
		//Иначе
		//	ХС = ГМ.НайтиХозСубъект( СписокДокументов.Контрагент );		
		//КонецЕсли;
		//Если СписокДокументов.Грузополучатель.Вид()="Склады" Тогда
		//	Площадка = ГМ.НайтиПлощадкуПоСкладу(СписокДокументов.Грузополучатель);
		//Иначе
		//	Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( СписокДокументов.Грузополучатель );
		//КонецЕсли;
		ХС = СписокДокументов.ХозСубъект;
		Площадка = СписокДокументов.Площадка;
		
		// создание кастомного ВСД
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_транзакция.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_транзакция.ert
			//
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Док,				"ДокОснование");    
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Контрагент,		"Контрагент");    
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Грузополучатель,	"Грузополучатель");    
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,			"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,				"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение(Перевозчик_ХозСубъект,			"Перевозчик_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,				"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( ХС,				"ХС");    
			СписокПараметров.ДобавитьЗначение( Площадка,		"Площадка");    
			СписокПараметров.ДобавитьЗначение( СписокДокументов.Колво,			"Колво");    
			СписокПараметров.ДобавитьЗначение( СписокДокументов.КолвоМест,		"КолвоМест");    
			//СписокПараметров.ДобавитьЗначение( ВСД_Продукция_Свойство,			"ВыбВидСвойств");
			
			СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,					"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,					"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,				"ВСД_ОсобыеОтметки");    
			
			СписокПараметров.ДобавитьЗначение( СписокПартий,					"СписокПартий");    
				
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_транзакция.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}
			
		Иначе
			// стандартное создание ВСД
				
			ДокВСД = СоздатьОбъект("Документ.ВСД_транзакция");
			ДокВСД.Новый();
			ДокВСД.ДокОснование = СписокДокументов.Док;			
			ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;			
			ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Отправитель_Площадка = Отправитель_Площадка;			
			ДокВСД.Получатель_ХозСубъект = ХС;		
			ДокВСД.Получатель_Площадка = Площадка;					
			ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
			
			ТТН = ДокВСД.ДокОснование.Маршрут;		
			//ТТН = СписокДокументов.Док.НомерМаршрута;	
						
			ДокВСД.ТтнСерия = ""; //ТТН.Серия;
			ДокВСД.ТтнНомер = СписокДокументов.Док.НомерДок;
			ДокВСД.ТтнДата = СписокДокументов.Док.ДатаДок;
			Попытка				
				ДокВСД.номерАвто = ТТН.Авто.НомернойЗнак;
				Если ПустоеЗначение(ДокВСД.номерАвто)=1 Тогда
					ДокВСД.номерАвто = "не используется";
				КонецЕсли;
			Исключение
				ДокВСД.номерАвто = "не используется";
			КонецПопытки;
			
			Попытка
				ДокВСД.Автор = глПользователь;
			Исключение
			КонецПопытки;

			Попытка				
				ДокВСД.Филиал = глПользователь.Филиал;
			Исключение
			КонецПопытки;
			ДокВСД.ФормаВСД = 1;			
			ДокВСД.Экспертиза 		= ВСД_Экспертиза;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
			ДокВСД.cargoInspected  	= 1;			
			
			тз = ГМ.СвернутьТч(ДокВСД.ДокОснование);
			
			тз.ВыбратьСтроки();
			Пока тз.ПолучитьСтроку() = 1 Цикл
				
				стр=0;				
				Если СписокПартий.НайтиЗначение(тз.ВСД_Продукция_Элемент,стр,"ВСД_Продукция_Элемент")>0 Тогда 
					Партия = СписокПартий.ПолучитьЗначение(стр,"Партия");
				Иначе
					Сообщить("Не найдена партия для свойства "+тз.ВСД_Продукция_Элемент+"
					|документ "+ДокВСД.ДокОснование+" пропущен","!");
					Продолжить;
				КонецЕсли;
				ДокВСД.НоваяСтрока();
				ДокВСД.Партия = Партия;
				ДокВСД.Количество = тз.Количество;
				ДокВСД.КоличествоМест = тз.КоличествоМест;			
				ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
				ДокВСД.ФормаУпаковки = ДокВСД.Партия.ФормаУпаковки;
				ДокВСД.Продукция = ДокВСД.Партия.Продукция;
				ДокВСД.ВидПродукции = ДокВСД.Партия.ВидПродукции;

				ДокВСД.Продукция_Элемент 	= тз.ВСД_Продукция_Элемент;
				ДокВСД.ТермическоеСостояние = ДокВСД.Продукция_Элемент.ТермическиеУсловияПеревозки;
				ДокВСД.НаименованиеПродукции = тз.ВСД_Продукция_Элемент.Наименование;
			КонецЦикла;			
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		СписокДокументов.ВСД = ДокументСсылка;
		
		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");		
	КонецЦикла;

	//РаскраситьСписокДокументов();		
	
КонецПроцедуры


Процедура ОтменитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=1;		
	КонецЦикла;	 
	
	ОбновитьИнф();
КонецПроцедуры

Процедура ВыделитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.сЦвет = "" Тогда 
			СписокДокументов.Пометка=2;		
		КонецЕсли;
	КонецЦикла;	      

	ОбновитьИнф();	
КонецПроцедуры

Процедура ЗаполнитьПартии()
	
	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	
	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Основной, Партии");
	//ЗаполнитьПартии();
	//ПриВыбореЗакладки(2,"Партии");
		
	СписокПартий.УдалитьСтроки();
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
			//	// в накладной несколько видов Продукции - проверяем 
			//	// если ВСД [Completed] для Продукциия - тогда пропускаем
			//	//Если ( СписокДокументов.ВСД.Партия = Партия ) Тогда 
			//		Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
			//		Продолжить;
			//	//КонецЕсли;
			//КонецЕсли;
			
			//Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
			//	Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
			//	Продолжить;
			//КонецЕсли;		
		КонецЕсли;		

		Состояние("Заполнение списка партий ВСД ");
		
		тз = ГМ.СвернутьТч(СписокДокументов.Док);
				
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			
			стр=0;
			Если СписокПартий.НайтиЗначение(тз.ВСД_Продукция_Элемент,стр,"ВСД_Продукция_Элемент")>0 Тогда 
				колво = Число(СписокПартий.ПолучитьЗначение(стр, "КолвоСписания"));
				СписокПартий.УстановитьЗначение(стр,"КолвоСписания", колво+тз.Количество);
				колвоМест = Число(СписокПартий.ПолучитьЗначение(стр, "КолвоМестСписания"));
				СписокПартий.УстановитьЗначение(стр,"КолвоМестСписания", колвоМест+тз.КоличествоМест);
			Иначе
				СписокПартий.НоваяСтрока();
				СписокПартий.ВСД_Продукция_Элемент = тз.ВСД_Продукция_Элемент;
				СписокПартий.КолвоСписания = тз.Количество;
				СписокПартий.КолвоМестСписания = тз.КоличествоМест;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
	
	//Выберем партии автоматом
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Попытка
			СписокПартий.Партия = НайтиПервуюПартию(СписокПартий.ВСД_Продукция_Элемент);
			СписокПартий.Колво = СписокПартий.Партия.Количество;
			СписокПартий.КолвоМест = СписокПартий.Партия.КоличествоМест;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	РаскраситьСписокПартий();

КонецПроцедуры


Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
КонецФункции

Процедура ОтправитьВСД()
	
	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 		
			Если ПроверитьВСД(СписокДокументов.ВСД)=1 Тогда 
				СписокВСД.ДобавитьЗначение(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ.ОтправитьВсе_ВСД_Транзакция(СписокВСД, НачДата, КонДата);
	
КонецПроцедуры

Процедура ПолучитьПартии()
	ЗаписьЖурналаРегистрации("Меркурий получение партий ");
	
	ГМ.ПолучитьПартии(Отправитель_Площадка);
	
КонецПроцедуры

Процедура ЗагрузитьПлощадки()
	
	ГМ.ЗагрузитьПлощадки(СписокДокументов.ХозСубъект);

	РаскраситьСписокДокументов();
	//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"Реализации");
КонецПроцедуры

Процедура Создать_ВСД_Производство()
	
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(СписокПартий.Партия)=0 Тогда
			Сообщить("В строке партий № "+СписокПартий.НомерСтроки+" указана партия. Пропускаем...");
			Продолжить;
		КонецЕсли;

		//Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
		//	//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
		//	//	Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
		//	//	Продолжить;
		//	//КонецЕсли;
		//	
		//	Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
		//		Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
		//		Продолжить;
		//	КонецЕсли;		
		//КонецЕсли;		

		Состояние("Создание ВСД_Производство ");
				
		
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			//
			
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,				"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,					"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( СписокПартий.КолвоСписания,			"Колво");    
			СписокПараметров.ДобавитьЗначение( СписокПартий.КолвоМестСписания,		"КолвоМест");    
			СписокПараметров.ДобавитьЗначение( СписокПартий.ВСД_Продукция_Элемент,	"Продукция_Элемент");    
			//
			СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,		"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,	"ВСД_ОсобыеОтметки");    

			СписокПараметров.ДобавитьЗначение( НачДата,				"НачДата");
			СписокПараметров.ДобавитьЗначение( КонДата,				"КонДата");    
			
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}
		
		Иначе
			
			ДокВСД = СоздатьОбъект("Документ.ВСД_Производство");
			ДокВСД.Новый();
			//ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
			ДокВСД.ДатаДок = НачДата;			
			
			ДокВСД.Производитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Производитель_площадка = Отправитель_Площадка;
			
			Попытка				
				ДокВСД.Автор = глПользователь;
			Исключение
			КонецПопытки;
			Попытка				
				ДокВСД.Филиал = глПользователь.Филиал;
			Исключение
			КонецПопытки;
			
			ДокВСД.Экспертиза 		= ВСД_Экспертиза;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
							
			ДокВСД.НоваяСтрока();
			
			ДокВСД.Продукция_Элемент 	= СписокПартий.ВСД_Продукция_Элемент;
			ДокВСД.Количество 			= СписокПартий.КолвоСписания;
			ДокВСД.КоличествоМест 		= СписокПартий.КолвоМестСписания;			
			ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			ДокВСД.ФормаУпаковки 		= ДокВСД.Продукция_Элемент.ФормаУпаковки;
			ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
			ДокВСД.ВидДвижения 			= 1;
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
			
			
			ДокВСД.ЗавершитьОперацию = 1;
			ДокВСД.ДатаИзготовления1 = НачДата;
			Если КонДата>НачДата Тогда
				ДокВСД.ДатаИзготовления2 = КонДата;
			КонецЕсли;
			ДокВСД.ДатаСрокГодности1 = ДокВСД.ДатаИзготовления1+ДокВСД.Продукция_Элемент.СрокГодности;
				
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		СписокПартий.ВСД_Производство = ДокументСсылка;
		
		Сообщить(" создан документ "+СписокПартий.ВСД_Производство,"i");		
	КонецЦикла;
	
КонецПроцедуры


Функция ПроверитьВСД_Производство(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	//Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
	//	Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
	//	Возврат 0;
	//КонецЕсли;
	
	Возврат 1;
КонецФункции


Процедура Отправить_ВСД_Производство()

	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПроверитьВСД_Производство(СписокПартий.ВСД_Производство)=1 Тогда 
			СписокВСД.ДобавитьЗначение(СписокПартий.ВСД_Производство);
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД Производство");
	
	ГМ.ОтправитьВсе_ВСД_Производство(СписокВСД, НачДата, КонДата);

	ВыбратьПартию_ВСД_Производство();
КонецПроцедуры

Процедура Очистить_Партию()
	СписокПартий.Партия="";	
КонецПроцедуры

//=========================== ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ =============================

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Площадка");
		
		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если ПустоеЗначение(СтараяПлощадка)=0 Тогда 
			Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка.Контрагент,0,0)=1 Тогда
				Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
					//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
					СпрПлощадка.Контрагент = "";
					СпрПлощадка.Записать();				
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		СпрПлощадка.НайтиЭлемент(Элемент);
		СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
		СпрПлощадка.Записать();
		//Сообщить("Установили привязку площадки "+СпрПлощадка.Контрагент);
		КонтФормы.Форма.Закрыть();    
		
		СписокДокументов.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());
				
		РаскраситьСписокДокументов( );		
	ИначеЕсли Элемент.Вид()="ВСД_Партия" Тогда
		КонтФормы.Форма.Закрыть();    
		
		СписокПартий.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		СписокПартий.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		СписокПартий.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест);
		
		РаскраситьСписокПартий();				

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
// Дмитрий добавлено
	ИмяФайла="";
	КаталогОбработки="";
	
	РасположениеФайла(КаталогОбработки, ИмяФайла);
//*************

	
   //{Интеграционный модуль для переопределения функций, плюс несколько базовых функций
    глМеркурийИнтеграция 		= СоздатьОбъект("МеркурийИнтеграция");

    ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
    ГМ.Инициализация();        
	ГМ.ЗагрузитьПараметры();
    ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	
    //Переопределение функций, если они определены в модуле
    глМеркурийИнтеграция.Инициализация(ГМ);    
    //}		
	
	ЗаголовокНадпись();   
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Реализации");
	Форма.Закладки.ДобавитьЗначение("Партии");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, СписокДокументов, Реализации");
	
	Партия = "";
	
	//{ Обработку можно вызвать для заполнения списка реализаций на основании маршрута
	// для этого в Маршрут в печатные формы добавьте ПечФорма_ВСД_ГрупповаяОбработка.ert
	//
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
				
		Если ПустоеЗначение(Парам)=0 тогда 
			Для Д=1 По Парам.РазмерСписка() Цикл
				Док = Парам.ПолучитьЗначение(Д);
				СписокДокументов.НоваяСтрока();
				СписокДокументов.Пометка= 1;
				//СписокДокументов.инфо = ;
				СписокДокументов.Док = Док;
				//СписокДокументов.ВСД = ;
				СписокДокументов.Колво = Док.ВесДокумента;
				СписокДокументов.Вес = Док.ВесДокумента;
				СписокДокументов.КолвоМест = Док.КоличествоМестДокумента;
				СписокДокументов.Контрагент = Док.Контрагент;
				СписокДокументов.Грузополучатель = Док.ПолучитьАтрибут(НазваниеРеквизитаГрузополучатель);
				СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(СписокДокументов.Контрагент);
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту(СписокДокументов.Грузополучатель);
			КонецЦикла;
			
			РаскраситьСписокДокументов();
			
			ВыделитьВсеДокументы();	
		КонецЕсли;
	Иначе
		//стандартное заполнение документов
		ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;   
	//}
	
КонецПроцедуры

 // предопределенная процедура
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
 	ТекСтрока = СписокДокументов.ТекущаяСтрока();
 	
 	Если ЗначениеЗакладки="Реализации" Тогда
		Форма.ИспользоватьСлой("Основной, СписокДокументов, Реализации");
		//СписокДокументов.УдалитьСтроки();
		Если СписокДокументов.КоличествоСтрок()=0 Тогда
			ЗаполнитьСписокДокументов_Реализации();
		КонецЕсли;		
	ИначеЕсли ЗначениеЗакладки="Партии" Тогда
		Форма.ИспользоватьСлой("Основной, Партии");
		//ЗаполнитьПартии();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;     
		
КонецПроцедуры 



НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов.НоваяКолонка("сЦвет",,,,,1,);
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("Грузополучатель",,,,,70,);
СписокДокументов.НоваяКолонка("Площадка",,,,,30,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Колво",,,,,10,);
СписокДокументов.НоваяКолонка("Вес",,,,,10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,,10,);
СписокДокументов.НоваяКолонка("Док",,,,,30,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,10,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,10,);
СписокДокументов.ВыводитьПиктограммы("Пометка");

СписокПартий.НоваяКолонка("сЦвет",,,,,1,);
СписокПартий.НоваяКолонка("ВСД_Продукция_Элемент",,,,,50,);
СписокПартий.НоваяКолонка("Партия",,,,,15,);
СписокПартий.НоваяКолонка("Колво","Число",,,,5,);
СписокПартий.НоваяКолонка("КолвоМест","Число",,,,5,);
СписокПартий.НоваяКолонка("КолвоСписания","Число",,,,5,);
СписокПартий.НоваяКолонка("КолвоМестСписания","Число",,,,5,);
СписокПартий.НоваяКолонка("ВСД_Производство",,,,,3,);

ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

НазваниеВидаДокументаРеализация = "Реализация";
НазваниеРеквизитаКоличество = "Количество";

Попытка
	ЗагрузитьВнешнююКомпоненту("1cpp.dll");
Исключение
	Сообщить("Ошибка при загрузке 1cpp.dll");
	Сообщить(ОписаниеОшибки());
КонецПопытки;

Попытка
	ЗагрузитьВнешнююКомпоненту("formex.dll");
Исключение
	Сообщить("Ошибка при загрузке formex.dll");
	Сообщить(ОписаниеОшибки());
КонецПопытки;

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();

попытка
	Филиал = глПользователь.Филиал;
Исключение
	Филиал="";
КонецПопытки;