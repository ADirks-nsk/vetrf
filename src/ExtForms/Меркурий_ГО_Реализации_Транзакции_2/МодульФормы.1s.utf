// API 2.0

Перем ГМ, ГМ2;
Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем КаталогОбработки;
Перем ВыбСтрока;
Перем Филиал; 
Перем СписокПартий;
//Перем ВремТЗПодобранныеПартии; // АктуальныеПартии из справочника
// Состав Тз : "Продукция_Элемент","ВСД_Партия,""ПолеСортировки", Количество, КоличествоМест


Процедура УменьшитьНаРаспределенныеПартии(ТзАктуальныхПартий)
	// Подберем уже заполненнные, но не отправленные ВСД, 
	// Выбираем ВСЕ документы, т.к. они м.б. не отмечены, но в них есть эти партии к отправке!!!
	тз = СоздатьОбъект("Таблицазначений");
	тзДокстр = СоздатьОбъект("Таблицазначений");
	СписокДокументов.Выгрузить(тз);
	тз.Свернуть("ВСД","");
	//	тз.Сортировать("ВСД");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз.ВСД) = 1 Тогда
		    Продолжить;
		КонецЕсли;
		Если (тз.ВСД.Проведен() = 1) или (СокрЛП(тз.ВСД.Статус) = "COMPLETED") Тогда
		    Продолжить;
		КонецЕсли;
		
		тз.ВСД.ВыгрузитьТабличнуюЧасть(тзДокстр);
		тзДокСтр.Свернуть("Партия","Количество");
		тзДокСтр.ВыбратьСтроки();
		Пока тзДокСтр.ПолучитьСтроку() = 1 Цикл
		    Если ПустоеЗначение(тздокСтр.Партия) = 1 Тогда
		        Продолжить;
			КонецЕсли;
			стр = 0;
			Если ТзАктуальныхПартий.НайтиЗначение(тздокСтр.Партия,стр,"ВСД_Партия") = 1 Тогда
				ТзАктуальныхПартий.ПолучитьСтрокуПоНомеру(стр);
				ТзАктуальныхПартий.Количество = ТзАктуальныхПартий.Количество - тздокСтр.Количество;
				Если ТзАктуальныхПартий.Количество < 0  Тогда
					Сообщить("В заполненных ранее ВСД на отправку обнаружено ПРЕВЫШЕНИЕ количества имеющейся партии (№ записи : "+СокрЛП(ТзАктуальныхПартий.ВСД_Партия.НомерЗаписи)+") ;"+тз.ВСД,"!!");
					ТзАктуальныхПартий.Количество = 0;    
				КонецЕсли;
				//Сообщить("Есть в документах на отправку "+ТзАктуальныхПартий.ВСД_Партия+ ", уменьшаем на " + тздокСтр.Количество)
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	//Совсем выкинем уже распределенные Партии из списка Актуальных
	стр = 0;
	Пока ТзАктуальныхПартий.НайтиЗначение(0,стр,"Количество") = 1 Цикл
		ТзАктуальныхПартий.УдалитьСтроку(стр);
		стр = 0;
	КонецЦикла;
КонецПроцедуры

//****** Распределение партий - Исключительно вывод на форму
Процедура РаскраситьСписокПартий2()
	тзНеобходимыеПартии.ВыбратьСтроки();
	Пока тзНеобходимыеПартии.ПолучитьСтроку() = 1 Цикл
		Если _Подробно = 0 Тогда
 			Если (тзНеобходимыеПартии.Колво = 0 ) Тогда 
				тзНеобходимыеПартии.сЦвет = цвКрасный;	
			ИначеЕсли (тзНеобходимыеПартии.Колво >= тзНеобходимыеПартии.КолвоСписания) Тогда
				тзНеобходимыеПартии.сЦвет = цвЗеленый;
			Иначе			
				тзНеобходимыеПартии.сЦвет = цвЖелтый;							
			КонецЕсли;
		Иначе
 			Если (тзНеобходимыеПартии.Колво > 0 ) и ( ПустоеЗначение(тзНеобходимыеПартии.Партия)=0 ) Тогда 
				тзНеобходимыеПартии.сЦвет = цвЗеленый;	
			Иначе			
				тзНеобходимыеПартии.сЦвет = цвКрасный;							
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиТзПартийВариант2()
	тзНеобходимыеПартии.УдалитьСтроки();
    // Используем список Продукция_Элемент, полученный ф-цией ЗаполнитьПартии
	СзПродукцияЭлементы = СоздатьОбъект("СписокЗначений"); // Для заполнения свободных партий
	ТзПродукцияЭлементы = СоздатьОбъект("ТаблицаЗначений");
	
	СписокПартий.Выгрузить(ТзПродукцияЭлементы);
	
	ТзПродукцияЭлементы.Свернуть("ВСД_Продукция_Элемент","Колво,КолвоСписания"); //Вывод итогов по прод элементу
	ТзПродукцияЭлементы.Выгрузить(СзПродукцияЭлементы,,,"ВСД_Продукция_Элемент");

	// Получим нужные нам Актуальные партии по фильтру
	ВремТЗПодобранныеПартии = ГМ.ПолучитьАкуальныеПартииИзСправочника(СзПродукцияЭлементы,Отправитель_Площадка,Отправитель_ХозСубъект,СокрЛП(ПарамКолонкаСортировкиПартииСписания),ПарамЗнакСортировки);
    //ВремТЗПодобранныеПартии.ВыбратьСтроку(); //ТЕСТ
	Если ПустоеЗначение(ВремТЗПодобранныеПартии) = 1 Тогда
		Если ПустоеЗначение(ВремТЗПодобранныеПартии) = 1 Тогда
			Сообщить("Нет актуальных партий по данным условиям отбора");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	УменьшитьНаРаспределенныеПартии(ВремТЗПодобранныеПартии);
	// Состав колонок полученной таблицы
	
//	|Функция Количество = Сумма(Колво);
//	|Группировка Продукция_Элемент без групп;
//	|Группировка ВСД_Партия без групп;
//	|Группировка ПолеСортировки;
	
	ТЗРаспределения = СоздатьОбъект("ТаблицаЗначений"); // Итоговая таблица

	Если _Подробно = 0 Тогда
		ТзПродукцияЭлементы.Выгрузить(ТЗРаспределения);
		ТЗРаспределения.НоваяКолонка("ВСД_Производство",,,,,3,);
		ВремПартии = СоздатьОбъект("ТаблицаЗначений");
		ВремТЗПодобранныеПартии.Выгрузить(ВремПартии);
		ВремПартии.Свернуть("Продукция_Элемент","Количество,КоличествоМест"); //Актуальное кол-во к списанию по Прод_Элементу
	//	ТЗРаспределения.ВставитьКолонку("Пометка",1,"Число",1,0,,2);
		ТЗРаспределения.ВыбратьСтроки();		
		Пока ТЗРаспределения.ПолучитьСтроку() = 1 Цикл
			стр = 0;
			Если ВремПартии.НайтиЗначение(ТЗРаспределения.ВСД_Продукция_Элемент,стр,"Продукция_Элемент") = 1 Тогда
			    ВремПартии.ПолучитьСтрокуПоНомеру(стр);
				ТЗРаспределения.Колво = ВремПартии.Количество;
				//ТЗРаспределения.КолвоМест = ВремПартии.КоличествоМест;
			КонецЕсли;
		КонецЦикла;
		ТзПродукцияЭлементы = "";
		ВремПартии = "";
	Иначе
		//Распределим по Актуальным
		СписокПартий.Выгрузить(ТЗРаспределения); //скопируем стркуктуру
		ТЗРаспределения.УдалитьСтроки();

		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка<>2 Тогда
				Продолжить;
			КонецЕсли;

			Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
				Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
					Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
					Продолжить;
				КонецЕсли;		
			КонецЕсли;

			тз = ГМ.ЗаполнитьПартииПоТЧДокумента2(СписокДокументов.Док,Отправитель_Площадка, Отправитель_ХозСубъект, ВремТЗПодобранныеПартии,_ЗаполнятьВСДБезПартий);//,СокрЛП(ПарамКолонкаСортировкиПартииСписания),ПарамЗнакСортировки);
			тз.ВыбратьСтроки();
			Пока тз.ПолучитьСтроку() = 1 Цикл
				ТЗРаспределения.НоваяСтрока();
				ТЗРаспределения.ДокРеализации = СписокДокументов.Док;
				ТЗРаспределения.Номенклатура = тз.Номенклатура;
				ТЗРаспределения.ВСД_Продукция_Элемент = тз.Продукция_Элемент;
				ТЗРаспределения.Партия = тз.Партия;
				ТЗРаспределения.ПолеСортировки = тз.ПолеСортировки;
				ТЗРаспределения.Колво = ?(ПустоеЗначение(ТЗРаспределения.Партия) = 1,0,тз.Количество);
				ТЗРаспределения.КолвоСписания = тз.Количество;
			КонецЦикла;
        
		КонецЦикла;
		
//		СписокПартий.ВыбратьСтроки();
//		Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
//			КолвоСписания = СписокПартий.КолвоСписания;
//			РаспределеннаяТЗ = ГМ.ПодобратьПартииПоПродукцияЭлемент(ВремТЗПодобранныеПартии,СписокПартий.ВСД_Продукция_Элемент,СписокПартий.КолвоСписания);
//            РаспределеннаяТЗ.ВыбратьСтроки();
//			Пока РаспределеннаяТЗ.ПолучитьСтроку() = 1 Цикл
//				ТЗРаспределения.НоваяСтрока();
//				ТЗРаспределения.ДокРеализации = СписокПартий.ДокРеализации;
//				ТЗРаспределения.Номенклатура = СписокПартий.Номенклатура;
//				ТЗРаспределения.ВСД_Продукция_Элемент = СписокПартий.ВСД_Продукция_Элемент;
//				ТЗРаспределения.Партия = РаспределеннаяТЗ.Партия;
//				ТЗРаспределения.ПолеСортировки = РаспределеннаяТЗ.ПолеСортировки;
//				ТЗРаспределения.Колво = РаспределеннаяТЗ.Колво;//СписокПартий.Колво;
//				ТЗРаспределения.КолвоСписания = РаспределеннаяТЗ.Колво;;
				//ТЗРаспределения.КолвоМест = РаспределеннаяТЗ.КолвоМест;
				//ТЗРаспределения.КолвоМестСписания = РаспределеннаяТЗ.КолвоМест;
//			КонецЦикла;
			
//			ОсталосьСписать = СписокПартий.КолвоСписания - РаспределеннаяТЗ.итог("Колво"); 
//			Если (ОсталосьСписать > 0) и (_ЗаполнятьВСДБезПартий = 1) Тогда
//				ТЗРаспределения.НоваяСтрока();
//				ТЗРаспределения.ДокРеализации = СписокПартий.ДокРеализации;
//				ТЗРаспределения.Номенклатура = СписокПартий.Номенклатура;
//				ТЗРаспределения.ВСД_Продукция_Элемент = СписокПартий.ВСД_Продукция_Элемент;
//				ТЗРаспределения.КолвоСписания = ОсталосьСписать;
				//ТЗРаспределения.КолвоМестСписания = 0;//СписокПартий.КолвоМестСписания - РаспределеннаяТЗ.итог("КолвоМестСписания");
//			КонецЕсли; 
            //ВремТЗПодобранныеПартии.ВыбратьСтроку(); // ТЕСТ
//		КонецЦикла;
		
		
		
		
		Если ПустоеЗначение(ПарамКолонкаСортировкиПартииСписания) = 0 Тогда
			ТЗРаспределения.УстановитьПараметрыКолонки("ПолеСортировки",,,,СокрЛП(ПарамКолонкаСортировкиПартииСписания));
		КонецЕсли;
		
	КонецЕсли;
	
	ТЗРаспределения.ВставитьКолонку("сЦвет",1,,,,,1);
	ТЗРаспределения.Выгрузить(тзНеобходимыеПартии);
//	тзНеобходимыеПартии.ВыводитьПиктограммы("Пометка");

	РаскраситьСписокПартий2();
КонецПроцедуры

Процедура КликПоказатьСвернуто()
	ВывестиТзПартийВариант2();	
КонецПроцедуры
//****** Распределение партий - вывод на форму Окончание



Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//=========================== СЛУЖЕБНЫЕ ФУНКЦИИ =============================

Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Документов: "+СписокДокументов.КоличествоСтрок()+", количество: "+Окр(СписокДокументов.Итог("Колво"))+" ");
	
	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;	      
	ВыбКолво = Окр(ВыбКолво);

	Форма.ИнфоВыбор.Заголовок("Выбрано "+ВыбДок+" документов, количество = "+ВыбКолво+" ");

КонецПроцедуры


Процедура ЗаголовокНадпись()
	
	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

Процедура РаскраситьСписокДокументов(тзДок="", ТекСтрока = 1)
	
	Если ПустоеЗначение(тзДок)=1 Тогда 
		тз = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тз);
	Иначе
		тз = тзДок;
	КонецЕсли;	
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл		

		Если (ПустоеЗначение(тз.ВСД)=0) Тогда
			Если СокрЛП(тз.ВСД.Статус)="COMPLETED" Тогда
				тз.сЦвет = цвЗеленый;
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(тз.ХозСубъект.GUID)=1 Тогда 			
			тз.сЦвет = цвКрасный;
		ИначеЕсли (ПустоеЗначение(тз.Площадка)=0) Тогда
			Если (ПустоеЗначение(тз.Площадка.GUID)=0)  Тогда 
				тз.сЦвет = "";							
			КонецЕсли;
		Иначе			
			тз.сЦвет = цвЖелтый;							
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекСтрока=1 Тогда 
		ТекСтрока = СписокДокументов.ТекущаяСтрока();
	КонецЕсли;
	
	СписокДокументов.Загрузить(тз);
	
	СписокДокументов.ВыводитьПиктограммы("Пометка");

	Если ПустоеЗначение(ТекСтрока)=1 Тогда 
		СписокДокументов.ТекущаяСтрока(1);
	Иначе
		СписокДокументов.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;
КонецПроцедуры


Процедура Клик()
	текСтр = СписокДокументов.ТекущаяСтрока();
	текКол = СписокДокументов.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = СписокДокументов.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокДокументов.Пометка=1;
		Иначе
			СписокДокументов.Пометка=2;
		КонецЕсли; 
		тзНеобходимыеПартии.УдалитьСтроки();
		СписокПартий.УдалитьСтроки();
	ИначеЕсли текКол="Площадка" Тогда 
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;			
				
		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

Процедура Клик_партии()
	текСтр = тзНеобходимыеПартии.ТекущаяСтрока();
	текКол = тзНеобходимыеПартии.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			тзНеобходимыеПартии.Пометка=1;
		Иначе
			тзНеобходимыеПартии.Пометка=2;
		КонецЕсли;
//	ИначеЕсли текКол="Партия" Тогда 
//		ВыбСтрока = текСтр;
//		ТекПартия = СписокПартий.ПолучитьЗначение(ТекСтр,текКол);
//		Тек_ВСД_Продукция_Элемент = СписокПартий.ПолучитьЗначение(ТекСтр,"ВСД_Продукция_Элемент");
//
//		спМеню = СоздатьОбъект("СписокЗначений");		
//		спМеню.ДобавитьЗначение("ВСД_Продукция_Элемент", "по тек. элементу");
//		спМеню.ДобавитьЗначение("Площадка", "по площадке");
//
//		КонтекстОтбора = СоздатьОбъект("СписокЗначений");
//		
//		зн="";
//		спМеню.ВыбратьЗначение(зн,,,,1);
//		Если зн="ВСД_Продукция_Элемент" Тогда 
//			КонтекстОтбора.ДобавитьЗначение(Тек_ВСД_Продукция_Элемент,"ВСД_Продукция_Элемент");
//		КонецЕсли;
//		
//		КонтекстОтбора.ДобавитьЗначение(Отправитель_Площадка, "Площадка");
//		КонтекстОтбора.ДобавитьЗначение(Отправитель_ХозСубъект, "ХозСубъект");			
//				
//		ОткрытьПодбор("Справочник.ВСД_Партия", "ФормаСписка",КонтекстОтбора,0, текПартия);
	ИначеЕсли (текКол="ВСД_Продукция_Элемент") и (тзНеобходимыеПартии.ВидимостьКолонки("ДокРеализации") > 0) Тогда
		Если (ПустоеЗначение(тзНеобходимыеПартии.ВСД_Продукция_Элемент) = 1) Тогда
			//Выбрать и привязать
			ВыбСтрока = текСтр;
			ТекНоменклатура = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Номенклатура");
			Продукция_элемент = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
			Если Продукция_элемент.Выбрать("Укажите элемент для установки соответствия","ФормаСписка") = 0 Тогда
				Возврат;			    
			КонецЕсли;
			ТВопроса = "Установить соответствие "+ТекНоменклатура+" -> "+ Продукция_элемент.ТекущийЭлемент();
			Если Вопрос(ТВопроса,"Да+Нет") = "Да" Тогда
				СпрНом = СоздатьОбъект("Справочник.Номенклатура");
				СпрНом.НайтиЭлемент(ТекНоменклатура.ТекущийЭлемент());
				СпрНом.ВСД_Продукция_Элемент = Продукция_элемент.ТекущийЭлемент();
				СпрНом.Записать();
				тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"ВСД_Продукция_Элемент", Продукция_элемент.ТекущийЭлемент());
				Предупреждение("Необходимо перезаполнить партии !!!");
			КонецЕсли;
			//ОткрытьПодбор("Справочник.ВСД_Продукция_Элемент", "ФормаСписка");
		Иначе
			Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);	
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

Процедура ВыбратьПартию_ВСД_Производство()
	// НЕ ИСПОЛЬЗУЕТСЯ
	СпрПартия = СоздатьОбъект("Справочник.ВСД_Партия");
	
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(СписокПартий.ВСД_Производство)=1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СписокПартий.ВСД_Производство.Проведен()=1 Тогда 
			Если СпрПартия.ВыбратьЭлементыПоРеквизиту("ДокОснование", СписокПартий.ВСД_Производство, 0, 0)=1 Тогда 
				Пока СпрПартия.ПолучитьЭлемент()=1 Цикл
					Если СпрПартия.ПометкаУдаления()=1 Тогда 
						Продолжить;
					КонецЕсли;
					Если СпрПартия.Продукция_Элемент <> СписокПартий.ВСД_Продукция_Элемент Тогда
						Продолжить;
					КонецЕсли;
					
					СписокПартий.Партия = СпрПартия.ТекущийЭлемент();
					СписокПартий.Колво = СписокПартий.Партия.Количество;
					Попытка
						//СписокПартий.КолвоМест = СписокПартий.Партия.КоличествоМест;
					Исключение
					КонецПопытки;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

//=========================== ПЕЧАТНЫЕ ФОРМЫ =============================

Процедура Реестр()
	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка|Осн");
	Если ДобавлятьУпаковки = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ВесМест");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Хвост");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		
		Таб.ВывестиСекцию("Строка|Осн");
		Если ДобавлятьУпаковки = 1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ВесМест");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Хвост");
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");	
КонецПроцедуры

Процедура ПечатьСокрВСД()
   //ФайлОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля")+"ПечФорма_ВСД_Сокращенная.ert";
   //Если ФС.СуществуетФайл(Файлобработки) = 0 Тогда
   //		Сообщить("Остутствует обработчик печати "+ФайлОбработки);   
   //		возврат;
   //КонецЕсли;  	
	
	тз = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если (тз.Пометка<>2) или (Пустоезначение(тз.ВСД)=1) Тогда
			Продолжить;	
		КонецЕсли;
		ГМ.ПечатьСокрВСД(тз.ВСД.ТекущийДокумент());
		//парам = СоздатьОбъект("СписокЗначений");
		//парам.Установить("Контекст",тз.ВСД.ТекущийДокумент());
		//ОткрытьФорму("Отчет", парам, ФайлОбработки);
	КонецЦикла;

КонецПроцедуры


Процедура МенюПечать()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("Реестр", "Реестр");
	спМеню.ДобавитьЗначение("СокрВСД", "Сокращенный ВСД");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Реестр" Тогда 
		Реестр();
	ИначеЕсли зн = "СокрВСД" Тогда 
		ПечатьСокрВСД();
	КонецЕсли;
		
КонецПроцедуры


//=========================== ФУНКЦИИ КНОПОК =============================

Процедура ЗаполнитьСписокДокументов_Реализации() 
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение(НачДата, "НачДата");
	СписокПараметров.ДобавитьЗначение(КонДата, "КонДата");
	СписокПараметров.ДобавитьЗначение(ВыбКонтрагент, "ВыбКонтрагент");
	СписокПараметров.ДобавитьЗначение(ВыбФирма, "ВыбФирма");
	СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,"Площадка"); //ЖД для фильтра по складу
	СписокПараметров.ДобавитьЗначение(ГМ,"ГМ");
	СписокПараметров.ДобавитьЗначение(ГМ2,"ГМ2");
	СписокПараметров.ДобавитьЗначение(1,"Версия2"); //ЖД для фильтра по складу	

    Если  ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов2.ert")=1 Тогда
		//{ переопределение функции заполнения списка документов 
		// интеграция переопределяется в \Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert
		//
		ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов2.ert");
		
		тз = "";
		
		Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда				
			тз = СписокПараметров.Получить("ТЗ");				
		Иначе
			Возврат;
		КонецЕсли; 			
		Если ПустоеЗначение(ТЗ)=1 Тогда
			Предупреждение("Отсутствуют документы Реализации за выбранный период","!");
			СписокДокументов.УдалитьСтроки();
			Возврат;
		КонецЕсли;
		//}
	Иначе // стандартный запрос
		тз = ГМ.ПолучитьТзРеализаций(СписокПараметров); //ЖД изменить ГМ - добавить Параметр Отправитель_Площадка, и если к ней привязан склад, фильтровать
	КонецЕсли;	

	ТекСтрока = СписокДокументов.ТекущаяСтрока();
	
	СписокДокументов.УдалитьСтроки();
	
	тзДок = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тзДок);
	
	тз.ВыбратьСтроки();
	Ном=0;
	ПредДок="";
	Пока тз.ПолучитьСтроку()=1 Цикл 
		тзДок.НоваяСтрока();
		тзДок.Пометка=1;
		тзДок.Контрагент = тз.Контрагент;
		тзДок.Грузополучатель = тз.Грузополучатель;//ЖД - уже указали тз.Док.ПолучитьАтрибут(НазваниеРеквизитаГрузополучатель);
		тзДок.Док = тз.Док;
		тзДок.Колво = тз.Количество;
		//тзДок.Вес = тз.Количество;
		Попытка			
			//тзДок.КолвоМест = тз.КоличествоМест;
		Исключение			
		КонецПопытки;
				
		тзДок.ХозСубъект = ГМ.НайтиХозСубъект(тз.Контрагент);
		Если ПустоеЗначение(тзДок.ХозСубъект)=0 Тогда
			тзДок.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( тзДок.Грузополучатель);
		КонецЕсли;

		Попытка
			Если тз.ДокВСД.ПометкаУдаления()=0 Тогда 
				тзДок.ВСД = тз.ДокВСД;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
	КонецЦикла; 
	      
	РаскраситьСписокДокументов( тзДок, ТекСтрока );
	ОбновитьИнф();
КонецПроцедуры

процедура ВыбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока()));
		СписокДокументов.УдалитьСтроки();
		тзНеобходимыеПартии.УдалитьСтроки();
		СписокПартий.УдалитьСтроки();
		ЗаполнитьСписокДокументов_Реализации();
	конецесли;
конецпроцедуры

Процедура СоздатьВСД()
	
	Если СписокПартий.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица партий.","!");
		Возврат;
	КонецЕсли;

	СзПродукцияЭлементы = СоздатьОбъект("СписокЗначений");
	СписокПартий.Выгрузить(СзПродукцияЭлементы,,,"ВСД_Продукция_Элемент");
	// Получим нужные нам партии по фильтру
	ТзРаспределяемыеПартии = ГМ.ПолучитьАкуальныеПартииИзСправочника(СзПродукцияЭлементы,Отправитель_Площадка,Отправитель_ХозСубъект,СокрЛП(ПарамКолонкаСортировкиПартииСписания),ПарамЗнакСортировки);
	
	Если ПустоеЗначение(ТзРаспределяемыеПартии) = 1 Тогда
		Сообщить("Нет актуальных партий для создания документов");
		Возврат;
	КонецЕсли;
    //ТзРаспределяемыеПартии.ВыбратьСтроку();//ТЕСТ
	// теперь нужно уменьшить полученные данные на кол-во созданных, но не отправленных ВСД
	УменьшитьНаРаспределенныеПартии(ТзРаспределяемыеПартии);

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		

		Состояние("Заполнение списка партий ВСД ");
		ХС = СписокДокументов.ХозСубъект;
		Площадка = СписокДокументов.Площадка;
		
		// создание кастомного ВСД
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_транзакция.ert
			//
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Док,				"ДокОснование");    
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Контрагент,		"Контрагент");    
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Грузополучатель,	"Грузополучатель");    
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,			"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,				"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение(Перевозчик_ХозСубъект,			"Перевозчик_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,				"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( ХС,				"ХС");    
			СписокПараметров.ДобавитьЗначение( Площадка,		"Площадка");    
			СписокПараметров.ДобавитьЗначение( СписокДокументов.Колво,			"Колво");    
//			Попытка СписокПараметров.ДобавитьЗначение( СписокДокументов.КолвоМест,		"КолвоМест"); Исключение КонецПопытки;    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,					"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,				"ВСД_ОсобыеОтметки");    
			СписокПараметров.ДобавитьЗначение(ВыбФирма,				"Фирма");    
			СписокПараметров.ДобавитьЗначение(ТзРаспределяемыеПартии,					"СписокПартий");    
			СписокПараметров.ДобавитьЗначение(ГМ,"ГМ");
			СписокПараметров.ДобавитьЗначение(ГМ2,"ГМ2");
	
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
				//Получим уменьшенное кол-во РаспределяемыхПартий
				Если ПустоеЗначение(СписокПараметров.Получить("СписокПартий")) = 0 Тогда
					ТзРаспределяемыеПартии = СписокПараметров.Получить("СписокПартий");    
				КонецЕсли;
									
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}
			
		Иначе
			// стандартное создание ВСД
			ДокОснование = СписокДокументов.Док; 	
			ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
			ДокВСД.Новый();
			ДокВСД.ДокОснование = ДокОснование;
			
			Автор = ГМ.ПолучитьАвтора();
			Попытка ДокВСД.Фирма = ДокОснование.Фирма; Исключение КонецПопытки;
			Попытка	ДокВСД.Автор = Автор;	Исключение	КонецПопытки;
			Попытка	ДокВСД.Филиал = Автор.Филиал;	Исключение 	КонецПопытки;
				
			ДокВСД.ДатаДок = ДокОснование.ДатаДок;			
			ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Отправитель_Площадка = Отправитель_Площадка;			
			ДокВСД.Получатель_ХозСубъект = ХС;		
			ДокВСД.Получатель_Площадка = Площадка;					
			ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
			
			ДокВСД.ТтнСерия = "";
			ДокВСД.ТтнНомер = СписокДокументов.Док.НомерДок;
			ДокВСД.ТтнДата = СписокДокументов.Док.ДатаДок;
			ДокВСД.номерАвто = ГМ.ПолучитьНомерАвто(ДокВСД.ДокОснование);

			ДокВСД.ФормаВСД = 1;			
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
			ДокВСД.cargoInspected  	= 1;			
			ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");
			ДокВСД.ТермическоеСостояние = 4;
			Попытка	ДокВСД.НомерЗаказаПокупателя = СокрЛП(ДокВСД.ДокОснование.НомерЗаказаПокупателя); Исключение 	КонецПопытки;
			Попытка	ДокВСД.ДатаЗаказаПокупателя = СокрЛП(ДокВСД.ДокОснование.ДатаЗаказаПокупателя); Исключение 	КонецПопытки;
			
			
			// Предлагаю потестировать !!!
			// ДокВСД.ЗагрузитьТабличнуюЧасть(ГМ.ЗаполнитьПартииПоТЧДокумента2(Докум,Отправитель_Площадка, Отправитель_ХозСубъект, ТзРаспределяемыеПартии,_ЗаполнятьВСДБезПартий));
			//
			// в указанной ф-ции есть параметр -> ПропускатьЭлементыБезПартий
			тз = ГМ.ЗаполнитьПартииПоТЧДокумента2(ДокОснование,Отправитель_Площадка, Отправитель_ХозСубъект, ТзРаспределяемыеПартии,_ЗаполнятьВСДБезПартий);
			ДокВСД.ЗагрузитьТабличнуюЧасть(тз);
			//Терм состояние проставим
			тз.ВыбратьСтроки();
			Пока тз.ПолучитьСтроку() = 1 Цикл
				ДокВСД.ТермическоеСостояние = Мин( тз.Продукция_Элемент.ТермическиеУсловияПеревозки, ДокВСД.ТермическоеСостояние);    
			КонецЦикла;
			
			ДокВСД.ТермическоеСостояние = ?( ДокВСД.ТермическоеСостояние = 0, 1, ДокВСД.ТермическоеСостояние);
			Если ДокВСД.КоличествоСтрок() = 0 Тогда
			    Возврат;
			КонецЕсли;
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		СписокДокументов.ВСД = ДокументСсылка;
		
		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");		
	КонецЦикла;
    //ТзРаспределяемыеПартии.ВыбратьСтроку();//ТЕСТ
	//РаскраситьСписокДокументов();		
	СписокПартий.УдалитьСтроки();
	тзНеобходимыеПартии.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

Процедура СоздатьВСД_ПоТзРаспределения()
	Если тзНеобходимыеПартии.ВидимостьКолонки("ДокРеализации") < 0 Тогда
		Сообщить("Включите режим Распределить партии","i");
		Возврат;
	КонецЕсли;
	Если тзНеобходимыеПартии.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица с распределенными партиями.","!");
		Возврат;
	КонецЕсли;
	
	Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert")=1 Тогда
		Сообщить("Данная ф-ция временно недоступна при наличии подключаемого модуля Создания ВСД");
		Возврат;
	КонецЕсли;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		
        
		стр = 0;
		Если тзНеобходимыеПартии.НайтиЗначение(СписокДокументов.Док,стр,"ДокРеализации") = 0 тогда
			Сообщить("Для "+СписокДокументов.Док+" нет данных в тз Распределенных партий","i");
			Продолжить;
		КонецЕсли;
		
		тзНеобходимыеПартии.ПолучитьСтрокуПоНомеру(стр);
		
		Состояние("Создание ВСД ");
		ХС = СписокДокументов.ХозСубъект;
		Площадка = СписокДокументов.Площадка;
		
		ДокОснование = СписокДокументов.Док; 	
		ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
		ДокВСД.Новый();
		ДокВСД.ДокОснование = ДокОснование;
		
		Автор = ГМ.ПолучитьАвтора();
		Попытка ДокВСД.Фирма = ДокОснование.Фирма; Исключение КонецПопытки;
		Попытка	ДокВСД.Автор = Автор;	Исключение	КонецПопытки;
		Попытка	ДокВСД.Филиал = Автор.Филиал;	Исключение 	КонецПопытки;
				
		ДокВСД.ДатаДок = ДокОснование.ДатаДок;			
		ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
		ДокВСД.Отправитель_Площадка = Отправитель_Площадка;			
		ДокВСД.Получатель_ХозСубъект = ХС;		
		ДокВСД.Получатель_Площадка = Площадка;					
		ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
			
		ДокВСД.ТтнСерия = "";
		ДокВСД.ТтнНомер = СписокДокументов.Док.НомерДок;
		ДокВСД.ТтнДата = СписокДокументов.Док.ДатаДок;
		ДокВСД.номерАвто = ГМ.ПолучитьНомерАвто(ДокВСД.ДокОснование);

		ДокВСД.ФормаВСД = 1;			
		ДокВСД.Местность 		= ВСД_Местность;
		ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
		ДокВСД.cargoExpertized  = 1;
		ДокВСД.cargoInspected  	= 1;			
		ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");
		ДокВСД.ТермическоеСостояние = 4;
		Попытка	ДокВСД.НомерЗаказаПокупателя = СокрЛП(ДокВСД.ДокОснование.НомерЗаказаПокупателя); Исключение 	КонецПопытки;
		Попытка	ДокВСД.ДатаЗаказаПокупателя = СокрЛП(ДокВСД.ДокОснование.ДатаЗаказаПокупателя); Исключение 	КонецПопытки;
			
		Пока (стр <= тзНеобходимыеПартии.КоличествоСтрок()) и (СписокДокументов.Док = тзНеобходимыеПартии.ДокРеализации) Цикл
			ДокВСД.НоваяСтрока();				
			ДокВСД.Номенклатура = тзНеобходимыеПартии.Номенклатура;
			ДокВСД.Партия = тзНеобходимыеПартии.Партия;
			ДокВСД.Количество = тзНеобходимыеПартии.КолвоСписания;
			ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
				
			ДокВСД.Продукция = ДокВСД.Партия.Продукция;
			ДокВСД.ВидПродукции = ДокВСД.Партия.ВидПродукции;
			ДокВСД.Продукция_Элемент 	= ДокВСД.Номенклатура.ВСД_Продукция_Элемент;
			ДокВСД.ТермическоеСостояние = Мин( ДокВСД.Продукция_Элемент.ТермическиеУсловияПеревозки, ДокВСД.ТермическоеСостояние);
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование; 
			стр = стр + 1;
			Если стр > тзНеобходимыеПартии.КоличествоСтрок() Тогда
			    Прервать;
			КонецЕсли;
			тзНеобходимыеПартии.ПолучитьСтрокуПоНомеру(стр);		    
		КонецЦикла;
		ДокВСД.ТермическоеСостояние = ?( ДокВСД.ТермическоеСостояние = 0, 1, ДокВСД.ТермическоеСостояние);
		
		Если ДокВСД.КоличествоСтрок() = 0 Тогда
		    Продолжить;
		КонецЕсли;
			
		ДокВСД.Записать();
		ДокументСсылка = ДокВСД.ТекущийДокумент();
		
		СписокДокументов.ВСД = ДокументСсылка;
		
		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");		
	КонецЦикла;
	СписокПартий.УдалитьСтроки();
	тзНеобходимыеПартии.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры


Процедура ОтменитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=1;		
	КонецЦикла;	 

	тзНеобходимыеПартии.УдалитьСтроки();
	СписокПартий.УдалитьСтроки();
	
	ОбновитьИнф();
КонецПроцедуры

Процедура ВыделитьВсеДокументы()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("ВыделитьВсе", "Выделить все документы");
	спМеню.ДобавитьЗначение("ВыделитьСоздать", "Выделить пустые ВСД");
	спМеню.ДобавитьЗначение("ВыделитьНеОтправленные", "Выделить НЕ ОТПРАВЛЕННЫЕ");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "ВыделитьВсе" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			//Если СписокДокументов.сЦвет = "" Тогда 
				СписокДокументов.Пометка=2;		
			//КонецЕсли;
		КонецЦикла;	      
	ИначеЕсли зн = "ВыделитьСоздать" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.сЦвет = "" Тогда 
				СписокДокументов.Пометка=2;		
			КонецЕсли;
		КонецЦикла;	      
	ИначеЕсли зн = "ВыделитьНеОтправленные" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если ( ПустоеЗначение(СписокДокументов.ВСД) = 0 ) Тогда 
				Если ( СокрЛП(СписокДокументов.ВСД.Статус) <> "COMPLETED" ) Тогда 
					СписокДокументов.Пометка=2;		
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	      
	КонецЕсли;
		
	
	

	тзНеобходимыеПартии.УдалитьСтроки();
	СписокПартий.УдалитьСтроки();

	ОбновитьИнф();	
КонецПроцедуры

Процедура ЗаполнитьПартии()
	ВремТЗПодобранныеПартии = "";
	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;

	_Подробно = 0;	
	
	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Основной, Партии");
		
	СписокПартий.УдалитьСтроки();
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;
        
		Если ПустоеЗначение(СписокДокументов.ВСД) = 0 Тогда
			Сообщить("Уже создан "+СписокДокументов.ВСД+" Пропускаю");
		    Продолжить;
		КонецЕсли;
		
		Состояние("Заполнение списка партий ВСД ");
		
		тз = ГМ.ВыгрузитьТч(СписокДокументов.Док);
				
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			СписокПартий.НоваяСтрока();
			СписокПартий.ДокРеализации = тз.ДокРеализации;
			СписокПартий.Номенклатура = тз.Номенклатура;
			СписокПартий.ВСД_Продукция_Элемент = тз.ВСД_Продукция_Элемент;
			СписокПартий.КолвоСписания = тз.Количество;
			Попытка					
				//СписокПартий.КолвоМестСписания = тз.КоличествоМест;
			Исключение
			КонецПопытки;

		КонецЦикла;
	КонецЦикла;
	ВывестиТЗПартийВариант2();
КонецПроцедуры



Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
КонецФункции

Процедура ОтправитьВСД()
	
	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 		
			Если ПроверитьВСД(СписокДокументов.ВСД)=1 Тогда 
				СписокВСД.ДобавитьЗначение(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ2.ОтправитьВсе_ВСД2_Транзакция(СписокВСД, НачДата, КонДата);
	//ЖД покрасить то забыли
	РаскраситьСписокДокументов( ,  );
	ОбновитьИнф();	
КонецПроцедуры

Процедура ПолучитьПартии()
	ЗаписьЖурналаРегистрации("Меркурий получение партий ");
	
	ГМ2.ПолучитьПартии2(Отправитель_Площадка);
	
КонецПроцедуры

Процедура ЗагрузитьПлощадки()
		
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	СписокДействийВСД.ДобавитьЗначение("ЗагрузитьПоХС","Загрузить площадки по ХС");
	СписокДействийВСД.ДобавитьЗначение("НайтиПоИмени","Найти площадки по названию");
	СписокДействийВСД.ДобавитьЗначение("СоздатьХС","Создать ХозСубъект");
	СписокДействийВСД.ДобавитьЗначение("СоздатьПлощадку","Создать Площадку");
		
	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда	
		
		Если Зн ="ЗагрузитьПоХС"  Тогда 
			ГМ.ЗагрузитьПлощадки(СписокДокументов.ХозСубъект);		
			РаскраситьСписокДокументов();
		ИначеЕсли Зн = "НайтиПоИмени" Тогда 
			ГМ.НайтиПлощадкиПоНазванию( СписокДокументов.ХозСубъект, Регион, 1);		
			РаскраситьСписокДокументов();
		ИначеЕсли Зн = "СоздатьХС" Тогда 
			ГМ.СоздатьХС( СписокДокументов );		
			РаскраситьСписокДокументов();
		ИначеЕсли Зн = "СоздатьПлощадку" Тогда 
			ГМ.СоздатьПлощадку( СписокДокументов );		
			РаскраситьСписокДокументов();
		КонецЕсли;
	КонецЕсли;
	
	//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"Реализации");
КонецПроцедуры

Процедура Создать_ВСД_Производство()
	Если тзНеобходимыеПартии.ВидимостьКолонки("ВСД_Производство") < 0 Тогда
		Сообщить("Отключите режим распределения партий","i");
		Возврат;
	КонецЕсли;
	ВремСписокПартий = СоздатьОбъект("ТаблицаЗначений");
	тзНеобходимыеПартии.Выгрузить(ВремСписокПартий);
	ВремСписокПартий.ВыбратьСтроки();
	Пока ВремСписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремСписокПартий.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремСписокПартий.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремСписокПартий.Колво >= ВремСписокПартий.КолвоСписания Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремСписокПартий.ВСД_Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;

		Состояние("Создание ВСД_Производство ");
				
		
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_Производство.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			//
			
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(ВыбФирма,				"Фирма");    
			
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,				"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,					"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( ВремСписокПартий.КолвоСписания,			"Колво");
			СписокПараметров.ДобавитьЗначение( ВремСписокПартий.Колво,			"КолвоВНаличии");    
			СписокПараметров.ДобавитьЗначение( ВремСписокПартий.ВСД_Продукция_Элемент,	"Продукция_Элемент");    
			//
			//СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,		"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,	"ВСД_ОсобыеОтметки");    

			СписокПараметров.ДобавитьЗначение( НачДата,				"НачДата");
			СписокПараметров.ДобавитьЗначение( КонДата,				"КонДата");    
			СписокПараметров.ДобавитьЗначение(ГМ,"ГМ");
			СписокПараметров.ДобавитьЗначение(ГМ2,"ГМ2");

			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_Производство.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}
		
		Иначе
			
			// ТЕСТ
			Если ВремСписокПартий.Колво  >= ВремСписокПартий.КолвоСписания Тогда
			    Продолжить; // 
			КонецЕсли;
			
			ДокВСД = СоздатьОбъект("Документ.ВСД2_Производство");
			ДокВСД.Новый();
			//ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
			ДокВСД.ДатаДок = НачДата;			
			ДокВСД.Производитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Производитель_площадка = Отправитель_Площадка;
			
			Автор = ГМ.ПолучитьАвтора();
			Попытка	ДокВСД.Автор 	= Автор;	Исключение 	КонецПопытки;
			Попытка	ДокВСД.Филиал 	= Автор.Филиал;	Исключение	КонецПопытки;			
			Попытка ДокВСД.Фирма 	= ВыбФирма; Исключение КонецПопытки;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
			ДокВСД.cargoInspected  	= 1;			
			ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");
			ДокВСД.НоваяСтрока();
			
			ДокВСД.Продукция_Элемент 	= ВремСписокПартий.ВСД_Продукция_Элемент;
			ДокВСД.Количество 			= ВремСписокПартий.КолвоСписания - ВремСписокПартий.Колво; // ТЕСТ - разница
			ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
			ДокВСД.ВидДвижения 			= 1;
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
			
			
			ДокВСД.ЗавершитьОперацию = 1;
			ДокВСД.ДатаИзготовления1 = НачДата;
			Если КонДата>НачДата Тогда
				ДокВСД.ДатаИзготовления2 = КонДата;
			КонецЕсли;
			ДокВСД.ДатаСрокГодности1 = ДокВСД.ДатаИзготовления1+ДокВСД.Продукция_Элемент.СрокГодности;
				
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		ВремСписокПартий.ВСД_Производство = ДокументСсылка;
		
		Сообщить(" создан документ "+ВремСписокПартий.ВСД_Производство,"i");		
	КонецЦикла;
	ВремСписокПартий.Выгрузить(тзНеобходимыеПартии);
КонецПроцедуры


Функция ПроверитьВСД_Производство(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	//Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
	//	Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
	//	Возврат 0;
	//КонецЕсли;
	
	Возврат 1;
КонецФункции


Процедура Отправить_ВСД_Производство()
	Если тзНеобходимыеПартии.ВидимостьКолонки("ВСД_Производство") < 0 Тогда
		//Сообщить("Отключите режим распределения партий","i");
		Возврат;
	КонецЕсли;
	СписокВСД = СоздатьОбъект("СписокЗначений");
	тзНеобходимыеПартии.ВыбратьСтроки();
	Пока тзНеобходимыеПартии.ПолучитьСтроку() = 1 Цикл
		Если ПроверитьВСД_Производство(тзНеобходимыеПартии.ВСД_Производство)=1 Тогда 
			СписокВСД.ДобавитьЗначение(тзНеобходимыеПартии.ВСД_Производство);
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД Производство");
	
	ГМ2.ОтправитьВсе_ВСД2_Производство(СписокВСД, НачДата, КонДата);
    ВывестиТзПартийВариант2();
//	ВыбратьПартию_ВСД_Производство(); //Отключил ЖД
КонецПроцедуры

Процедура Очистить_Партию()
	СписокПартий.Партия="";	
КонецПроцедуры


Процедура АннулироватьВСД()
	Если Вопрос("Вы уверены, что хотите аннулировать выбранные ВСД?",4,30)=6 Тогда 
		Сообщить("Выполняется аннулирование ВСД");
		
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка = 2 Тогда 
				ГМ2.Аннулировать_ВСД2_транзакция(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЦикла;
		
		ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьУсловияПеревозки()
		Состояние("Получаем условия перевозки");
		
		ДокОб = создатьОбъект("Документ");
		
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка = 2 Тогда 
				Рез = ГМ2.ПроверитьВозможностьПеремещения(СписокДокументов.ВСД);
				Если ТипЗначенияСтр(Рез) = "ТаблицаЗначений" Тогда 
					ДокОб.НайтиДокумент( СписокДокументов.ВСД );
					Если Рез.КоличествоСтрок() = 0 Тогда
						УсловияПеревозки = "";
						ДокОб.ИмяФайлаРегионализация ="";
						Сообщить("Перевозка разрешена без условий");
					Иначе
						ДокОб.ИмяФайлаРегионализация = ГМ2.ПолучитьИмяФайлаРегионализация( СписокДокументов.ВСД );
						ЗначениеВФайл(ДокОб.ИмяФайлаРегионализация, Рез);
					КонецЕсли;					
					ДокОб.Записать();
				Иначе
					Сообщить("Перевозка разрешена без условий");
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ЗаполнитьСписокДокументов_Реализации();
		Состояние("");
КонецПроцедуры

// ==================== МЕНЮ кнопок ===========================

Процедура МенюВСД()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("СоздатьВСД2", "Создать ВСД по тз Распределения");
	спМеню.ДобавитьЗначение("СоздатьВСД", "Создать ВСД");
	спМеню.ДобавитьЗначение("ОтправитьВСД", "Отправить ВСД");
	спМеню.ДобавитьЗначение("АннулироватьВСД", "Аннулировать ВСД");
	спМеню.ДобавитьЗначение("ПолучитьУсловияПеревозки", "Получить условия перевозки");
	
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "СоздатьВСД" Тогда 
		СоздатьВСД();
	ИначеЕсли зн = "СоздатьВСД2" Тогда 
		СоздатьВСД_ПоТзРаспределения();
	ИначеЕсли зн = "ОтправитьВСД" Тогда 
		ОтправитьВСД();
	ИначеЕсли зн = "АннулироватьВСД" Тогда 
		АннулироватьВСД();
	ИначеЕсли зн = "ПолучитьУсловияПеревозки" Тогда 
		ПолучитьУсловияПеревозки();
	КонецЕсли;
		
КонецПроцедуры

Процедура МенюПроизводство()
	спМеню = СоздатьОбъект("СписокЗначений");
//	спМеню.ДобавитьЗначение("Очистить_Партию", "Очистить выбранную партию");
	спМеню.ДобавитьЗначение("Создать_ВСД_Производство", "Создать ВСД Производство");
	спМеню.ДобавитьЗначение("Отправить_ВСД_Производство", "Отправить ВСД Производство");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Очистить_Партию" Тогда 
		Очистить_Партию();
	ИначеЕсли зн = "Создать_ВСД_Производство" Тогда 
		Создать_ВСД_Производство();
	ИначеЕсли зн = "Отправить_ВСД_Производство" Тогда 
		Отправить_ВСД_Производство();
	КонецЕсли;
		
КонецПроцедуры

//*******************************************


Функция СоздатьВСДПоТзПартий()
	Если тзНеобходимыеПартии.ВидимостьКолонки("ВСД_Производство") < 0 Тогда
		Сообщить("Отключите режим распределения партий","i");
		Возврат "";
	КонецЕсли;
	
	Если СписокПартий.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица партий.","!");
		Возврат "";
	КонецЕсли;

	Состояние("Заполнение ВСД2_Транзакция ");
	ХС = Поставщик_ХозСубъект;//ГМ.СписокКонстант.Получить("Поставщик_ХозСубъект");
	ВыбПлощадка  = Поставщик_Площадка;//ГМ.СписокКонстант.Получить("Поставщик_Площадка"); 
		
	Если ПустоеЗначение(ХС) = 1 Тогда
		СпрВрем = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
		//	 Выберем руками 
		Если СпрВрем.Выбрать("Выберите ХС получателя",) = 0 Тогда
	  	  Сообщить("Невозможно создать документ без ХС");
			Возврат "";
		КонецЕсли;
		ХС = СпрВрем.ТекущийЭлемент();
	КонецЕсли;

	Если ПустоеЗначение(ВыбПлощадка) = 1 Тогда
		СпрВрем = СоздатьОбъект("Справочник.ВСД_Площадка");
		//	 Выберем руками 
		Если СпрВрем.Выбрать("Выберите Площадку получателя",) = 0 Тогда
	  	  Сообщить("Невозможно создать документ без Площадки");
			Возврат "";
		КонецЕсли;
		ВыбПлощадка = СпрВрем.ТекущийЭлемент();
	КонецЕсли;

		
		// создание кастомного ВСД
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакцияПоТзПартий.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_транзакция.ert
			//
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(ВыбФирма,					"Фирма");
			СписокПараметров.ДобавитьЗначение(ХС,							"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(ВыбПлощадка,					"Отправитель_Площадка");    
			//СписокПараметров.ДобавитьЗначение(Перевозчик_ХозСубъект,		"Перевозчик_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение( Отправитель_ХозСубъект,		"Получатель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение( Отправитель_Площадка,		"Получатель_Площадка");    
			СписокПараметров.ДобавитьЗначение( СписокДокументов.Колво,		"Колво");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,				"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,			"ВСД_ОсобыеОтметки");    
			СписокПараметров.ДобавитьЗначение( СписокПартий,				"СписокПартий");    
			СписокПараметров.ДобавитьЗначение(ГМ,"ГМ");
			СписокПараметров.ДобавитьЗначение(ГМ2,"ГМ2");
	
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакцияПоТзПартий.ert");
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				Возврат "";
			КонецЕсли;
			// }
		Иначе
			// стандартное создание ВСД
				
			ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
			ДокВСД.Новый();
			//ДокВСД.ДокОснование = СписокДокументов.Док;
			Автор = ГМ.ПолучитьАвтора();
			Попытка ДокВСД.Фирма = Поставщик_Фирма;Исключение КонецПопытки;       //ГМ.СписокКонстант.Получить("Поставщик_Фирма");
			Попытка	ДокВСД.Автор = Автор;	Исключение	КонецПопытки;
			Попытка	ДокВСД.Филиал = Автор.Филиал;	Исключение 	КонецПопытки;
		
			ДокВСД.ДатаДок = ТекущаяДата();			
			ДокВСД.Отправитель_ХозСубъект =  ХС;
			ДокВСД.Отправитель_Площадка = ВыбПлощадка;		
			ДокВСД.Получатель_ХозСубъект = Отправитель_ХозСубъект;		
			ДокВСД.Получатель_Площадка = Отправитель_Площадка;					
			ДокВСД.Перевозчик_ХозСубъект = ХС;
						
			ДокВСД.ТтнСерия = ""; //ТТН.Серия;
			ДокВСД.ТтнНомер = ДокВСД.НомерДок;
			ДокВСД.ТтнДата = ДокВСД.ДатаДок;
			ДокВСД.номерАвто = "Газель";

			ДокВСД.ФормаВСД = 1;			
		//	ДокВСД.Экспертиза 		= ВСД_Экспертиза;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
			ДокВСД.cargoInspected  	= 1;			
			ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");
			ДокВСД.ТермическоеСостояние = 4;
			тз = СоздатьОбъект("ТаблицаЗначений");
			СписокПартий.Выгрузить(тз);
			
			тз.ВыбратьСтроки();
			Пока тз.ПолучитьСтроку() = 1 Цикл
				// ТЕСТ
				Если тз.Колво  >= тз.КолвоСписания Тогда
			    	Продолжить; // 
				КонецЕсли;
				ДокВСД.НоваяСтрока();

				ДокВСД.Партия = ГМ.НайтиПервуюПартию(тз.ВСД_Продукция_Элемент, ДокВСД.Отправитель_Площадка, ДокВСД.Отправитель_ХозСубъект);
				ДокВСД.Количество = тз.КолвоСписания - тз.Колво; //ТЕСТ 
				ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
				
				ДокВСД.Продукция = ДокВСД.Партия.Продукция;
				ДокВСД.ВидПродукции = ДокВСД.Партия.ВидПродукции;

				ДокВСД.Продукция_Элемент 	= тз.ВСД_Продукция_Элемент;
				ДокВСД.ТермическоеСостояние = Мин( ДокВСД.Продукция_Элемент.ТермическиеУсловияПеревозки, ДокВСД.ТермическоеСостояние);
				ДокВСД.НаименованиеПродукции = тз.ВСД_Продукция_Элемент.Наименование; 
			КонецЦикла;
			
			ДокВСД.ТермическоеСостояние = ?( ДокВСД.ТермическоеСостояние = 0, 1, ДокВСД.ТермическоеСостояние);
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		Сообщить("Создан документ "+СписокДокументов.ВСД,"i");		
		
		Возврат ДокументСсылка;
КонецФункции


Процедура ПереместитьВХС()
	// Переместить с 1 ХС на другой и Погасить
	ТВопроса = "Создать ВСД2_Транзакцию по списку партий
	|на перемещение ?";
	Если Вопрос(ТВопроса,"Да+Нет")="Нет" Тогда
	    Возврат;
	КонецЕсли;
	
	ДокВСД = СоздатьВСДПоТзПартий();
	
	Если ПустоеЗначение(ДокВСД) = 1 Тогда
	    Сообщить("Документ ВСД2_Транзакция не удалось создать");
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(ДокВСД); 
	Сообщить("После гашения нажмите Выбрать Партии");
	Возврат;
	
	// Ниже Удалить после тестов	
	ТВопроса = "Отправить и принять "+ДокВСД+" ?";
	Если Вопрос(ТВопроса,"Да+Нет")="Нет" Тогда
	    Возврат;
	КонецЕсли;
	
	рез = ГМ2.Отправить_ВСД2_Транзакция(ДокВСД); 

	ДокОбъект = СоздатьОбъект("Документ");
	ДокОбъект.Найтидокумент(ДокВСД);
	
	Если НЕ(СокрЛП(ДокОбъект.Статус) = "COMPLETED") Тогда
		Сообщить("Неудача при отправке "+ДокОбъект,"!!");
		Возврат;
	КонецЕсли; 
	ИмяОтвета = ГМ.Компонента.LogFilename;
   	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
   	Парам = СоздатьОбъект("СписокЗначений");
   	Парам.Установить("ФайлОтвета",ИмяОтвета);
   	Парам.Установить("Отправитель_ХозСубъект",ДокОбъект.Получатель_Хозсубъект);
   	Парам.Установить("Отправитель_Площадка",ДокОбъект.Получатель_Площадка); 
   	Парам.Установить("Фирма",ГМ.ПолучитьФирмуПоХС(ДокОбъект.Получатель_Хозсубъект));
  	ОткрытьФормуМодально("Отчет", Парам, КаталогОбработки+"Меркурий_Гашение_ВСД2.ert");   	
	ЗаполнитьПартии();
	//Сообщить(ИмяОтвета);
КонецПроцедуры


//=========================== ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ =============================

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = Элемент.Контрагент;
		Если СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель")= СтараяПлощадка Тогда 
			КонтФормы.Форма.Закрыть();    
			Возврат;
		КонецЕсли;
		
		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если (ПустоеЗначение(СтараяПлощадка)=0) И 
			(СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель")<> СтараяПлощадка) Тогда 
			Если Вопрос("Выбранная площадка закреплена за "+Элемент.Контрагент+" Скопировать площадку?",4,30)=6 Тогда 
				СпрПлощадка.Новый();
				СпрПлощадка.Наименование = Элемент.Наименование;
				СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
				СпрПлощадка.GUID = Элемент.GUID;
				СпрПлощадка.UUID = Элемент.UUID;
				СпрПлощадка.Адрес = Элемент.Адрес;
				СпрПлощадка.GuidХозСубъекта = Элемент.GuidХозСубъекта;
				СпрПлощадка.Склад = Элемент.Склад;
				СпрПлощадка.НомерПлощадки = Элемент.НомерПлощадки;
				СпрПлощадка.Записать();
				
			Иначе
				//замена контрагента в площадке			
				
				Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка,0,0)=1 Тогда
					Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
						//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
						СпрПлощадка.Контрагент = "";
						СпрПлощадка.Записать();				
					КонецЦикла;
				КонецЕсли;
				СпрПлощадка.НайтиЭлемент(Элемент);
				СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
				СпрПлощадка.Записать();
				
			КонецЕсли;	
		Иначе
			СпрПлощадка.НайтиЭлемент(Элемент);
			СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
			СпрПлощадка.Записать();			
		КонецЕсли;
		КонтФормы.Форма.Закрыть();    
		
		СписокДокументов.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());
				
		//РаскраситьСписокДокументов( );		
		ЗаполнитьСписокДокументов_Реализации();
	ИначеЕсли Элемент.Вид()="ВСД_Партия" Тогда
		КонтФормы.Форма.Закрыть();    
		
		СписокПартий.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		СписокПартий.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		Попытка СписокПартий.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест); Исключение КонецПопытки;				
	ИначеЕсли Элемент.Вид()="Продукция_Элемент" Тогда
			Предупреждение("Выбран "+Элемент);
		//КонтФормы.Форма.Закрыть();    
		
		//СписокПартий.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		//СписокПартий.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		//Попытка СписокПартий.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест); Исключение КонецПопытки;				

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
// Дмитрий добавлено
//	ИмяФайла="";
//	КаталогОбработки="";
	
//	РасположениеФайла(КаталогОбработки, ИмяФайла);
//*************
	
    ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
	ГМ.Инициализация(Контекст);        
    ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	ГМ2 = СоздатьОбъект("Меркурий_ГлобальныйМодуль2");
	ГМ2.Инициализация(ГМ);
	
   	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
	Автор = ГМ.ПолучитьАвтора();
	попытка
		Филиал = Автор.Филиал;
	Исключение
		Филиал="";
	КонецПопытки;    
	
	ЗаголовокНадпись();   
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Реализации");
	Форма.Закладки.ДобавитьЗначение("Партии");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, СписокДокументов, Реализации");
	
	Партия = "";
	
	// Обработку можно вызвать для заполнения списка реализаций на основании маршрута
	// для этого в Маршрут в печатные формы добавьте ПечФорма_ВСД_ГрупповаяОбработка.ert
	//
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
				
		Если ПустоеЗначение(Парам)=0 тогда 
			Для Д=1 По Парам.РазмерСписка() Цикл
				Док = Парам.ПолучитьЗначение(Д);
				СписокДокументов.НоваяСтрока();
				СписокДокументов.Пометка= 1;
				//СписокДокументов.инфо = ;
				СписокДокументов.Док = Док;
				//СписокДокументов.ВСД = ;
				СписокДокументов.Колво = Док.ВесДокумента;
				//СписокДокументов.Вес = Док.ВесДокумента;
				Попытка СписокДокументов.КолвоМест = Док.КоличествоМестДокумента; Исключение КонецПопытки;					
				СписокДокументов.Контрагент = Док.Контрагент;
				СписокДокументов.Грузополучатель = Док.ПолучитьАтрибут(НазваниеРеквизитаГрузополучатель);
				СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(СписокДокументов.Контрагент);
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту(СписокДокументов.Грузополучатель);
			КонецЦикла;
			
			РаскраситьСписокДокументов();
			
			ВыделитьВсеДокументы();	
		КонецЕсли;
	Иначе
		//стандартное заполнение документов
		ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;   
	//
	
	
	Если ПустоеЗначение(ДобавлятьУпаковки)=1 Тогда 
		
		СписокДокументов.УдалитьКолонку("КолвоМест");
//		СписокПартий.УдалитьКолонку("КолвоМест");
//		СписокПартий.УдалитьКолонку("КолвоМестСписания");
		
	КонецЕсли;
	
КонецПроцедуры

 // предопределенная процедура
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	 	
 	Если ЗначениеЗакладки="Реализации" Тогда
		Форма.ИспользоватьСлой("Основной, СписокДокументов, Реализации");
		//СписокДокументов.УдалитьСтроки();
		Если СписокДокументов.КоличествоСтрок()=0 Тогда
			ЗаполнитьСписокДокументов_Реализации();
		КонецЕсли;		
	ИначеЕсли ЗначениеЗакладки="Партии" Тогда
		Форма.ИспользоватьСлой("Основной, Партии");
		//ЗаполнитьПартии();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;     
		
КонецПроцедуры 


//ЖД доп
Процедура ПриИзмененииПлощадки()
	ГМ.СписокКонстант.Установить("Отправитель_Площадка",Отправитель_Площадка);	
	//Обновить список документов
	СписокДокументов.УдалитьСтроки();
	СписокПартий.УдалитьСтроки();		
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

Процедура ПриИзмененииФирмы() 
	Если Метаданные.Справочник("Фирмы").Выбран() = 1 Тогда
		ГМ.Инициализация(Контекст);        
    	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	   	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
 	КонецЕсли;	
	СписокДокументов.УдалитьСтроки();
	СписокПартий.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();	
КонецПроцедуры



НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов.НоваяКолонка("сЦвет",,,,,1,);
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("Грузополучатель",,,,,70,);
СписокДокументов.НоваяКолонка("Площадка",,,,,30,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Колво","Число",10,3,,10,);
//СписокДокументов.НоваяКолонка("Вес",,,,,10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,,10,);
СписокДокументов.НоваяКолонка("Док",,,,,30,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,10,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,10,);
СписокДокументов.ВыводитьПиктограммы("Пометка");

СписокПартий = СоздатьОбъект("Таблицазначений");
СписокПартий.НоваяКолонка("ДокРеализации",,,,,20,);
СписокПартий.НоваяКолонка("Номенклатура",,,,,20,);
СписокПартий.НоваяКолонка("ВСД_Продукция_Элемент",,,,,20,);
СписокПартий.НоваяКолонка("Партия",,,,,20,);
СписокПартий.НоваяКолонка("ПолеСортировки",,,,,10,);
СписокПартий.НоваяКолонка("Колво","Число",,,,5,);
//СписокПартий.НоваяКолонка("КолвоМест","Число",,,,5,);
СписокПартий.НоваяКолонка("КолвоСписания","Число",,,,5,);
//СписокПартий.НоваяКолонка("КолвоМестСписания","Число",,,,5,);
//СписокПартий.НоваяКолонка("ВСД_Производство",,,,,3,);

ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

НазваниеВидаДокументаРеализация = "Реализация";
НазваниеРеквизитаКоличество = "Количество";

Попытка
	ЗагрузитьВнешнююКомпоненту("1cpp.dll");
Исключение
	Сообщить("Ошибка при загрузке 1cpp.dll");
	Сообщить(ОписаниеОшибки());
КонецПопытки;

Попытка
	ЗагрузитьВнешнююКомпоненту("formex.dll");
Исключение
	Сообщить("Ошибка при загрузке formex.dll");
	Сообщить(ОписаниеОшибки());
КонецПопытки;

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(0);

_ЗаполнятьВСДБезПартий = 1;