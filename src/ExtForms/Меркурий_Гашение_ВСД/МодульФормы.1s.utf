//Автор: Жуков Дмитрий
//zhukov@kb99.pro 
//Все права принадлежат ИП Синявский Ф.А. http://www.kb99.pro
//**********
// Считывание работает в 2 прохода
// 1 - считывает данные ответа в ТЗ 
// 2 - обрабатывает загруженную ТЗ - Создает докумены ВСД_Входящий (или перезаписывает), находит/создает по ГУИДам справочники в 1С


Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем ВыбФирма Экспорт;
Перем оПривязки; //:Меркурий.Привязки

Функция ПриИзмененииПлощадки()
	//В противном случае партии запишутся на первую попавшуюся площадку
	// когда у ХС их несколько !!!!
	//Необходимо учесть этот момент во всех обработках
	ТЗВСД.УдалитьСтроки();
	ГМ.СписокКонстант.Установить("Отправитель_Площадка",Отправитель_Площадка);	
КонецФункции

Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	ТЗВСД.УдалитьСтроки();
	ПриИзмененииПлощадки();
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ



//******************************************************************************
Процедура ОтменитьВсеДокументы()
	ТЗВСД.ВыбратьСтроки();
	Пока ТЗВСД.ПолучитьСтроку() = 1 Цикл
		ТЗВСД.Пометка=1;		
	КонецЦикла;	 
		

//	ОбновитьИнф();
КонецПроцедуры

Процедура ВыделитьВсеДокументы()
	ТЗВСД.ВыбратьСтроки();
	Пока ТЗВСД.ПолучитьСтроку() = 1 Цикл
		Если ТЗВСД.сЦвет = "" Тогда 
			ТЗВСД.Пометка=2;		
		КонецЕсли;
	КонецЦикла;	      

//	ОбновитьИнф();	
КонецПроцедуры


Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	Форма.ИспользоватьСлой(Форма.Закладки.ПолучитьЗначение(НомерЗакладки));
КонецПроцедуры 



// нужно подумать, как красить будем
Процедура РаскраситьСписокДокументов(тзДок="")
	
	Если ПустоеЗначение(тзДок)=1 Тогда 
		тз = СоздатьОбъект("ТаблицаЗначений");
		ТЗВСД.Выгрузить(тз);
	Иначе
		тз = тзДок;
	КонецЕсли;	
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл		

		
		Если ПустоеЗначение(тз.ДокВСД)=0 Тогда
			Если СокрЛП(тз.ДокВСД.Статус)="COMPLETED" Тогда
				тз.сЦвет = цвЗеленый;
			иначеЕсли (ПустоеЗначение(тз.ДокВСД.Статус)= 1) или (СокрЛП(тз.ДокВСД.Статус)="CONFIRMED") Тогда
				тз.сЦвет = "";
			иначе
				тз.сЦвет = цвЖелтый;
			КонецЕсли;
			Если (ПустоеЗначение(тз.докВСД.Отправитель_ХозСубъект) = 1) или
				(ПустоеЗначение(тз.докВСД.Отправитель_Площадка) = 1) или
				(ПустоеЗначение(тз.ДокВСД.ПроизводительСписок) = 1) Тогда
			    тз.сЦвет = цвКрасный;
			КонецЕсли;
			Если (ПустоеЗначение(тз.докВСД.Перевозчик_ХозСубъект) = 1) и
				(ПустоеЗначение(тз.Перевозчик) = 0) Тогда
			    тз.сЦвет = цвКрасный;
			КонецЕсли;
		Иначе			
			тз.сЦвет = цвКрасный;
		КонецЕсли;
		
	КонецЦикла;
	
	ТекСтрока = ТЗВСД.ТекущаяСтрока();
	
	ТЗВСД.Загрузить(тз);
	
	ТЗВСД.ВыводитьПиктограммы("Пометка");

	Если ПустоеЗначение(ТекСтрока)=1 Тогда 
		ТЗВСД.ТекущаяСтрока(1);
	Иначе
		ТЗВСД.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;
КонецПроцедуры



Процедура Клик()
	Если ТЗВСД.ТекущаяСтрока() = 0 Тогда
	    Возврат;
	КонецЕсли;
	текСтр = ТЗВСД.ТекущаяСтрока();
	текКол = ТЗВСД.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = ТЗВСД.Пометка;
		Если Пометка = 2 Тогда
			ТЗВСД.Пометка=1;
		Иначе
			ТЗВСД.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол = "producer" Тогда
		Сп = ЗначениеИзСтроки(ТЗВСД.producer); 
		зн="";
		Сп.ВыбратьЗначение(зн,"Производители");
	ИначеЕсли текКол = "ProductMarking" Тогда 
		Сп = ЗначениеИзСтроки(ТЗВСД.ProductMarking); 
		зн="";
		Сп.ВыбратьЗначение(зн,"Маркировка");
	ИначеЕсли текКол = "ДокВСД" Тогда
		Эл = ТЗВСД.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	//	Если ПустоеЗначение(ТЗВСД.ДокВСД)=0 Тогда
		    //ОткрытьФорму(ТЗВСД.ДокВСД);
	//	КонецЕсли;; 
	
	КонецЕсли;
КонецПроцедуры 


//***************************
// 
Функция НайтиВСДпоUUID( uuid) 

	ВидДокумента = "ВСД_Входящий";

	тз = СоздатьОбъект("ТаблицаЗначений");
	
	Если ПустоеЗначение(UUID)=1 Тогда 	
		Возврат "";
	КонецЕсли;
	
	тз = СоздатьОбъект("ТаблицаЗначений");
	Если ГМ.ЭтоSQL=1 ТОгда 
		RS = СоздатьОбъект("ODBCRecordset");
		RS.УстБД1С();     	
	
		ТекстЗапроса = "
		|select 	              
	    |   ДокВСД.iddoc [id $Документ."+ВидДокумента+"]
	    |from $Документ."+ВидДокумента+" as ДокВСД  
	  	|where 
	  	|	( $ДокВСД.UUID = :uuid)
	  	|";			
		RS.УстановитьТекстовыйПараметр("uuid", uuid);  
		//RS.Отладка(1);
		тз = RS.ВыполнитьИнструкцию(ТекстЗапроса);
			
	Иначе
	
		Запрос = ГМ.базаДанных.НовыйЗапрос();
		ТекстЗапроса = "
		|select 	              
	    |   ДокВСД.iddoc [id $Документ."+ВидДокумента+"]
	    |from [Документ."+ВидДокумента+"] as ДокВСД  
	  	|where 
	  	|	( ДокВСД.UUID = :uuid)
	  	|";	
		Запрос.Подставлять("uuid", uuid);
		ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);

	КонецЕсли;	

	Док = СоздатьОбъект("Документ."+ВидДокумента);
	Если ПустоеЗначение(тз)=1 Тогда 
		Док.Новый();

		Сообщить("Создан новый "+ВидДокумента+" № "+Док.НомерДок);
	Иначе		
		Док.НайтиДокумент(тз.ПолучитьЗначение(1,1));
		Если НЕ(СокрЛП(Док.Статус) = "COMPLETED") Тогда
			Док.СделатьНеПроведенным();
			Док.СнятьПометкуУдаления();    
		КонецЕсли;		
		
		Сообщить("Найден "+Док.ТекущийДокумент());
	конецЕсли;	
	
	Возврат Док;	
КонецФункции



//***************************

// Функция загружает ответ от Ветиса = ответ на второй запрос
// Просто читаем XML в ТЗВСД - например мы ее получим из Гл Модо потом
Процедура ЗагрузитьXML_ВСД(имяФайла)
	//стандартное поведение функции
	ТЗВСД.УдалитьСтроки();	
    objDom=СоздатьОбъект("MSXML2.DOMDocument.6.0");
    objDom.load(ИмяФайла);    
    
	
	
    objDom.setProperty("SelectionNamespaces", "
		|xmlns:bs='http://api.vetrf.ru/schema/cdm/base' 
		|xmlns:argc='http://api.vetrf.ru/schema/cdm/argus/common' 
		|xmlns:ent='http://api.vetrf.ru/schema/cdm/cerberus/enterprise' 
		|xmlns:prod='http://api.vetrf.ru/schema/cdm/argus/production' 
		|xmlns:ns2='http://api.vetrf.ru/schema/cdm/mercury/vet-document' 
		|xmlns:ns1='http://api.vetrf.ru/schema/cdm/mercury/applications' 
		|xmlns:vetd='http://api.vetrf.ru/schema/cdm/mercury/vet-document'
		|xmlns:default='http://www.w3.org/2001/XMLSchema'
		|" );
		
	applicationId = objDom.selectSingleNode("//*[local-name() = 'applicationId']").text ;
	
	vetDocumentList = objDom.selectNodes("//*[local-name() = 'vetDocument']") ;    
	
    Для i1 = 0 По vetDocumentList.length - 1 Цикл
        vetDocument=vetDocumentList.item(i1);
		ТЗВСД.НоваяСтрока();
		ТЗВСД.Пометка=1;
		ТЗВСД.uuid 	= vetDocument.selectSingleNode("*[local-name()='uuid']").text;

		Попытка ТЗВСД.forma	 = vetDocument.selectSingleNode("vetd:form").text Исключение КонецПопытки;
		Попытка ТЗВСД.st 	 = vetDocument.selectSingleNode("vetd:status").text Исключение КонецПопытки;
		Попытка ТЗВСД.type 	 = vetDocument.selectSingleNode("vetd:type").text Исключение КонецПопытки;
		Попытка ТЗВСД.всдсерия = vetDocument.selectSingleNode("vetd:issueSeries").text Исключение КонецПопытки;
		Попытка ТЗВСД.всдномер = vetDocument.selectSingleNode("vetd:issueNumber").text Исключение КонецПопытки;	
		Попытка ТЗВСД.createDate = vetDocument.selectSingleNode("vetd:issueDate").text Исключение КонецПопытки;		
		Попытка ТЗВСД.consignorBusinessEntity 	= vetDocument.selectSingleNode("vetd:consignor").selectSingleNode("ent:businessEntity").selectSingleNode("bs:guid").text Исключение КонецПопытки;
		Попытка ТЗВСД.consignorEnterprise 		= vetDocument.selectSingleNode("vetd:consignor").selectSingleNode("ent:enterprise").selectSingleNode("bs:guid").text Исключение КонецПопытки;		
		Попытка ТЗВСД.consigneeBusinessEntity 	= vetDocument.selectSingleNode("vetd:consignee").selectSingleNode("ent:businessEntity").selectSingleNode("bs:guid").text Исключение КонецПопытки;			
		Попытка ТЗВСД.consigneeEnterprise 		= vetDocument.selectSingleNode("vetd:consignee").selectSingleNode("ent:enterprise").selectSingleNode("bs:guid").text Исключение КонецПопытки;
			
		Попытка
			transportInfo = vetDocument.selectSingleNode("vetd:transportInfo");
			ТЗВСД.ТипТранспорта = transportInfo.selectSingleNode("*[local-name()='transportType'] ").text;
			Если ТЗВСД.типТранспорта = "1" Тогда
				ТЗВСД.Автономер = transportInfo.selectSingleNode("*[local-name()='transportNumber'] ").selectSingleNode("*[local-name()='vehicleNumber']").text;
				Попытка ТЗВСД.номерПолуприцепа = transportInfo.selectSingleNode("*[local-name()='transportNumber'] ").selectSingleNode("*[local-name()='trailerNumber']").text; Исключение КонецПопытки;
				Попытка ТЗВСД.номерКонтейнера =  transportInfo.selectSingleNode("*[local-name()='transportNumber'] ").selectSingleNode("*[local-name()='containerNumber']").text; Исключение КонецПопытки;
			Иначеесли ТЗВСД.типТранспорта = "2" Тогда
				ТЗВСД.Автономер = transportInfo.selectSingleNode("*[local-name()='transportNumber'] ").selectSingleNode("*[local-name()='wagonNumber']").text;
			Иначеесли ТЗВСД.типТранспорта = "3" Тогда
				ТЗВСД.Автономер = transportInfo.selectSingleNode("*[local-name()='transportNumber'] ").selectSingleNode("*[local-name()='flightNumber']").text;
			Иначеесли (ТЗВСД.типТранспорта = "4") или (ТЗВСД.типТранспорта = "5") или (ТЗВСД.типТранспорта = "6") Тогда
				ТЗВСД.Автономер = transportInfo.selectSingleNode("*[local-name()='transportNumber'] ").selectSingleNode("*[local-name()='shipName']").text;
//			Иначеесли ТЗВСД.типТранспорта = "7" Тогда
//				ТЗВСД.Автономер = transportInfo.selectSingleNode("*[local-name()='transportNumber'] ").selectSingleNode("*[local-name()='shipName']").text;
				
			КонецЕсли;
		исключение
		КонецПопытки;

		Попытка ТЗВСД.ТермУсловия 	=  vetDocument.selectSingleNode("vetd:transportStorageType").text; Исключение КонецПопытки;
		Попытка ТЗВСД.местность 	=  vetDocument.selectSingleNode("vetd:locationProsperity").text; Исключение КонецПопытки;
		Попытка ТЗВСД.осотм 		=  vetDocument.selectSingleNode("vetd:specialMarks").text; Исключение КонецПопытки;
		Попытка ТЗВСД.эксп 			=  vetDocument.selectSingleNode("vetd:expertiseInfo").text; Исключение КонецПопытки;
		Попытка ТЗВСД.ттнномер 		=  vetDocument.selectSingleNode("vetd:waybillNumber").text; Исключение КонецПопытки;
		Попытка ТЗВСД.ттндата 		=  vetDocument.selectSingleNode("vetd:waybillDate").text; Исключение КонецПопытки; 
		Попытка ТЗВСД.ттнТип 		=  vetDocument.selectSingleNode("vetd:waybillType").text; Исключение КонецПопытки; 
		Попытка ТЗВСД.cInspected 	=  vetDocument.selectSingleNode("vetd:cargoInspected").text; Исключение КонецПопытки;
		Попытка ТЗВСД.cExpertized 	=  vetDocument.selectSingleNode("vetd:cargoExpertized").text; Исключение КонецПопытки;
		Попытка ТЗВСД.всддата 		=  vetDocument.selectSingleNode("vetd:issueDate").text; Исключение КонецПопытки;
		Попытка ТЗВСД.перевозчик 	=  vetDocument.selectSingleNode("vetd:broker").selectSingleNode("bs:guid").text; Исключение КонецПопытки;
	
		batch = vetDocument.selectSingleNode("vetd:batch");
		
		product 			= batch.selectSingleNode("vetd:product").selectSingleNode("bs:guid").text;
		subProduct 			= batch.selectSingleNode("vetd:subProduct").selectSingleNode("bs:guid").text;
		
		ТЗВСД.product 		= ГМ.НайтиПродукцию(product);		
		ТЗВСД.subProduct 	= ГМ.НайтиВидПродукции(subProduct);

		Попытка
			productItem = batch.selectSingleNode("*[local-name()='productItem'] ");
			ТЗВСД.productItem = ГМ.Найти_Продукция_Элемент2(productItem, ТЗВСД.product , ТЗВСД.subProduct); 
		Исключение
			Сообщить("Не удалось получить элемент [productItem]","!");
			ТЗВСД.productItem = "";
		КонецПопытки;
		
		Попытка	ТЗВСД.НаименованиеПродукции = productItem.selectSingleNode("*[local-name()='name']").text;	Исключение ТЗВСД.НаименованиеПродукции="";	КонецПопытки;

		
		
		ТЗВСД.volume 	= batch.selectSingleNode("vetd:volume").text;
		ТЗВСД.unitGuid	= batch.selectSingleNode("vetd:unit").selectSingleNode("bs:guid").text;
		
		Попытка ТЗВСД.packingFormUuid	= batch.selectSingleNode("*[local-name()='packingList']").selectSingleNode("*[local-name()='packingForm']").selectSingleNode("bs:uuid").text; Исключение КонецПопытки;
		Попытка ТЗВСД.packingFormName	= batch.selectSingleNode("*[local-name()='packingList']").selectSingleNode("*[local-name()='packingForm']").selectSingleNode("*[local-name()='name']").text; Исключение КонецПопытки;
	
		Попытка ТЗВСД.packingAmount = batch.selectSingleNode("vetd:packingAmount").text; Исключение КонецПопытки;
		ТЗВСД.Скоропортящаяся = ?(batch.selectSingleNode("vetd:perishable").text="true",1,0);
		ТЗВСД.Некачественная = ?(batch.selectSingleNode("vetd:lowGradeCargo").text="true",1,0);
				
		ДатаИзготовления1=""; ДатаИзготовления2=""; ДатаИзготовленияСтрока="";
		ГМ.Дата_из_XML(batch.selectSingleNode("vetd:dateOfProduction"), ДатаИзготовления1, ДатаИзготовления2, ДатаИзготовленияСтрока );
		ТЗВСД.ДатаИзготовления1 = ДатаИзготовления1;
		ТЗВСД.ДатаИзготовления2 = ДатаИзготовления2; 
		ТЗВСД.ДатаИзготовленияСтрока = ДатаИзготовленияСтрока;
		
		ДатаСрокГодности1=""; ДатаСрокГодности2=""; ДатаСрокГодностиСтрока="";
		ГМ.Дата_из_XML(batch.selectSingleNode("vetd:expiryDate"), ДатаСрокГодности1, ДатаСрокГодности2, ДатаСрокГодностиСтрока );
		ТЗВСД.ДатаСрокГодности1 = ДатаСрокГодности1;
		ТЗВСД.ДатаСрокГодности2 = ДатаСрокГодности2;
		ТЗВСД.ДатаСрокГодностиСтрока = ДатаСрокГодностиСтрока;
				        
		Попытка
			// выборка списка производителей  - возможно неправильно???
			//Pl = batch.selectSingleNode("vetd:producerList");
			Pl = batch.selectSingleNode("*[local-name()='producerList']");
			ProducerList = Pl.selectNodes("ent:producer") ; 
			
			СпПроизводителей = СоздатьОбъект("СписокЗначений");
			Попытка
			    Для l1 = 0 По ProducerList.length - 1 Цикл
					УидПроизводителя = ProducerList.item(l1).selectSingleNode("ent:enterprise").selectSingleNode("bs:guid").text;
					СпПроизводителей.ДобавитьЗначение(УидПроизводителя);
				КонецЦикла;
				ТЗВСД.producer = ЗначениеВСтроку(СпПроизводителей);
			Исключение
				ТЗВСД.producer = ЗначениеВСтроку(СпПроизводителей);
			КонецПопытки;
				
			ТЗВСД.страна_ууид="";
			ТЗВСД.страна_гуид="";
			попытка
				ТЗВСД.страна_ууид = batch.selectSingleNode("vetd:countryOfOrigin").selectSingleNode("bs:uuid").text; //ХозСубъект
				ТЗВСД.страна_гуид = batch.selectSingleNode("vetd:countryOfOrigin").selectSingleNode("bs:guid").text; //ХозСубъект
			исключение
			конецпопытки;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
		СзМаркировка=создатьобъект("списокзначений");  
		попытка
			марк = batch.selectSingleNode("*[local-name()='productMarkingList']") ;
			марк11 = марк.selectNodes("*[local-name()='productMarking']") ;     
			
	    	Для зз = 0 По марк11.length - 1 Цикл 
				попытка
			        марк1=марк11.item(зз);
					времм	= марк1.text;
					СзМаркировка.добавитьзначение(времм);
				исключение
				конецпопытки;
			КонецЦикла;
			ТЗВСД.productMarking = ЗначениеВСтроку(СзМаркировка);
		исключение
			ТЗВСД.productMarking = ЗначениеВСтроку(СзМаркировка);
		конецпопытки;


		ТЗВСД.owner = batch.selectSingleNode("vetd:owner").selectSingleNode("bs:guid").text; //ХозСубъект
	КонецЦикла;

	ТЗВСД.ВыводитьПиктограммы("Пометка");
	
КонецПроцедуры



Процедура ПриНачалеВыбораЗначения(Элемент, ФлагПродолжения)

	Если Элемент = "СтрИмяФайла" Тогда
		иф=""; ик="";
		ФС.ВыбратьФайл(0,иф,ик,"Выберите файл шаблона:","(*.xml)|*.xml","xml",60);
		СтрИмяФайла = ик+иф;
	КонецЕсли;
	Если Элемент = "Отправитель_Площадка" Тогда
		//ЖД отфильтруем наши площадки
		ТекХС = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		Если ПустоеЗначение(ТекХС) = 1 Тогда
			Возврат;
		КонецЕсли;
		
		тз = ГМ.ВыбратьВсеПлощадкиХС(ТекХС);	
		СписокОтбора = СоздатьОбъект("СписокЗначений");
	
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;	
        ОткрытьФорму("Справочник.ВСД_Площадка", СписокОтбора);
        ФлагПродолжения = 0;
		Возврат;
	КонецЕсли;	
КонецПроцедуры 

Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

Процедура ПриОткрытии()
	ВыбФирма = "";
	ГМ._ПриОткрытии(Контекст);

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной");	
	
	//стр = "";
	//попытка
	//	к = ГМ.ПараметрыФирм.ПолучитьЗначение(1,стр);
	//	Если Пустоезначение(стр) = 0 Тогда
	//		ВыбФирма = ЗначениеИзСтрокиВнутр(стр);
	//	КонецЕсли;
	//Исключение
	//КонецПопытки;

	Если Форма.МодальныйРежим() = 0 Тогда
		оПривязки.Привязка("ТЗВСД", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("кнЗакрыть","T","Форма");
	КонецЕсли;
КонецПроцедуры

Функция СтрокаВДату(ДатаСтрока)
	год = Лев(ДатаСтрока,4 );
	мес = Сред(ДатаСтрока,6,2);
	день = Сред(ДатаСтрока,9,2);
	возврат Дата(год, мес,день);
КонецФункции


Процедура ОбработатьТЗ()
	ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗВСД.Выгрузить(ВремТЗ);
	ВремТЗ.ВыбратьСтроки();
	Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
	    
        ВремТЗ.ВладелецХС = ГМ.НайтиХСпоGUID(ВремТЗ.owner);
		Если ПустоеЗначение(ВремТЗ.ВладелецХС)=1 Тогда
			Сообщить("Нет ХС владельца в справочнике "+ТЗВСД.owner);
			// Может добавить в справочник с наименованием = ГУИД??
			продолжить;
		КонецЕсли;
		// Возможно лучше найти все необходимые реквизиты (ХС и площадки) и в ТЗ Заполнить,
		// отсеить если не найдено
		// Чтобы впустую документ не создавать
				
		докОбъект = НайтиВСДпоUUID(ВремТЗ.uuid );
		//(ДокОбъект.Проведен()=0) или 
		Если НЕ(СокрЛП(ДокОбъект.Статус) = "COMPLETED") Тогда    // или другие условия, пока считаем, что если не проведен - не отправлен.
			// можно попробовать вынести в отд. процедуру заполнение док-та
			//Спзн = СоздатьОбъект("СписокЗначений");
			//ВремТЗ.Выгрузить(СпЗн,ВремТЗ.НомерСтроки,ВремТЗ.НомерСтроки);
			//ЗаполнитьВСДИсх(СпЗн);
			ДокОбъект.UUID = ВремТЗ.uuid;
			Если Пустоезначение(ВремТЗ.всдномер)=0 тогда
				//бумажный
				ДокОбъект.ВидВСД = 1;
			Иначе
				// электронный
				ДокОбъект.ВидВСД = 2; 
			конецесли;	
			
			
	        докОбъект.Статус = ВремТЗ.st;	

			ДокОбъект.Отправитель_ХозСубъект = ГМ.НайтиХСпоGUID(ВремТЗ.consignorBusinessEntity);
			ДокОбъект.Отправитель_Площадка = ГМ.НайтиПлощадку(ВремТЗ.consignorEnterprise);
			
			ДокОбъект.Получатель_ХозСубъект = ГМ.НайтиХСпоGUID(ВремТЗ.consigneeBusinessEntity);
			
			ДокОбъект.Получатель_Площадка = ГМ.НайтиПлощадку(ВремТЗ.consigneeEnterprise);
			Если Пустоезначение(ВремТЗ.Перевозчик) = 0 Тогда
			    ДокОбъект.Перевозчик_ХозСубъект = ГМ.НайтиХСпоGUID(ВремТЗ.Перевозчик); 
			КонецЕсли;
			Производители = ЗначениеИзСтроки(ВремТЗ.producer);
			ПроизводителиСписок = СоздатьОбъект("СписокЗначений");
			к=0;
			Попытка				
				Для к=1 по Производители.РазмерСписка() Цикл
					Производитель_Площадка 	= ГМ.НайтиПлощадку(Производители.ПолучитьЗначение(к));
					ПроизводителиСписок.ДобавитьЗначение(Производитель_Площадка);
				КонецЦикла;
				ДокОбъект.ПроизводительСписок = ЗначениеВСтроку(ПроизводителиСписок);
			Исключение
			КонецПопытки;

			Маркировка = ЗначениеИзСтроки(ВремТЗ.ProductMarking);
			МаркировкаСписок = СоздатьОбъект("СписокЗначений");
			к=0;
			Для к=1 по Маркировка.РазмерСписка() Цикл
				МаркировкаСписок.ДобавитьЗначение(Маркировка.ПолучитьЗначение(к));
			КонецЦикла;
			ДокОбъект.МаркировкаСписок = ЗначениеВСтроку(МаркировкаСписок);
			
			ДокОбъект.Продукция = (ВремТЗ.product);
			ДокОбъект.ВидПродукции = (ВремТЗ.subProduct);			
			ДокОбъект.Продукция_Элемент = ВремТЗ.productItem;
			ДокОбъект.НаименованиеПродукции = ДокОбъект.Продукция_Элемент.Наименование;
	
			ДокОбъект.Количество = Число(ВремТЗ.volume);
			ДокОбъект.ЕдиницаИзмерения = ГМ.НайтиЕдИзмерения( ВремТЗ.unitGuid );
			ДокОбъект.КоличествоМест = Число(ВремТЗ.packingAmount);
			ФормаУпаковки 			= ГМ.НайтиФормуУпаковки( ВремТЗ.packingFormUuid, ВремТЗ.packingFormName);
			ДокОбъект.ФормаУпаковки = ФормаУпаковки;
	
			ДокОбъект.ДатаИзготовления1 = ВремТЗ.ДатаИзготовления1;
			ДокОбъект.ДатаИзготовления2 = ВремТЗ.ДатаИзготовления2;
	        ДокОбъект.ДатаИзготовленияСтрока = ВремТЗ.ДатаИзготовленияСтрока;
			ДокОбъект.ДатаСрокГодности1 = ВремТЗ.ДатаСрокГодности1;
			ДокОбъект.ДатаСрокГодности2 = ВремТЗ.ДатаСрокГодности2;
			ДокОбъект.ДатаСрокГодностиСтрока = ВремТЗ.ДатаСрокГодностиСтрока;
			Попытка
				ДокОбъект.Фирма=ВыбФирма;
//				докОбъект.Фирма = глПользователь.ОсновнаяФирма;
			Исключение
				
			КонецПопытки;
			Попытка	ДокОбъект.Автор = ГМ.ПолучитьАвтора();	Исключение 	КонецПопытки;
		    
			докОбъект.всдсерия = ВремТЗ.всдсерия;
			докОбъект.всдномер = ВремТЗ.всдномер;
			докОбъект.всддата = СтрокаВДату(ВремТЗ.всддата);
			докОбъект.термическоесостояние = ГМ.ТермическиеУсловияПеревозки.найтизначение(ВремТЗ.ТермУсловия);
			докОбъект.номеравто = ВремТЗ.автономер;
			Попытка докОбъект.номерПолуприцепа = ВремТЗ.номерПолуприцепа; Исключение КонецПопытки;
			Попытка докОбъект.номерКонтейнера = ВремТЗ.номерКонтейнера; Исключение КонецПопытки;
			
			докОбъект.ТипТС = ВремТЗ.ТипТранспорта;
			
			докОбъект.ВСДместность = ВремТЗ.местность;
			докОбъект.ВСДэкспертиза = ВремТЗ.эксп;
			докОбъект.особыеотметки = ВремТЗ.осотм;
			докОбъект.ттнномер = ВремТЗ.ттнномер;
			докОбъект.ттндата = СтрокаВДату(ВремТЗ.ттндата);
			Попытка докОбъект.ттнТип = ВремТЗ.ттнТип; Исключение КонецПопытки; 
			докОбъект.Скоропортящийся = ВремТЗ.Скоропортящаяся;
			докОбъект.Некачественный = ВремТЗ.Некачественная;
			докОбъект.cargoInspected=?(ВремТЗ.cInspected="true",1,0);
			докОбъект.cargoExpertized=?(ВремТЗ.cExpertized="true",1,0);
			докОбъект.ДатаДок = СтрокаВДату(ВремТЗ.createDate);   // из ГМ  здесь размещена
			
			
            ДокОбъект.Записать();
		    
		КонецЕсли;
		ВремТЗ.ДокВСД = ДокОбъект.ТекущийДокумент();
		
	КонецЦикла;
    ВремТЗ.Выгрузить(ТЗВСД); 
	ТЗВСД.ВыводитьПиктограммы("Пометка");
КонецПроцедуры

Процедура ОбработатьДанные()
	Если ФС.СуществуетФайл(СтрИмяФайла) = 0 Тогда
	    Сообщить("Отсутствует файл ответа");
		Возврат;
	КонецЕсли;
	ЗагрузитьXML_ВСД(СтримяФайла);
	ОбработатьТЗ();
	РаскраситьСписокДокументов();	
КонецПроцедуры

// ВСД Входящий

Функция Проверка_ВСД_Входящий(док) 

	//стандартное поведение функции	
	Результат = 1; //все в порядке
	
	Если ПустоеЗначение(док.Отправитель_ХозСубъект.GUID)=1 Тогда 
		Сообщить("Не указан Отправитель_ХозСубъект.GUID Выполните синхронизацию справочников","!");
		результат = 0;
	КонецЕсли;

	Если ПустоеЗначение(док.Отправитель_Площадка.GUID)=1 Тогда 
		Сообщить("Не указан Отправитель_Площадка.GUID Выполните синхронизацию справочников","!");
		результат = 0;
	КонецЕсли;
	Если ПустоеЗначение(док.Получатель_ХозСубъект.GUID)=1 Тогда 
		Сообщить("Не указан Получатель_ХозСубъект.GUID Выполните синхронизацию справочников","!");
		результат = 0;
	КонецЕсли;
	Если ПустоеЗначение(док.Получатель_Площадка.GUID)=1 Тогда 
		Сообщить("Не указан Получатель_Площадка.GUID Выполните синхронизацию справочников","!");
		результат = 0;
	КонецЕсли;
	Если ПустоеЗначение(Док.ПроизводительСписок)=1 Тогда 
		Сообщить("Не указан Производитель_Площадка.GUID Выполните синхронизацию справочников","!");
		результат = 0;
	КонецЕсли;

	Если док.ВидВСД = 1 Тогда 
		//бумажный
		Если ПустоеЗначение(док.ВсдНомер)=1 Тогда 
			Сообщить("Не указан ВсдНомер ","!");
			результат = 0;
		КонецЕсли;
		Если ПустоеЗначение(док.ВсдДата)=1 Тогда 
			Сообщить("Не указан ВсдДата ","!");
			результат = 0;
		КонецЕсли;
	Иначе
		//электронный
		Если ПустоеЗначение(док.UUID)=1 Тогда 
			Сообщить("Не указан UUID ","!");
			результат = 0;
		КонецЕсли;
		
	КонецЕсли;
		
	Если ПустоеЗначение(док.ЕдиницаИзмерения)=1 Тогда 
		Сообщить("Не указана ЕдиницаИзмерения ","!");
		результат = 0;
	КонецЕсли;	
	
	Возврат результат;
КонецФункции


// Запрос на гашение ВСД входящего
Функция ВСД_входящий_ЗапросXML(док,НаименованиеПродукции="")
	
	//док = СоздатьОбъект("Документ.ВСД_входящий")
	
	Если док.ВидВСД=1 Тогда 
		//бумажный
		
		Запрос = "<processIncomingConsignmentRequest 
			|  xmlns:sch='http://www.w3.org/2001/XMLSchema' 
			|  xmlns:vd='http://api.vetrf.ru/schema/cdm/mercury/vet-document' 
			|  xmlns:sh='http://api.vetrf.ru/schema/cdm/argus/shipment' 
			|  xmlns:ws='http://api.vetrf.ru/schema/cdm/application/ws-definitions' 
			|  xmlns:app='http://api.vetrf.ru/schema/cdm/application' 
			|  xmlns:co='http://api.vetrf.ru/schema/cdm/argus/common' 
			|  xmlns:ent='http://api.vetrf.ru/schema/cdm/cerberus/enterprise' 
			|  xmlns:pr='http://api.vetrf.ru/schema/cdm/argus/production' 
			|  xmlns:ik='http://api.vetrf.ru/schema/cdm/ikar' 
			|  xmlns:bs='http://api.vetrf.ru/schema/cdm/base' 
			|  xmlns='http://api.vetrf.ru/schema/cdm/mercury/applications'>
			|  <localTransactionId>[GUID]</localTransactionId>
			|  <initiator>
			|    <co:login>"+СокрЛП( ГМ.СписокКонстант.Получить("param_intiator_login") )+"</co:login>
			|  </initiator>
			|";
		Запрос=Запрос+ "
			|        <delivery>
			|          <vd:deliveryDate>" + ГМ.ДатаXML(док.ТтнДата, "T00:00:00") + "</vd:deliveryDate>
			|          <vd:consignor>
			|            <ent:businessEntity>
			|              <bs:guid>"+СокрЛП(док.Отправитель_ХозСубъект.GUID)+"</bs:guid>
			|            </ent:businessEntity>
			|            <ent:enterprise>
			|              <bs:guid>"+ СокрЛП(док.Отправитель_Площадка.GUID) +"</bs:guid>
			|            </ent:enterprise>
			|          </vd:consignor>
			|          <vd:consignee>
			|            <ent:businessEntity>
			|              <bs:guid>"+ СокрЛП(док.Получатель_ХозСубъект.GUID) +"</bs:guid>
			|            </ent:businessEntity>
			|            <ent:enterprise>
			|              <bs:guid>"+ СокрЛП(док.Получатель_Площадка.GUID) +"</bs:guid>
			|            </ent:enterprise>
			|          </vd:consignee>
			|";
		Запрос = Запрос + "
			|		<vd:consignment>
			|            <vd:productType>"+ док.Продукция.Тип +"</vd:productType>
			|            <vd:product>
			|              <bs:guid>"+ СокрЛП(док.Продукция.GUID) +"</bs:guid>
			|            </vd:product>
			|            <vd:subProduct>
			|              <bs:guid>"+ СокрЛП(док.ВидПродукции.GUID) +"</bs:guid>
			|            </vd:subProduct>
			|            <vd:productItem>
			|";
		Если ПустоеЗначение(док.Продукция_Элемент.GUID)=0 Тогда
			Запрос = Запрос + " <bs:guid>"+ СокрЛП(док.Продукция_Элемент.GUID) +"</bs:guid> ";
		Иначе
			Если ПустоеЗначение(НаименованиеПродукции) = 0 Тогда
				Запрос = Запрос + " <pr:name>"+ СокрЛП(НаименованиеПродукции) +"</pr:name> ";    
			Иначе
				Запрос = Запрос + " <pr:name>"+ СокрЛП(док.Продукция_Элемент.Наименование) +"</pr:name> ";	
			КонецЕсли;
						
		КонецЕсли;
		Запрос = Запрос + "
			|              
			|            </vd:productItem>
			|            <vd:volume>"+ Док.Количество +"</vd:volume>
			|            <vd:unit>
			|              <bs:guid>"+ СокрЛП(док.ЕдиницаИзмерения.GUID) +"</bs:guid>
			|            </vd:unit>
            |";
		Если док.КоличествоМест>0 Тогда 
			Запрос=Запрос+"			
			|            <vd:packingList>
			|              <co:packingForm>
			|                <bs:uuid>"+ СокрЛП(док.ФормаУпаковки.GUID) +"</bs:uuid>
			|              </co:packingForm>
			|            </vd:packingList>
			|            <vd:packingAmount>"+ док.КоличествоМест +"</vd:packingAmount>
			|";
		КонецЕсли;
			Запрос=Запрос+"			
			|            <vd:dateOfProduction>
			|";
		Если (ПустоеЗначение(док.ДатаИзготовления1)=0) Тогда
			Запрос = Запрос + "
			|              <vd:firstDate>
			|                <bs:year>"+ДатаГод(док.ДатаИзготовления1)+"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаИзготовления1) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаИзготовления1) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:firstDate>
			|";
		КонецЕсли;
		Если ((ПустоеЗначение(док.ДатаИзготовления2)=0) и 
				(док.ДатаИзготовления2 > док.ДатаИзготовления1)) Тогда
			Запрос = Запрос + "
			|              <vd:secondDate>
			|                <bs:year>"+ ДатаГод(док.ДатаИзготовления2) +"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаИзготовления2) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаИзготовления2) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:secondDate>
			|";
		КонецЕсли;
		Запрос = Запрос + "
			|              <vd:informalDate />
			|            </vd:dateOfProduction>
			|            <vd:expiryDate>
			|";
			
		Если (ПустоеЗначение(док.ДатаСрокГодности1)=0) Тогда
			Запрос = Запрос + "
				|              <vd:firstDate>
				|                <bs:year>"+ ДатаГод(док.ДатаСрокГодности1) +"</bs:year>
				|                <bs:month>"+ ДатаМесяц(док.ДатаСрокГодности1) +"</bs:month>
				|                <bs:day>"+ ДатаЧисло(док.ДатаСрокГодности1) +"</bs:day>
				|                <bs:hour>0</bs:hour>
				|              </vd:firstDate>
				|";
		КонецЕсли;
		Если ((ПустоеЗначение(док.ДатаСрокГодности2)=0) и 
				(док.ДатаСрокГодности2 > док.ДатаСрокГодности1)) Тогда
			Запрос = Запрос + "
				|              <vd:secondDate>
				|                <bs:year>"+ ДатаГод(док.ДатаСрокГодности2) +"</bs:year>
				|                <bs:month>"+ ДатаМесяц(док.ДатаСрокГодности2) +"</bs:month>
				|                <bs:day>"+ ДатаЧисло(док.ДатаСрокГодности2) +"</bs:day>
				|                <bs:hour>0</bs:hour>
				|              </vd:secondDate>
				|";
		КонецЕсли;
		Запрос = Запрос + "
			|              <vd:informalDate />
			|            </vd:expiryDate>
			|			<vd:perishable>"+ГМ.булево(док.скоропортящийся)+"</vd:perishable>
			|            <vd:countryOfOrigin>
			|              <bs:uuid>"+ СокрЛП( ГМ.СписокКонстант.Получить("Страна").UUID) +"</bs:uuid>
			|            </vd:countryOfOrigin>
			|";
		Если ПустоеЗначение(Док.ПроизводительСписок)=0 Тогда     
			Запрос=Запрос+"
			|      		 <vd:producerList>
			|";
			СпПроизводители = ЗначениеИзСтроки(Док.ПроизводительСписок);
			к=0;
			Для к = 1 По СпПроизводители.РазмерСписка() Цикл
				Запрос=Запрос+"
				|        		<ent:producer>
				|          			<ent:enterprise>
				|            			<bs:guid>"+ СокрЛП(СпПроизводители.ПолучитьЗначение(к).GUID) +"</bs:guid>
				|          			</ent:enterprise>
				|					<ent:role>PRODUCER</ent:role>
				|        		</ent:producer>
				|"; 
			КонецЦикла;
			Запрос=Запрос+"
			|      		 </vd:producerList>
			|";
		КонецЕсли;
		Если ПустоеЗначение(Док.МаркировкаСписок)=0 Тогда    
			Запрос=Запрос+"
			|      		 <vd:productMarkingList>
			|";
			МаркировкаСписок = ЗначениеИзСтроки(Док.МаркировкаСписок);
			к=0;
			Для к = 1 По МаркировкаСписок.РазмерСписка() Цикл
				Запрос = Запрос + "
				|              <vd:productMarking>"+  МаркировкаСписок.Получитьзначение(к) +"</vd:productMarking>
				|"; 
			КонецЦикла;	
			Запрос=Запрос+"
			|      		 </vd:productMarkingList>
			|"; 
		Иначе
			Запрос=Запрос+"
			|      		 <vd:productMarkingList />
			|"; 
		КонецЕсли;
		Запрос=Запрос+"
			|            <vd:lowGradeCargo>"+ГМ.булево(док.некачественный)+"</vd:lowGradeCargo>
//			|            <vd:productName>"+ СокрЛП(док.НаименованиеПродукции) +"</vd:productName>
			|      		 <vd:sourceStockEntry />
			|      </vd:consignment>
			|    <vd:accompanyingForms>
			|      <vd:waybill>
			|        <sh:issueSeries>"+ СокрЛП(док.ТтнСерия) +"</sh:issueSeries>
			|        <sh:issueNumber>"+ СокрЛП(док.ТтнНомер) +"</sh:issueNumber>
			|        <sh:issueDate>"+ ГМ.ДатаXML(док.ТтнДата) +"</sh:issueDate>
			|        <sh:type>1</sh:type>
			|        <sh:consignor>
			|          <ent:businessEntity />
			|          <ent:enterprise />
			|        </sh:consignor>
			|        <sh:consignee>
			|          <ent:businessEntity />
			|          <ent:enterprise />
			|        </sh:consignee>
			|";
		Если ПустоеЗначение(СокрЛП(док.Перевозчик_ХозСубъект.GUID))=0 Тогда  
			Запрос=Запрос+"			
			|        <sh:broker>
			|          <bs:guid>"+ СокрЛП(док.Перевозчик_ХозСубъект.GUID) +"</bs:guid>
			|        </sh:broker>
			|";
		КонецЕсли;
		Если ПустоеЗначение(СокрЛП(док.ТипТС))=0 Тогда 
			Запрос=Запрос+"			
			|        <sh:transportInfo>
			|          <sh:transportType>"+СокрЛП(док.ТипТС)+"</sh:transportType>
			|          <sh:transportNumber>
			|"; 
			Если СокрЛП(Док.ТипТС) = "1" Тогда
			    Запрос = Запрос+"
			|            <sh:vehicleNumber>"+ СокрЛП(док.номерАвто) +"</sh:vehicleNumber>
			|";
			иначеЕсли СокрЛП(Док.ТипТС) = "2" Тогда
		    Запрос = Запрос+"
			|            <sh:wagonNumber>"+ СокрЛП(док.номерАвто) +"</sh:wagonNumber>
			|"; 
			иначеЕсли СокрЛП(Док.ТипТС) = "3" Тогда
		    Запрос = Запрос+"
			|            <sh:flightNumber>"+ СокрЛП(док.номерАвто) +"</sh:flightNumber>
			|";
			иначеЕсли (СокрЛП(Док.ТипТС) = "4") или (СокрЛП(Док.ТипТС) = "5") или (СокрЛП(Док.ТипТС) = "6") Тогда
		    Запрос = Запрос+"
			|            <sh:shipName>"+ СокрЛП(док.номерАвто) +"</sh:shipName>
			|";
			
			КонецЕсли;	
			Запрос=Запрос+"
			|          </sh:transportNumber>
			|        </sh:transportInfo>
			|";
		КонецЕсли;
		
			Запрос=Запрос+"
			|        <sh:transportStorageType>"+ ГМ.ТермическиеУсловияПеревозки.ПолучитьЗначение( док.ТермическоеСостояние ) +"</sh:transportStorageType>
			|        <sh:cargoReloadingPointList />
			|      </vd:waybill>
			|      <vd:vetCertificate>
			|        <vd:issueSeries>"+ СокрЛП(док.ВсдСерия) +"</vd:issueSeries>
			|        <vd:issueNumber>"+ СокрЛП(док.ВсдНомер) +"</vd:issueNumber>
			|        <vd:issueDate>"+ ГМ.ДатаXML(док.ВсдДата) +"</vd:issueDate>
			|        <vd:form>LIC2</vd:form>
			|          <vd:consignor>
			|            <ent:businessEntity>
			|              <bs:guid>"+СокрЛП(док.Отправитель_ХозСубъект.GUID)+"</bs:guid>
			|            </ent:businessEntity>
			|            <ent:enterprise>
			|              <bs:guid>"+ СокрЛП(док.Отправитель_Площадка.GUID) +"</bs:guid>
			|            </ent:enterprise>
			|          </vd:consignor>
			|          <vd:consignee>
			|            <ent:businessEntity>
			|              <bs:guid>"+ СокрЛП(док.Получатель_ХозСубъект.GUID) +"</bs:guid>
			|            </ent:businessEntity>
			|            <ent:enterprise>
			|              <bs:guid>"+ СокрЛП(док.Получатель_Площадка.GUID) +"</bs:guid>
			|            </ent:enterprise>
			|          </vd:consignee>
			|
			|        <vd:batch>
			|            <vd:productType>"+ док.Продукция.Тип +"</vd:productType>
			|            <vd:product>
			|              <bs:guid>"+ СокрЛП(док.Продукция.GUID) +"</bs:guid>
			|            </vd:product>
			|            <vd:subProduct>
			|              <bs:guid>"+ СокрЛП(док.ВидПродукции.GUID) +"</bs:guid>
			|            </vd:subProduct>
			|            <vd:productItem>
			|";
		Если ПустоеЗначение(док.Продукция_Элемент.GUID)=0 Тогда
			Запрос = Запрос + "	
			|              <bs:guid>"+ СокрЛП(док.Продукция_Элемент.GUID) +"</bs:guid>
			|";
		КонецЕсли;
		Запрос = Запрос + "		
			|              <pr:name>"+ СокрЛП(док.Продукция_Элемент.Наименование) +"</pr:name>
			|            </vd:productItem>
			|            <vd:volume>"+ Док.Количество +"</vd:volume>
			|            <vd:unit>
			|              <bs:guid>"+ СокрЛП(док.ЕдиницаИзмерения.GUID) +"</bs:guid>
			|            </vd:unit>
			|";
		Если док.КоличествоМест>0 Тогда 
			Запрос=Запрос+"			
			
			|            <vd:packingList>
			|              <co:packingForm>
			|                <bs:uuid>"+ СокрЛП(док.ФормаУпаковки.GUID) +"</bs:uuid>
			|              </co:packingForm>
			|            </vd:packingList>
			|            <vd:packingAmount>"+ док.КоличествоМест +"</vd:packingAmount>
			|";
		КонецЕсли;
		Запрос=Запрос+"			
			|            <vd:dateOfProduction>
			|";
			
			
		Если (ПустоеЗначение(док.ДатаИзготовления1)=0) Тогда
			Запрос = Запрос + "			
			|              <vd:firstDate>
			|                <bs:year>"+ДатаГод(док.ДатаИзготовления1)+"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаИзготовления1) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаИзготовления1) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:firstDate>
			|";
		КонецЕсли;
		Если ((ПустоеЗначение(док.ДатаИзготовления2)=0) и 
				(док.ДатаИзготовления2 > док.ДатаИзготовления1)) Тогда
			Запрос = Запрос + "	
			|              <vd:secondDate>
			|                <bs:year>"+ ДатаГод(док.ДатаИзготовления2) +"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаИзготовления2) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаИзготовления2) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:secondDate>
			|";
		КонецЕсли;
		Запрос = Запрос + "
			|              <vd:informalDate />
			|            </vd:dateOfProduction>
			|            <vd:expiryDate>
			|";
		Если (ПустоеЗначение(док.ДатаСрокГодности1)=0) Тогда
			Запрос = Запрос + "					
			|              <vd:firstDate>
			|                <bs:year>"+ ДатаГод(док.ДатаСрокГодности1) +"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаСрокГодности1) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаСрокГодности1) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:firstDate>
			|";
		КонецЕсли;
		Если ((ПустоеЗначение(док.ДатаСрокГодности2)=0) и 
				(док.ДатаСрокГодности2 > док.ДатаСрокГодности1)) Тогда
			Запрос = Запрос + "				
			|              <vd:secondDate>
			|                <bs:year>"+ ДатаГод(док.ДатаСрокГодности2) +"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаСрокГодности2) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаСрокГодности2) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:secondDate>
			|";
		КонецЕсли;
		Запрос = Запрос + "
			|              <vd:informalDate />
			|            </vd:expiryDate>
			|			<vd:perishable>"+ГМ.булево(док.скоропортящийся)+"</vd:perishable>
			|            <vd:countryOfOrigin>
			|              <bs:uuid>"+ СокрЛП( ГМ.СписокКонстант.Получить("Страна").UUID) +"</bs:uuid>
			|            </vd:countryOfOrigin>
			|";
		
		Если ПустоеЗначение(Док.ПроизводительСписок)=0 Тогда 
			Запрос=Запрос+"
			|      		 <vd:producerList>
			|";
			СпПроизводители = ЗначениеИзСтроки(Док.ПроизводительСписок);
			к=0;
			Для к = 1 По СпПроизводители.РазмерСписка() Цикл
				Запрос=Запрос+"
				|        		<ent:producer>
				|          			<ent:enterprise>
				|            			<bs:guid>"+ СокрЛП(СпПроизводители.ПолучитьЗначение(к).GUID) +"</bs:guid>
				|          			</ent:enterprise>
				|					<ent:role>PRODUCER</ent:role>
				|        		</ent:producer>
				|"; 
			КонецЦикла;
			Запрос=Запрос+"
			|      		 </vd:producerList>
			|";
		КонецЕсли;
		Если ПустоеЗначение(Док.МаркировкаСписок)=0 Тогда
			Запрос=Запрос+"
			|      		 <vd:productMarkingList>
			|";
			МаркировкаСписок = ЗначениеИзСтроки(Док.МаркировкаСписок);
			к=0;
			Для к = 1 По МаркировкаСписок.РазмерСписка() Цикл
				Запрос = Запрос + "
				|              <vd:productMarking>"+  МаркировкаСписок.Получитьзначение(к) +"</vd:productMarking>
				|"; 
			КонецЦикла;	
			Запрос=Запрос+"
			|      		 </vd:productMarkingList>
			|"; 
		Иначе
			Запрос=Запрос+"
			|      		 <vd:productMarkingList />
			|"; 
		КонецЕсли;
		Запрос=Запрос+"
			|			<vd:lowGradeCargo>"+ГМ.булево(док.некачественный)+"</vd:lowGradeCargo>
			|              </vd:batch>
			|              <vd:purpose>
			|                <bs:guid>"+ СокрЛП( ГМ.СписокКонстант.Получить("Цель").Guid ) +"</bs:guid>
			|              </vd:purpose>
			|";
		Если ПустоеЗначение(СокрЛП(док.Перевозчик_ХозСубъект.GUID))=0 Тогда
			Запрос=Запрос+"			
			|        <vd:broker>
			|          <bs:guid>"+ СокрЛП(док.Перевозчик_ХозСубъект.GUID) +"</bs:guid>
			|        </vd:broker>
			|";
		КонецЕсли;
		Если ПустоеЗначение(СокрЛП(док.ТипТС))=0 Тогда
			Запрос=Запрос+"			
			|        <vd:transportInfo>
			|          <sh:transportType>"+СокрЛП(док.ТипТС)+"</sh:transportType>
			|          <sh:transportNumber>
			|"; 
			Если СокрЛП(Док.ТипТС) = "1" Тогда
			    Запрос = Запрос+"
			|            <sh:vehicleNumber>"+ СокрЛП(док.номерАвто) +"</sh:vehicleNumber>
			|";
			иначеЕсли СокрЛП(Док.ТипТС) = "2" Тогда
		    Запрос = Запрос+"
			|            <sh:wagonNumber>"+ СокрЛП(док.номерАвто) +"</sh:wagonNumber>
			|"; 
			иначеЕсли СокрЛП(Док.ТипТС) = "3" Тогда
		    Запрос = Запрос+"
			|            <sh:flightNumber>"+ СокрЛП(док.номерАвто) +"</sh:flightNumber>
			|";
			иначеЕсли (СокрЛП(Док.ТипТС) = "4") или (СокрЛП(Док.ТипТС) = "5") или (СокрЛП(Док.ТипТС) = "6") Тогда
		    Запрос = Запрос+"
			|            <sh:shipName>"+ СокрЛП(док.номерАвто) +"</sh:shipName>
			|";
			
			КонецЕсли;	
			Запрос=Запрос+"
			|          </sh:transportNumber>
			|        </vd:transportInfo>
			|";
		КонецЕсли;
		
			Запрос=Запрос+"
			|              <vd:transportStorageType>"+ ГМ.ТермическиеУсловияПеревозки.ПолучитьЗначение( док.ТермическоеСостояние ) +"</vd:transportStorageType>
			|              <vd:cargoReloadingPointList />
			|              <vd:waybillSeries>"+ СокрЛП(док.ТтнСерия) +"</vd:waybillSeries>
			|              <vd:waybillNumber>"+ СокрЛП(док.ТтнНомер) +"</vd:waybillNumber>
			|              <vd:waybillDate>"+ ГМ.ДатаXML(док.ТтнДата) +"</vd:waybillDate>
			|              <vd:waybillType>1</vd:waybillType>
			|              <vd:cargoInspected>"+ ГМ.булево(док.cargoInspected) +"</vd:cargoInspected>
			|              <vd:cargoExpertized>"+  ГМ.булево(док.cargoExpertized) +"</vd:cargoExpertized>
			|              <vd:expertiseInfo>"+ СокрЛП(док.ВсдЭкспертиза) +"</vd:expertiseInfo>
			|              <vd:confirmedBy>
			|          	     <co:fio>"+ СокрЛП( ГМ.СписокКонстант.Получить("param_vetdoctor_fio")) +"</co:fio>
			|          		 <co:post>"+ СокрЛП( ГМ.СписокКонстант.Получить("param_vetdoctor_post")) +"</co:post>
			|                <co:login>"+ СокрЛП( ГМ.СписокКонстант.Получить("param_vetdoctor_login")) +"</co:login>
			|              </vd:confirmedBy>
			|              <vd:confirmedDate>"+ ГМ.ДатаXML(док.ДатаДок,"T00:00:00") +"</vd:confirmedDate>			
			|              <vd:locationProsperity>"+ СокрЛП(док.ВсдМестность) +"</vd:locationProsperity>
			|              <vd:importPermit />
			|              <vd:transferPermit />
			|              <vd:specialMarks>"+ СокрЛП(док.ОсобыеОтметки) +"</vd:specialMarks>
			|              <vd:withdrawedBy />
			|              <vd:utilizedBy />
			|            </vd:vetCertificate>		
			|    </vd:accompanyingForms>
			|  </delivery>
			|  <deliveryFacts>
			|    <vd:vetCertificatePresence>PAPER</vd:vetCertificatePresence>
			|    <vd:docInspection>
			|      <vd:responsible>
			|        <co:login>"+ СокрЛП( ГМ.СписокКонстант.Получить("param_vetdoctor_login")) +"</co:login>
			|      </vd:responsible>
			|      <vd:result>CORRESPONDS</vd:result>
			|    </vd:docInspection>
			|    <vd:vetInspection>
			|      <vd:responsible>
			|        <co:login>"+ СокрЛП( ГМ.СписокКонстант.Получить("param_vetdoctor_login")) +"</co:login>
			|      </vd:responsible>
			|      <vd:result>CORRESPONDS</vd:result>
			|    </vd:vetInspection>
			|    <vd:decision>ACCEPT_ALL</vd:decision>
			|  </deliveryFacts>
			|"; 
// Дмитрий Акт несоответствия, временно выведено на вкладку Параметры, нужно потестить на продуктиве,
// Потом можно добавить либо в ВСД_Входящее(чтобы запоминал) или просто в Таблицу обработки.
       	Если _АктНесоотв = 1 Тогда
			Запрос=Запрос+" 
			|  <discrepancyReport>
			|    <vd:issueDate>"+ ГМ.ДатаXML(док.ТтнДата) +"</vd:issueDate>
			|    <vd:reason>
			|      <vd:name>"+СокрЛП(тПричинаАкта)+"</vd:name>
			|	 </vd:reason> 
			|    <vd:description>"+?(ПустоеЗначение(тОписаниеНесоответствия)=1,"Описание несоответствия",СокрЛП(тОписаниеНесоответствия)) +"</vd:description>
			|  </discrepancyReport>
			|"; 
        КонецЕсли;

			Запрос=Запрос+" 

			|</processIncomingConsignmentRequest>
			|";
	Иначе
		//Электронный
		Запрос="<processIncomingConsignmentRequest 
			|  xmlns:sch='http://www.w3.org/2001/XMLSchema' 
			|  xmlns:vd='http://api.vetrf.ru/schema/cdm/mercury/vet-document' 
			|  xmlns:sh='http://api.vetrf.ru/schema/cdm/argus/shipment' 
			|  xmlns:ws='http://api.vetrf.ru/schema/cdm/application/ws-definitions' 
			|  xmlns:app='http://api.vetrf.ru/schema/cdm/application' 
			|  xmlns:co='http://api.vetrf.ru/schema/cdm/argus/common' 
			|  xmlns:ent='http://api.vetrf.ru/schema/cdm/cerberus/enterprise' 
			|  xmlns:pr='http://api.vetrf.ru/schema/cdm/argus/production' 
			|  xmlns:ik='http://api.vetrf.ru/schema/cdm/ikar' 
			|  xmlns:bs='http://api.vetrf.ru/schema/cdm/base' 
			|  xmlns='http://api.vetrf.ru/schema/cdm/mercury/applications'>
			|  <localTransactionId>[GUID]</localTransactionId>
			|  <initiator>
			|    <co:login>"+СокрЛП( ГМ.СписокКонстант.Получить("param_intiator_login") )+"</co:login>
			|  </initiator>
			|        <delivery>
			|          <vd:deliveryDate>" + ГМ.ДатаXML(док.ТтнДата, "T00:00:00") + "</vd:deliveryDate>
			|          <vd:consignor>
			|            <ent:businessEntity>
			|              <bs:guid>"+СокрЛП(док.Отправитель_ХозСубъект.GUID)+"</bs:guid>
			|            </ent:businessEntity>
			|            <ent:enterprise>
			|              <bs:guid>"+ СокрЛП(док.Отправитель_Площадка.GUID) +"</bs:guid>
			|            </ent:enterprise>
			|          </vd:consignor>
			|          <vd:consignee>
			|            <ent:businessEntity>
			|              <bs:guid>"+ СокрЛП(док.Получатель_ХозСубъект.GUID) +"</bs:guid>
			|            </ent:businessEntity>
			|            <ent:enterprise>
			|              <bs:guid>"+ СокрЛП(док.Получатель_Площадка.GUID) +"</bs:guid>
			|            </ent:enterprise>
			|          </vd:consignee>
			|		<vd:consignment>
			|            <vd:productType>"+ док.Продукция.Тип +"</vd:productType>
			|            <vd:product>
			|              <bs:guid>"+ СокрЛП(док.Продукция.GUID) +"</bs:guid>
			|            </vd:product>
			|            <vd:subProduct>
			|              <bs:guid>"+ СокрЛП(док.ВидПродукции.GUID) +"</bs:guid>
			|            </vd:subProduct>
			|            <vd:productItem>
			|";
		Если ПустоеЗначение(док.Продукция_Элемент.GUID)=0 Тогда
			Запрос = Запрос + "
			|              <bs:guid>"+ СокрЛП(док.Продукция_Элемент.GUID) +"</bs:guid>
			|";
		Иначе
			Если ПустоеЗначение(НаименованиеПродукции) = 0 Тогда
				Запрос = Запрос + " <pr:name>"+ СокрЛП(НаименованиеПродукции) +"</pr:name> ";    
			Иначе
				Запрос = Запрос + " <pr:name>"+ СокрЛП(док.Продукция_Элемент.Наименование) +"</pr:name> ";	
			КонецЕсли;
						
		КонецЕсли;

		Запрос = Запрос + "
//			|              <pr:name>"+ СокрЛП(док.Продукция_Элемент.Наименование) +"</pr:name>
			|            </vd:productItem>
			|            <vd:volume>"+ Док.Количество +"</vd:volume>
			|            <vd:unit>
			|              <bs:guid>"+ СокрЛП(док.ЕдиницаИзмерения.GUID) +"</bs:guid>
			|            </vd:unit>
			|";
		Если док.КоличествоМест>0 Тогда 
			Запрос=Запрос+"			
			|            <vd:packingList>
			|              <co:packingForm>
			|                <bs:uuid>"+ СокрЛП(док.ФормаУпаковки.GUID) +"</bs:uuid>
			|              </co:packingForm>
			|            </vd:packingList>
			|            <vd:packingAmount>"+ док.КоличествоМест +"</vd:packingAmount>
			|";
		КонецЕсли;
		Запрос=Запрос+"
			|            <vd:dateOfProduction>
			|";
		Если (ПустоеЗначение(док.ДатаИзготовления1)=0) Тогда
			Запрос = Запрос + "
			|              <vd:firstDate>
			|                <bs:year>"+ДатаГод(док.ДатаИзготовления1)+"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаИзготовления1) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаИзготовления1) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:firstDate>
			|";
		КонецЕсли;
		Если ((ПустоеЗначение(док.ДатаИзготовления2)=0) и 
				(док.ДатаИзготовления2 > док.ДатаИзготовления1)) Тогда
			Запрос = Запрос + "
			|              <vd:secondDate>
			|                <bs:year>"+ ДатаГод(док.ДатаИзготовления2) +"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаИзготовления2) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаИзготовления2) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:secondDate>
			|";
		КонецЕсли;
		Если (ПустоеЗначение(док.ДатаИзготовленияСтрока)=0) Тогда
			Запрос = Запрос + "
			|              <vd:informalDate>"+ СокрЛП(док.ДатаИзготовленияСтрока) +"</vd:informalDate>";
		КонецЕсли;


		Запрос = Запрос + "
	//		|              <vd:informalDate />
			|            </vd:dateOfProduction>
			|            <vd:expiryDate>
			|";
			
		Если (ПустоеЗначение(док.ДатаСрокГодности1)=0) Тогда
			Запрос = Запрос + "
			|              <vd:firstDate>
			|                <bs:year>"+ ДатаГод(док.ДатаСрокГодности1) +"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаСрокГодности1) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаСрокГодности1) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:firstDate>
			|";
		КонецЕсли;
		Если ((ПустоеЗначение(док.ДатаСрокГодности2)=0) и 
				(док.ДатаСрокГодности2 > док.ДатаСрокГодности1)) Тогда
			Запрос = Запрос + "
			|              <vd:secondDate>
			|                <bs:year>"+ ДатаГод(док.ДатаСрокГодности2) +"</bs:year>
			|                <bs:month>"+ ДатаМесяц(док.ДатаСрокГодности2) +"</bs:month>
			|                <bs:day>"+ ДатаЧисло(док.ДатаСрокГодности2) +"</bs:day>
			|                <bs:hour>0</bs:hour>
			|              </vd:secondDate>
			|";
		КонецЕсли;  
		Если (ПустоеЗначение(док.ДатаСрокГодностиСтрока)=0) Тогда
			Запрос = Запрос + "
			|              <vd:informalDate>"+ СокрЛП(док.ДатаСрокГодностиСтрока) +"</vd:informalDate>";
		КонецЕсли;
		Запрос = Запрос + "
//			|              <vd:informalDate />
			|            </vd:expiryDate>
			|			<vd:perishable>"+ГМ.булево(док.скоропортящийся)+"</vd:perishable>
			|            <vd:countryOfOrigin>
			|              <bs:uuid>"+ СокрЛП( ГМ.СписокКонстант.Получить("Страна").UUID) +"</bs:uuid>
			|            </vd:countryOfOrigin>
			|";
		
		
//		Если Пустоезначение(Док.Продукция_Элемент.Площадка.guid)=0 Тогда
//			Запрос=Запрос+"
//			|      		 <vd:producerList>
//			|        		<ent:producer>
//			|          			<ent:enterprise>
//			|            			<bs:guid>"+ СокрЛП(Док.Продукция_Элемент.Площадка.guid) +"</bs:guid>
//			|          			</ent:enterprise>
//			|					<ent:role>PRODUCER</ent:role>
//			|        		</ent:producer>
//			|      		 </vd:producerList>
//			|";
	
		Если ПустоеЗначение(Док.ПроизводительСписок)=0 Тогда
			Запрос=Запрос+"
			|      		 <vd:producerList>
			|";
			СпПроизводители = ЗначениеИзСтроки(Док.ПроизводительСписок);
			к=0;
			Для к = 1 По СпПроизводители.РазмерСписка() Цикл
				Запрос=Запрос+"
				|        		<ent:producer>
				|          			<ent:enterprise>
				|            			<bs:guid>"+ СокрЛП(СпПроизводители.ПолучитьЗначение(к).GUID) +"</bs:guid>
				|          			</ent:enterprise>
				|					<ent:role>PRODUCER</ent:role>
				|        		</ent:producer>
				|"; 
			КонецЦикла;
			Запрос=Запрос+"
			|      		 </vd:producerList>
			|";
		КонецЕсли;
		Если ПустоеЗначение(Док.МаркировкаСписок)=0 Тогда
			Запрос=Запрос+"
			|      		 <vd:productMarkingList>
			|";
			МаркировкаСписок = ЗначениеИзСтроки(Док.МаркировкаСписок);
			к=0;
			Для к = 1 По МаркировкаСписок.РазмерСписка() Цикл
				Запрос = Запрос + "
				|              <vd:productMarking>"+  МаркировкаСписок.Получитьзначение(к) +"</vd:productMarking>
				|"; 
			КонецЦикла;	
			Запрос=Запрос+"
			|      		 </vd:productMarkingList>
			|"; 
		Иначе
			Запрос=Запрос+"
			|      		 <vd:productMarkingList />
			|"; 
		КонецЕсли;
// ЖД Обрезанный до 98 символов productName отрабатывает на тестовой площадке нормально
// можно заменить на 200 симв, если не погасит
		Запрос=Запрос+"
			|			<vd:lowGradeCargo>"+ГМ.булево(док.некачественный)+"</vd:lowGradeCargo>
//			|           <vd:productName>"+ СокрЛП(док.НаименованиеПродукции) +"</vd:productName>
			|      		<vd:sourceStockEntry />
			|      </vd:consignment>
			|
			|    <vd:accompanyingForms>
			|      <vd:waybill>
			|        <sh:issueSeries>"+ СокрЛП(док.ТтнСерия) +"</sh:issueSeries>
			|        <sh:issueNumber>"+ СокрЛП(док.ТтнНомер) +"</sh:issueNumber>
			|        <sh:issueDate>"+ ГМ.ДатаXML(док.ТтнДата) +"</sh:issueDate>";
			
			Попытка
				Запрос=Запрос+"			
				|                  <sh:type>"+ док.ТтнТип +"</sh:type>";
			Исключение
				//Добавить Реквизит ттнТип в документ ВСД2_входящий
				Сообщить("Добавьте Реквизит ттнТип (число 1.0) в документ ВСД2_входящий");
				Сообщить("Отправляю с типом 1 - Товарно транспортная накладная");
				Запрос=Запрос+"			
				|                  <sh:type>1</sh:type>";
			КонецПопытки;
			Запрос=Запрос+"			
			|        <sh:consignor>
			|          <ent:businessEntity />
			|          <ent:enterprise />
			|        </sh:consignor>
			|        <sh:consignee>
			|          <ent:businessEntity />
			|          <ent:enterprise />
			|        </sh:consignee>
			|";
		Если ПустоеЗначение(СокрЛП(док.Перевозчик_ХозСубъект.GUID))=0 Тогда
			Запрос=Запрос+"			
			|        <sh:broker>
			|          <bs:guid>"+ СокрЛП(док.Перевозчик_ХозСубъект.GUID) +"</bs:guid>
			|        </sh:broker>
			|";
		КонецЕсли;
		Если ПустоеЗначение(СокрЛП(док.ТипТС))=0 Тогда
			Запрос=Запрос+"			
			|        <sh:transportInfo>
			|          <sh:transportType>"+СокрЛП(док.ТипТС)+"</sh:transportType>
			|          <sh:transportNumber>
			|"; 
			Если СокрЛП(Док.ТипТС) = "1" Тогда
				Попытка
					// Странный важный момент - контейнер д.б. первым !
				Если ПустоеЗначение(док.номерКонтейнера)=0 Тогда
			    	Запрос = Запрос+"
					|            <sh:containerNumber>"+ СокрЛП(док.номерКонтейнера) +"</sh:containerNumber>
					|";
				КонецЕсли;
				Исключение КонецПопытки;
				
			    Запрос = Запрос+"
				|            <sh:vehicleNumber>"+ СокрЛП(док.номерАвто) +"</sh:vehicleNumber>
				|";
				Попытка
				Если ПустоеЗначение(док.номерПолуприцепа)=0 Тогда
			    	Запрос = Запрос+"
					|            <sh:trailerNumber>"+ СокрЛП(док.номерПолуприцепа) +"</sh:trailerNumber>
					|";
				КонецЕсли;
				Исключение КонецПопытки;
			
			иначеЕсли СокрЛП(Док.ТипТС) = "2" Тогда
		    Запрос = Запрос+"
			|            <sh:wagonNumber>"+ СокрЛП(док.номерАвто) +"</sh:wagonNumber>
			|"; 
			иначеЕсли СокрЛП(Док.ТипТС) = "3" Тогда
		    Запрос = Запрос+"
			|            <sh:flightNumber>"+ СокрЛП(док.номерАвто) +"</sh:flightNumber>
			|";
			иначеЕсли (СокрЛП(Док.ТипТС) = "4") или (СокрЛП(Док.ТипТС) = "5") или (СокрЛП(Док.ТипТС) = "6") Тогда
		    Запрос = Запрос+"
			|            <sh:shipName>"+ СокрЛП(док.номерАвто) +"</sh:shipName>
			|";
			
			КонецЕсли;	
			Запрос=Запрос+"
			|          </sh:transportNumber>
			|        </sh:transportInfo>
			|";
		КонецЕсли;
		
			Запрос=Запрос+"
			|        <sh:transportStorageType>"+ ГМ.ТермическиеУсловияПеревозки.ПолучитьЗначение( док.ТермическоеСостояние ) +"</sh:transportStorageType>
			|        <sh:cargoReloadingPointList />
			|      </vd:waybill>
			|      <vd:vetCertificate>
			|        <bs:uuid>"+ СокрЛП(док.UUID) +"</bs:uuid>
			|      </vd:vetCertificate>
			|    </vd:accompanyingForms>
			|  </delivery>
			|"; 
			
			Запрос=Запрос+"
			|  <deliveryFacts>
			|    <vd:vetCertificatePresence>ELECTRONIC</vd:vetCertificatePresence>
			|    <vd:docInspection>
			|      <vd:responsible>
			|        <co:login>"+ СокрЛП( ГМ.СписокКонстант.Получить("param_vetdoctor_login")) +"</co:login>
			|      </vd:responsible>
			|      <vd:result>CORRESPONDS</vd:result>
			|    </vd:docInspection>
			|    <vd:vetInspection>
			|      <vd:responsible>
			|        <co:login>"+ СокрЛП( ГМ.СписокКонстант.Получить("param_vetdoctor_login")) +"</co:login>
			|      </vd:responsible>
			|      <vd:result>CORRESPONDS</vd:result>
			|    </vd:vetInspection>
			|    <vd:decision>ACCEPT_ALL</vd:decision>
			|  </deliveryFacts> 
			|"; 
// Дмитрий Акт несоответствия, временно выведено на вкладку Параметры, нужно потестить на продуктиве,
// Потом можно добавить либо в ВСД_Входящее(чтобы запоминал) или просто в Таблицу обработки.
       	Если _АктНесоотв = 1 Тогда
			Запрос=Запрос+" 
			|  <discrepancyReport>
			|    <vd:issueDate>"+ ГМ.ДатаXML(док.ТтнДата) +"</vd:issueDate>
			|    <vd:reason>
			|      <vd:name>"+СокрЛП(тПричинаАкта)+"</vd:name>
			|	 </vd:reason> 
			|    <vd:description>"+?(ПустоеЗначение(тОписаниеНесоответствия)=1,"Описание несоответствия",СокрЛП(тОписаниеНесоответствия)) +"</vd:description>
			|  </discrepancyReport>
			|"; 
        КонецЕсли;

			Запрос=Запрос+" 
			|</processIncomingConsignmentRequest>";
		КонецЕсли;
	
	Возврат Запрос;
КонецФункции

Функция Отправить_ВСД_Входящий(док,НаименованиеПродукции="")

	//стандартное поведение функции	
	Если Проверка_ВСД_Входящий(док)=0 Тогда 
		Возврат 0;
	КонецЕсли;	
			
	ЗапросXML = ВСД_входящий_ЗапросXML(док,НаименованиеПродукции);
	
	appID = ГМ.ОтправитьЗапросXML(ЗапросXML, док);
		
	Возврат appID;
	
КонецФункции


//******************************************************************************
Процедура Отправка()
	ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗВСД.Выгрузить(ВремТЗ);
	ВремТЗ.ВыбратьСтроки();
	Отправлено = 0;
	Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
		Если НЕ(ВремТЗ.Пометка = 2) Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремТЗ.ДокВСД) = 1 Тогда
		    Продолжить;
		КонецЕсли;
		
		Отправить_ВСД_Входящий(ВремТЗ.ДокВСД,ВремТЗ.НаименованиеПродукции);	
		Отправлено = Отправлено + 1;
		ВремТЗ.Пометка = 1;
	КонецЦикла;
	
	Если Отправлено>0 Тогда
    	ВремТЗ.Выгрузить(ТЗВСД); 
		РаскраситьСписокДокументов();    
	КонецЕсли;
	
КонецПроцедуры // Отправка()

// Получить ВСД для гашения от Меркурия

//*********************************

Функция  ПолучитьСписокВСДОтветXML(appID)

	Результат = ГМ.Компонента.GetVetDocumentListResult(СокрЛП(appID));

	// Вот Компонента.LogFilename нужный нам файл ЗагрузитьXML_ВСД(Компонента.LogFilename);
	Если ГМ.НайтиОшибки("")>0 Тогда 
		Возврат "";
	КонецЕсли;		
	
	СтрИмяФайла = ГМ.Компонента.LogFilename;
	ОбработатьДанные(); // Загрузить в ТЗ, обработать ТЗ
	
	ГМ.УдалитьXML( ГМ.Компонента.LogFilename);
		
	Возврат Результат;
КонецФункции



Функция  ПолучитьСписокВСД(Отправитель_Площадка, vetDocumentType	= 4, vetDocumentStatus = 0, Смещение)
	//Если ПустоеЗначение(ВыбПлощадка)=1 Тогда 
	//	Предупреждение("Выберите Площадку");
	//	Возврат;
	//КонецЕсли;

	Если ПустоеЗначение(Отправитель_Площадка.GUID)=1 Тогда 
		Сообщить("В выбранной Площадке пустой GUID");
		Возврат "REJECTED";
	КонецЕсли;

    //{ VetDocumentType 
    //    TRANSPORT, = 1	= Транспортный ВСД.	
    //    PRODUCTIVE, = 2 	= Производственный ВСД.
    //    RETURNABLE, = 3 	= Возвратный ВСД.
    //    INCOMING, = 4  	= Входящий ВСД.
    //    OUTGOING, = 5  	= Исходящий ВСД.
    //}


    //{ VetDocumentStatus 
    //    
    //    /// <remarks/>
    //    CREATED, = 1
    //    
    //    /// <remarks/>
    //    CONFIRMED, = 2
    //    
    //    /// <remarks/>
    //    WITHDRAWN, = 3
    //    
    //    /// <remarks/>
    //    UTILIZED, = 4 
    //}	
	
	Результат = ГМ.Компонента.GetVetDocumentListOperation(СокрЛП(Отправитель_Площадка.GUID), vetDocumentType, vetDocumentStatus, Смещение);

	appID = ГМ.Компонента.ApplicationId;
	
	ГМ.УдалитьXML( ГМ.Компонента.LogFilename);

	Результат = ПолучитьСписокВСДОтветXML( appID );
	Пока Результат="IN_PROCESS" Цикл
		ГМ.Пауза();				
		Результат = ПолучитьСписокВСДОтветXML( appID );
	КонецЦикла;		
	
	ГМ.УдалитьXML( ГМ.Компонента.LogFilename);
	
	Возврат Результат;
	
КонецФункции







ТЗВСД.НоваяКолонка("сЦвет",,,,,1,);
ТЗВСД.НоваяКолонка("Пометка",,,,,5,);


ТЗВСД.НоваяКолонка("ВладелецХС");  //1С Элемент справочника. owner
ТЗВСД.НоваяКолонка("productItem",,,,"Продукция");
ТЗВСД.НоваяКолонка("volume",,,,"Объем",10);
ТЗВСД.НоваяКолонка("ВсдДата");
ТЗВСД.НоваяКолонка("ДокВСД");
ТЗВСД.НоваяКолонка("uuid");

ТЗВСД.НоваяКолонка("forma");
ТЗВСД.НоваяКолонка("st");
ТЗВСД.НоваяКолонка("type");
// эти колонки для элементов справочников 1С
//ТЗВСД.НоваяКолонка("Отправитель_ХозСубъект");  //consignorBusinessEntity
//ТЗВСД.НоваяКолонка("Отправитель_Площадка");   //consignorEnterprise
//ТЗВСД.НоваяКолонка("Получатель_ХозСубъект");  //consigneeBusinessEntity
//ТЗВСД.НоваяКолонка("Получатель_Площадка");    //consigneeEnterprise
//ТЗВСД.НоваяКолонка("Производитель_Площадка");
//ТЗВСД.НоваяКолонка("Продукция");
//ТЗВСД.НоваяКолонка("ВидПродукции");


ТЗВСД.НоваяКолонка("ВсдСерия");
ТЗВСД.НоваяКолонка("ВсдНомер");
ТЗВСД.НоваяКолонка("НаименованиеПродукции","Строка",200);


ТЗВСД.НоваяКолонка("createDate");
ТЗВСД.НоваяКолонка("consignorBusinessEntity");
ТЗВСД.НоваяКолонка("consignorEnterprise");
ТЗВСД.НоваяКолонка("consigneeBusinessEntity");
ТЗВСД.НоваяКолонка("consigneeEnterprise");
ТЗВСД.НоваяКолонка("product");
ТЗВСД.НоваяКолонка("subProduct");

ТЗВСД.НоваяКолонка("productItem");
ТЗВСД.НоваяКолонка("productItemGuid");
ТЗВСД.НоваяКолонка("productItemUuid");

ТЗВСД.НоваяКолонка("unitGuid");
ТЗВСД.НоваяКолонка("packingFormUuid");
ТЗВСД.НоваяКолонка("packingFormName");
ТЗВСД.НоваяКолонка("packingAmount");
ТЗВСД.НоваяКолонка("ДатаИзготовления1");
ТЗВСД.НоваяКолонка("ДатаИзготовленияСтрока");
ТЗВСД.НоваяКолонка("ДатаИзготовления2");
ТЗВСД.НоваяКолонка("ДатаСрокГодности1");
ТЗВСД.НоваяКолонка("ДатаСрокГодностиСтрока");
ТЗВСД.НоваяКолонка("ДатаСрокГодности2");
ТЗВСД.НоваяКолонка("producer");
ТЗВСД.НоваяКолонка("ProductMarking");
ТЗВСД.НоваяКолонка("ТипТранспорта");
ТЗВСД.НоваяКолонка("АвтоНомер");
ТЗВСД.НоваяКолонка("номерПолуприцепа");
ТЗВСД.НоваяКолонка("номерКонтейнера");
ТЗВСД.НоваяКолонка("ТермУсловия");
ТЗВСД.НоваяКолонка("Местность");
ТЗВСД.НоваяКолонка("ОсОтм");
ТЗВСД.НоваяКолонка("Эксп");
ТЗВСД.НоваяКолонка("ТтнНомер");
ТЗВСД.НоваяКолонка("ТтнДата");
ТЗВСД.НоваяКолонка("ТтнТип","Число",1,0);

ТЗВСД.НоваяКолонка("cExpertized");
ТЗВСД.НоваяКолонка("cInspected");    //??

ТЗВСД.НоваяКолонка("Перевозчик");
ТЗВСД.НоваяКолонка("Скоропортящаяся");
ТЗВСД.НоваяКолонка("Некачественная");
ТЗВСД.НоваяКолонка("страна_ууид");
ТЗВСД.НоваяКолонка("страна_гуид");


ТЗВСД.НоваяКолонка("owner");
// есть еще РольПроизводителя, Что это?
//				producer	= марк1.selectSingleNode("ent:enterprise").selectSingleNode("bs:guid").text; 
//				рольп	= марк1.selectSingleNode("ent:role").text; 



ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";


Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();


