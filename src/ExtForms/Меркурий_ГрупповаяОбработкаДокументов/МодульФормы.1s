Перем базаДанных;
Перем ЭтоSQL;

//*******************************************
Функция НайтиХозСубъект(ВыбКлиент)
	
	Если ПустоеЗначение(ВыбКлиент.Плательщик) = 0 Тогда 
		ВыбКлиент = ВыбКлиент.Плательщик;
	КонецЕсли;
	
	
	Если ЭтоSQL=1 Тогда 	
		RS = СоздатьОбъект("ODBCRecordset");
		RS.УстБД1С();     

		ТекстЗапроса = "select 
		|	СпрХС.ID [id $Справочник.ВСД_ХозСубъект],
		|	СпрХС.descr,
		|	$СпрХС.GUID,
		|	$СпрХС.Контрагент
		|from $Справочник.ВСД_ХозСубъект as СпрХС 
		|where 
		|	$СпрХС.Контрагент=:ВыбКлиент
		|";
		RS.УстановитьТекстовыйПараметр("ВыбКлиент", ВыбКлиент);  
		//RS.Отладка(1);
		тз = RS.ВыполнитьИнструкцию(ТекстЗапроса);			
	  	
	Иначе	
	
		Запрос = базаДанных.НовыйЗапрос();
	
		ТекстЗапроса = "select 
		|	СпрХС.ID [id $Справочник.ВСД_ХозСубъект],
		|	СпрХС.descr,
		|	СпрХС.GUID,
		|	СпрХС.Контрагент
		|from [Справочник.ВСД_ХозСубъект] as СпрХС 
		|where 
		|	СпрХС.Контрагент=:ВыбКлиент
		|";

		Запрос.Подставлять("ВыбКлиент", ВыбКлиент);
	
		//тз.Отладка();
		ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		//ТЗ.ВыбратьСтроку();
	КонецЕсли;
	
	Тз.ВыбратьСтроки();
	Если ТЗ.ПолучитьСТроку()=1 Тогда
		результат = тз.id;
	Иначе
		СпрХС = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
		СпрХС.Новый();
		СпрХС.Наименование = ВыбКлиент.Наименование;
		СпрХС.Контрагент = ВыбКлиент;
		СпрХС.Записать();
		Сообщить("Создан новый элемент справочника ВСД_ХозСубъект: "+ВыбКлиент);
		
		результат = спрХС.ТекущийЭлемент();
	КонецЕсли;
	
	Возврат результат;
КонецФункции

//*******************************************
Функция НайтиПлощадку(ВыбХС, ВыбКлиент)
	результат = "";
	
	Если ЭтоSQL=1 Тогда 	
		RS = СоздатьОбъект("ODBCRecordset");
		RS.УстБД1С();     

		ТекстЗапроса = "select 
		|	СпрПл.ID [id $Справочник.ВСД_Площадка],
		|	СпрПл.descr,
		|	$СпрПл.GUID,
		|	$СпрПл.Контрагент
		|from $Справочник.ВСД_Площадка as СпрПл 
		|where 
		|	$СпрПл.Контрагент=:ВыбКлиент
		|";
		RS.УстановитьТекстовыйПараметр("ВыбКлиент", ВыбКлиент);  
		//RS.Отладка(1);
		тз = RS.ВыполнитьИнструкцию(ТекстЗапроса);			
	  	
	Иначе	
		Запрос = базаДанных.НовыйЗапрос();
	
		ТекстЗапроса = "select 
		|	СпрПл.ID [id $Справочник.ВСД_Площадка],
		|	СпрПл.descr,
		|	СпрПл.GUID,
		|	СпрПл.Контрагент
		|from [Справочник.ВСД_Площадка] as СпрПл 
		|where 
		|	СпрПл.Контрагент=:ВыбКлиент
		|";
		
		Запрос.Подставлять("ВыбКлиент", ВыбКлиент);
	
		//тз.Отладка();
		ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		//ТЗ.ВыбратьСтроку();
	КонецЕсли;
	
	Тз.ВыбратьСтроки();
	Если ТЗ.ПолучитьСТроку()=1 Тогда
		результат = тз.id;
	КонецЕсли;
	
	Возврат результат;
КонецФункции

//******************************************************************************
 // предопределенная процедура
 //
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
 	Если НомерЗакладки=1 Тогда
		Форма.ИспользоватьСлой("Основной");
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;        
	
КонецПроцедуры 

//*******************************************
Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Колво документов = "+СписокДокументов.КоличествоСтрок()+" Общее вес = "+СписокДокументов.Итог("Вес"));
	
КонецПроцедуры

//*******************************************
Процедура ПриОткрытии()
	ЗагрузитьВнешнююКомпоненту("1cpp.dll");
	
	СпрВидСв = СоздатьОбъект("Справочник.ВидыСвойств");	
	Если СпрВидСв.НайтиПоНаименованию("Тип продукции ВСД (Охл / Зам / Колбаса)",0,1)=0 Тогда
		Сообщить("Тип св-в [Тип продукции ВСД (Охл / Зам / Колбаса)] не найдено");	
		Возврат;
	Иначе
		ВыбВидСвойств = СпрВидСв.ТекущийЭлемент();	
	КонецЕсли;
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("ВСД");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной");
	
	Партия = "";

	ЭтоSQL = ФС.СуществуетФайл(КаталогИБ()+"1cv7.dba");
	
	Если ЭтоSQL=1 Тогда 
		Попытка
			RS = СоздатьОбъект("ODBCRecordset");
			RS.УстБД1С();     
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;	
	Иначе
		
		Попытка
			базаДанных = СоздатьОбъект("SQLiteBase");
		Исключение
			ЗагрузитьВнешнююКомпоненту("1sqlite.dll");
			базаДанных = СоздатьОбъект("SQLiteBase");
		КонецПопытки;	
		базаДанных.Открыть(":memory:");	
	КонецЕсли;
	
	ОбновитьИнф();
КонецПроцедуры

Процедура ОбновитьСписокДокументов()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Площадка = НайтиПлощадку(СписокДокументов.ХозСубъект, СписокДокументов.Контрагент);

		СписокДокументов.инфо = 35;
		СписокДокументов.сЦвет = цвЖелтый;
		Если ПустоеЗначение(СписокДокументов.ХозСубъект.GUID)=1 Тогда 			
			СписокДокументов.сЦвет = цвКрасный;
		Иначе
			Если (ПустоеЗначение(СписокДокументов.Площадка)=0) Тогда
				Если (ПустоеЗначение(СписокДокументов.Площадка.GUID)=0)  Тогда 
					СписокДокументов.инфо = 36;
					СписокДокументов.сЦвет = "";				
				КонецЕсли;					
			Иначе				
				СписокДокументов.сЦвет = цвЖелтый;				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

//*******************************************
Процедура Клик()
	текСтр = СписокДокументов.ТекущаяСтрока();
	текКол = СписокДокументов.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = СписокДокументов.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокДокументов.Пометка=1;
		Иначе
			СписокДокументов.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол="Площадка" Тогда 
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);
		Если ПустоеЗначение(Площадка)=0 Тогда  
			ОткрытьФорму(Площадка);
		Иначе			
			ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
			//ОткрытьФорму("Справочник.ВСД_Площадка",ХозСубъект);
			СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
			СпрПлощадка.ИспользоватьВладельца(ХозСубъект);
			Если СпрПлощадка.Выбрать("Выберите площадку","ФормаСписка")=1 Тогда 
				Сообщить(СпрПлощадка.ТекущийЭлемент());
				СпрПлощадка.Контрагент = СписокДокументов.Контрагент;
				СпрПлощадка.Записать();
				//СписокДокументов.Площадка = СпрПлощадка.ТекущийЭлемент();
				ОбновитьСписокДокументов();
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	//ОбновитьНадписи();	
КонецПроцедуры



Процедура СоздатьПлощадки()
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		
		Если (СписокДокументов.Пометка=2) и (ПустоеЗначение(СписокДокументов.Площадка)=1) Тогда 
			СпрПл = СоздатьОбъект("Справочник.ВСД_Площадка");
			СпрПл.Новый();
			СпрПл.Наименование = СписокДокументов.Контрагент.Наименование;
			СпрПл.Контрагент = СписокДокументов.Контрагент;	
			СпрПл.Владелец = СписокДокументов.ХозСубъект;
			СпрПл.Записать();
			Сообщить("Создан новый элемент справочника ВСД_Площадка: "+СписокДокументов.Контрагент);
			
			СписокДокументов.Площадка = СпрПл.ТекущийЭлемент();   
			
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

//*******************************************
Процедура ЗаполнитьТЗ()  

	Если ЭтоSQL=1 Тогда 	
		RS = СоздатьОбъект("ODBCRecordset");
		RS.УстБД1С();     
		
		ТекстЗапроса = "
		|SELECT
		|    Жур.IDDoc as [Док $Документ],
		|    Жур.IDDocDef as Док_вид,
		|	Жур.DocNo as [НомерДок],
		|	$ДокР.Грузополучатель as [Клиент $Справочник.Контрагенты],
		|	SUM($ДокСтроки.Количество) [Количество],
		|	SUM($ДокСтроки.КоличествоМест) [КоличествоМест],
		|	СпрЗн.descr as Свво
		|FROM
		|    _1SJourn Жур
		|INNER JOIN 
		|	$ДокументСтроки.Реализация as ДокСтроки 
		|		ON Жур.IDDoc = ДокСтроки.IDDoc
		|FULL JOIN 
		|	$Справочник.СвойстваНоменклатуры as СпрСв 
		|		ON СпрСв.ParentExt = $ДокСтроки.Номенклатура
		|			 and $СпрСв.ВидСвойства = :ВыбВидСвойств 		
		|FULL JOIN 
		|	$Справочник.ЗначенияСвойств as СпрЗн 
		|		ON СпрЗн.ID = $СпрСв.ЗначениеСвойства 
		|			and  СпрЗн.ParentExt = :ВыбВидСвойств 
		|INNER JOIN 
		|	$Документ.Реализация as ДокР 
		|		ON Жур.IDDoc = ДокР.IDDoc
		|WHERE
		|    Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ AND
		|    Жур.IDDocDef = $ВидДокумента.Реализация
		|	and Жур.Closed & 1 = 1
		|	%УсловиеПоГрузополучателю%
		|	%УсловиеПоСвойствуТовара%
		|
		|GROUP BY
		|	Жур.IDDoc,
		|	Жур.IDDocDef,
		|	Жур.DocNo,
		|	$ДокР.Грузополучатель,
		|	СпрЗн.descr
		|order by Жур.DocNo
		|";
	
		УсловиеПоГрузополучателю = "";
		УсловиеПоСвойствуТовара="";
		Если ПустоеЗначение(ВыбТипПродукции) = 0 Тогда		
			УсловиеПоСвойствуТовара = "and СпрЗн.ID = :ВыбТипПродукции";
		КонецЕсли;
		Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
			УсловиеПоГрузополучателю = " and $ДокР.Грузополучатель IN (SELECT Val FROM #ГруппаК) ";
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСвойствуТовара%", УсловиеПоСвойствуТовара);
	
		
		RS.УложитьСписокОбъектов(ВыбКонтрагент, "#ГруппаК","Контрагенты");
		RS.УстановитьТекстовыйПараметр("ВыбВидСвойств", ВыбВидСвойств);    
		RS.УстановитьТекстовыйПараметр("ВыбТипПродукции", ВыбТипПродукции);    
		RS.УстановитьТекстовыйПараметр("НачДата", НачДата);
		RS.УстановитьТекстовыйПараметр("КонДата", КонДата);
		        
		//RS.Отладка(1);
		ТЗ = RS.ВыполнитьИнструкцию(ТекстЗапроса);
		//ТЗ.ВыбратьСтроку();
	  	
	Иначе	
			
		Запрос = базаДанных.НовыйЗапрос();
	
		ТекстЗапроса = "
		|SELECT
		|    Жур.IDDoc as [Док :Документ],
		|    Жур.IDDocDef as Док_вид,
		|	Жур.DocNo as [НомерДок],
		|	ДокР.Грузополучатель as [Клиент :Справочник.Контрагенты],
		|	SUM(ДокСтроки.Количество) [Количество],
		//|	SUM(ДокСтроки.КоличествоМест) [КоличествоМест],
		|	СпрЗн.descr as Свво
		|FROM
		|    Журнал Жур
		|INNER JOIN 
		|	[ДокументСтроки.Реализация] as ДокСтроки 
		|		ON Жур.IDDoc = ДокСтроки.IDDoc
		|LEFT JOIN 
		|	[Справочник.СвойстваНоменклатуры] as СпрСв 
		|		ON СпрСв.ParentExt = ДокСтроки.Номенклатура
		|			 and СпрСв.ВидСвойства = :ВыбВидСвойств 		
		|LEFT JOIN 
		|	[Справочник.ЗначенияСвойств] as СпрЗн 
		|		ON СпрЗн.ID = СпрСв.ЗначениеСвойства 
		|			and  СпрЗн.ParentExt = :ВыбВидСвойств 
		|INNER JOIN 
		|	[Документ.Реализация] as ДокР 
		|		ON Жур.IDDoc = ДокР.IDDoc
	
		|WHERE
		|    Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~ AND
		|    Жур.IDDocDef = :ВидДокумента.Реализация
		|	and Жур.Closed & 1 = 1
		|	%УсловиеПоГрузополучателю%
		|	%УсловиеПоСвойствуТовара%
		|
		|GROUP BY
		|	Жур.IDDoc,
		|	Жур.IDDocDef,
		|	Жур.DocNo,
		|	ДокР.Грузополучатель,
		|	СпрЗн.descr
		|order by Жур.DocNo
		|";
	
		УсловиеПоГрузополучателю = "";
		УсловиеПоСвойствуТовара="";
		Если ПустоеЗначение(ВыбТипПродукции) = 0 Тогда		
			УсловиеПоСвойствуТовара = "and СпрЗн.ID = :ВыбТипПродукции";
		КонецЕсли;
		Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
			УсловиеПоГрузополучателю = " and ДокР.Грузополучатель IN (SELECT Val FROM ГруппаК) ";
			базаДанных.УложитьОбъекты(ВыбКонтрагент, "ГруппаК",, "Контрагенты");
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСвойствуТовара%", УсловиеПоСвойствуТовара);
		        
		//Запрос.Подставлять("ВыбКлиент", ВыбКлиент);
		Запрос.Подставлять("ВыбВидСвойств", ВыбВидСвойств);    
		Запрос.Подставлять("ВыбТипПродукции", ВыбТипПродукции);    
		Запрос.Подставлять("НачДата", НачДата);
		Запрос.Подставлять("КонДата", КонДата);
	
		//Запрос.Отладка();
		ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		//ТЗ.ВыбратьСтроку();
	КонецЕсли;
		
	СписокДокументов.УдалитьСтроки();
	
	тз.ВыбратьСтроки();
	Ном=0;
	ПредДок="";
	Пока тз.ПолучитьСтроку()=1 Цикл 
		СписокДокументов.НоваяСтрока();
		СписокДокументов.Пометка=1;
		СписокДокументов.Контрагент = тз.Клиент;
		СписокДокументов.Грузополучатель = тз.Док.Грузополучатель;
		СписокДокументов.Док = тз.Док;
		СписокДокументов.Колво = тз.Количество;
		СписокДокументов.Вес = тз.Количество;
//		СписокДокументов.КолвоМест = тз.КоличествоМест;
				
		СписокДокументов.ХозСубъект = НайтиХозСубъект(тз.Клиент);
		Если ПустоеЗначение(СписокДокументов.ХозСубъект)=0 Тогда
			СписокДокументов.Площадка = НайтиПлощадку(СписокДокументов.ХозСубъект, СписокДокументов.Грузополучатель);
		КонецЕсли;
		
		СписокДокументов.инфо = 35;
		СписокДокументов.сЦвет = цвЖелтый;
		Если ПустоеЗначение(СписокДокументов.ХозСубъект.GUID)=1 Тогда 			
			СписокДокументов.сЦвет = цвКрасный;
		Иначе
			Если (ПустоеЗначение(СписокДокументов.Площадка)=0) Тогда
				Если (ПустоеЗначение(СписокДокументов.Площадка.GUID)=0)  Тогда 
					СписокДокументов.инфо = 36;
					СписокДокументов.сЦвет = "";				
				КонецЕсли;					
			Иначе				
				СписокДокументов.сЦвет = цвЖелтый;				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	      
	ОбновитьИнф();
КонецПроцедуры

Процедура СоздатьВСД()

	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Партия)=1 Тогда
		Сообщить("Не выбран параметр Партия ","!");			
		Возврат;
	КонецЕсли;	

	
	ДокВСД = СоздатьОбъект("Документ.ВСД_исходящий");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;
		
		Сообщить(СписокДокументов.Док);
		
		ДокВСД.Новый();
		//ДокВСД.НомерДок = ;
		ДокВСД.ДокОснование = СписокДокументов.Док;
		
		ДокВСД.ДатаДок = ТекущаяДата();
		ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
		ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
		
		ХС = НайтиХозСубъект( СписокДокументов.Контрагент );
		ДокВСД.Получатель_ХозСубъект = ХС;
		
		Площадка = НайтиПлощадку( ХС, СписокДокументов.Грузополучатель );
		ДокВСД.Получатель_Площадка = Площадка;
				
		ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;

		ДокВСД.Производитель_Площадка = Партия.Производитель_Площадка;
		//ДокВСД.Продукция = Партия.ВСД.Продукция;
		//ДокВСД.ВидПродукции = Партия.ВСД.ВидПродукции;
		ДокВСД.Количество = СписокДокументов.Колво;
		ДокВСД.КоличествоКор = СписокДокументов.КолвоМест;
		//ДокВСД.ДатаИзготовления = Партия.ВСД.ДатаИзготовления;
		//ДокВСД.ДатаСрокГодности = Партия.ВСД.ДатаСрокГодности;
		
		
		//ТТН = СписокДокументов.Док.Маршрут;		
		ТТН = СписокДокументов.Док.НомерМаршрута;		
		
		ДокВСД.ТтнСерия = ""; //ТТН.Серия;
		ДокВСД.ТтнНомер = СписокДокументов.Док.НомерДок;
		ДокВСД.ТтнДата = СписокДокументов.Док.ДатаДок;
		ДокВСД.номерАвто = ТТН.Авто.НомернойЗнак;
		
		//ДокВСД.ВсдСерия = Партия.ВСД.ВсдСерия;
		//ДокВСД.ВсдНомер = Партия.ВСД.ВсдНомер;
		//ДокВСД.ВсдДата = Партия.ВСД.ВсдДата;
		//ДокВСД.ВсдЭкспертиза = Партия.ВСД.ВсдЭкспертиза;
		//ДокВСД.ВсдМестность = Партия.ВСД.ВсдМестность;
		////ДокВСД.Статус = ;
		//ДокВСД.Производитель_ХозСубъект = Партия.ВСД.Производитель_ХозСубъект;
		ДокВСД.Партия = Партия;
		ДокВСД.Автор = глПользователь;
//		ДокВСД.Филиал = глПользователь.Филиал;
		//ДокВСД.Комментарий = ;
		
		Если ПустоеЗначение( СокрЛП(ДокВСД.номерАвто) )=1 Тогда
			Сообщить("В документе "+ДокВСД.ТтнНомер+"не указан № автомобиля 
			|ВСД не сформирован");
			Продолжить;
		КонецЕсли;
		
		ДокВСД.Записать();
		
		СписокДокументов.ВСД = ДокВСД.ТекущийДокумент();
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьПартию()
	Если Партия.ТермическоеСостояние=0 Тогда 
		Сообщить("Не указано термическое состояние партии","!");
		Партия = "";
		Возврат;
	КонецЕсли;
	
КонецПроцедуры	

НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов.НоваяКолонка("сЦвет",,,,,1,);
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("инфо",,,,,3,);
СписокДокументов.НоваяКолонка("Грузополучатель");
СписокДокументов.НоваяКолонка("Площадка",,,,,,);
СписокДокументов.НоваяКолонка("Колво",,,,,10,);
СписокДокументов.НоваяКолонка("Вес",,,,,10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,,10,);

СписокДокументов.НоваяКолонка("ХозСубъект",,,,,10,);
СписокДокументов.НоваяКолонка("Док",,,,,20,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,,);

СписокДокументов.ВыводитьПиктограммы("Пометка");
СписокДокументов.ВыводитьПиктограммы("Инфо");

//                    TransportationStorageType.FROZEN == 0 
//                    TransportationStorageType.CHILLED == 1 
//                    TransportationStorageType.COOLED == 2
//                    TransportationStorageType.VENTILATED ==3
