Перем ВыпМодуль;
Перем ПутьГлобальныйМодуль;
//Перем Компонента;
Перем Филиал;

//Перем базаДанных;
//Перем ЭтоSQL;

Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;

Перем КаталогОбработки;

перем ПартияИнфо;
Перем ДокументыИнфо;
Перем ДокументыИнфоПредупреждение;

Перем ВыбСтрока;
Перем ВерсияСистемы;

Перем ОбработкаОбмена;

Перем ТекСтрока; //курсор в таблице СписокДокументов

//*******************************************
Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Документов: "+СписокДокументов.КоличествоСтрок()+" шт
	|Общий вес: "+Окр(СписокДокументов.Итог("Вес"))+" кг");
	
	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;	      
	ВыбКолво = Окр(ВыбКолво);
	
	Если ВыбКолво>Партия.Количество Тогда 
		Форма.ДокИнфо.Видимость(0);
		Форма.ДокПредупреждение.Видимость(1);
		ДокументыИнфоПредупреждение =  "Выбрано "+ВыбДок+" док "+ВыбКолво+" кг "+" не хватает "+(ВыбКолво - Партия.Количество);	
		Форма.ДокПредупреждение.Заголовок(ДокументыИнфоПредупреждение);
	Иначе 
		Форма.ДокПредупреждение.Видимость(0);
		Форма.ДокИнфо.Видимость(1);
		ДокументыИнфо = "Выбрано "+ВыбДок+" док "+ВыбКолво+" кг ";	
		//ДокументыИнфо=ДокументыИнфо+" останется "+(Партия.Количество - ВыбКолво);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаголовокНадпись()

	//Если ВерсияСистемы=2 Тогда 
	//	стр = "Меркурий - РАБОЧАЯ ";
	//Иначе
	//	стр = "Меркурий - ТЕСТ[!!!] "
	//КонецЕсли;	
	//форма.Заголовок(стр+"     ("+НачДата+" - "+КонДата+")",1);
	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

Процедура РаскраситьСписокДокументов( тз )
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл		

		тз.инфо = 35;
		Если (ПустоеЗначение(тз.ВСД)=0) Тогда
			Если ПустоеЗначение(тз.ВСД.UUID)=0 Тогда
				тз.инфо = 36;
				тз.сЦвет = цвЗеленый;
			КонецЕсли;			
		//ИначеЕсли (ПустоеЗначение(тз.Док.Авто)=1) или 
		//	(Найти( ВРЕГ(СокрЛП(тз.Док.Авто)),"САМОВЫВОЗ" )>0 ) Тогда
		//		тз.инфо = 36;
		//		тз.сЦвет = цвФиолетовый;							
		ИначеЕсли ПустоеЗначение(тз.ХозСубъект.GUID)=1 Тогда 			
			тз.сЦвет = цвКрасный;
		ИначеЕсли (ПустоеЗначение(тз.Площадка)=0) Тогда
			Если (ПустоеЗначение(тз.Площадка.GUID)=0)  Тогда 
				тз.инфо = 36;
				тз.сЦвет = "";							
			КонецЕсли;
		Иначе			
			тз.сЦвет = цвЖелтый;							
		КонецЕсли;
		
	КонецЦикла;
	
	//ТекСтрока = СписокДокументов.ТекущаяСтрока();
	
	СписокДокументов.Загрузить(тз);
	
	СписокДокументов.ВыводитьПиктограммы("Пометка");
	СписокДокументов.ВыводитьПиктограммы("Инфо");

	Если ПустоеЗначение(ТекСтрока)=1 Тогда 
		СписокДокументов.ТекущаяСтрока(1);
	Иначе
		СписокДокументов.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;
КонецПроцедуры

Функция ВыбратьВсеПлощадкиХС(ХС)
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = "
	|id = Справочник.ВСД_Площадка.ТекущийЭлемент;
	|GuidХозСубъекта = Справочник.ВСД_Площадка.GuidХозСубъекта;
	|Условие (GuidХозСубъекта = ВыбGuidХозСубъекта);
	|Группировка id;
	|Без Итогов;
	|";
	
	ВыбGuidХозСубъекта = (ХС.GUID);
	Запрос.Выполнить(ТекстЗапроса);
	тз =СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(тз);
	//ТЗ.ВыбратьСтроку();	
	
	Возврат тз;
	
КонецФункции

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Площадка");
		
		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если ПустоеЗначение(СтараяПлощадка)=0 Тогда 
			Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка.Контрагент,0,0)=1 Тогда
				Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
					//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
					СпрПлощадка.Контрагент = "";
					СпрПлощадка.Склад = "";
					СпрПлощадка.Записать();				
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		СпрПлощадка.НайтиЭлемент(Элемент);
		
		ВыбГрузополучатель = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
		Если ВыбГрузополучатель.Вид()="Контрагенты" Тогда
			СпрПлощадка.Контрагент = ВыбГрузополучатель
		Иначе
			СпрПлощадка.Склад = ВыбГрузополучатель;
		КонецЕсли;
		СпрПлощадка.Записать();
		//Сообщить("Установили привязку площадки "+СпрПлощадка.Контрагент);
		КонтФормы.Форма.Закрыть();    
		
		СписокДокументов.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());
		
		тзДок = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тзДок);
		
		РаскраситьСписокДокументов( тзДок );		
		
	КонецЕсли;
	
КонецПроцедуры

//*******************************************
Процедура Клик()
	текСтр = СписокДокументов.ТекущаяСтрока();
	текКол = СписокДокументов.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = СписокДокументов.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокДокументов.Пометка=1;
		Иначе
			СписокДокументов.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол="Площадка" Тогда 
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;			
				
		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

Процедура ЗаполнитьСписокДокументов_ПеремещенийТМЦ()
	Попытка
		
		Если ВыпМодуль.ЭтоSQL=1 Тогда 	
			RS = СоздатьОбъект("ODBCRecordset");
			RS.УстБД1С();     
			
			ТекстЗапроса = "
			|SELECT
			|    Жур.IDDoc as [Док $Документ],
			|    Жур.IDDocDef as Док_вид,
			|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_исходящий],
			|	Жур.DocNo as [НомерДок],
			|	$ДокР.Склад as [Склад $Справочник.Склады],
			|	$ДокР.СкладПолучатель as [СкладПолучатель $Справочник.Склады],
			|	SUM($ДокСтроки.Количество) [Количество],
			//|	SUM($ДокСтроки.КоличествоМест) [КоличествоМест],
			|	СпрЗн.descr as Свво
			|FROM
			|    _1SJourn Жур
			|INNER JOIN 
			|	$ДокументСтроки.ПеремещениеТМЦ as ДокСтроки 
			|		ON Жур.IDDoc = ДокСтроки.IDDoc
			|FULL JOIN 
			|	$Справочник.СвойстваНоменклатуры as СпрСв 
			|		ON СпрСв.ParentExt = $ДокСтроки.Номенклатура
			|			 and $СпрСв.ВидСвойства = :ВыбВидСвойств 		
			|FULL JOIN 
			|	$Справочник.ЗначенияСвойств as СпрЗн 
			|		ON СпрЗн.ID = $СпрСв.ЗначениеСвойства 
			|			and  СпрЗн.ParentExt = :ВыбВидСвойств 
			|INNER JOIN 
			|	$Документ.ПеремещениеТМЦ as ДокР 
			|		ON Жур.IDDoc = ДокР.IDDoc
			|Left join 
			|	$Документ.ВСД_исходящий as ДокВСД
			|	ON SUBSTRING($ДокВСД.ДокОснование, 5, 8) = Жур.IDDoc
		//	|		AND $ДокВСД.Статус = 'COMPLETED'
			|WHERE
			|    Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = $ВидДокумента.ПеремещениеТМЦ
			|	and Жур.Closed & 1 = 1
			//|	%УсловиеПоГрузополучателю%
			|	%УсловиеПоСвойствуТовара%
			|	%УсловиеПоФирме%
			|	%УсловиеПоФилиалу%
			|
			|GROUP BY
			|	Жур.IDDoc,
			|	Жур.IDDocDef,
			|	ДокВСД.IDDoc,
			|	Жур.DocNo,
			|	$ДокР.Склад,
			|	$ДокР.СкладПолучатель,
			|	СпрЗн.descr
			|order by Жур.DocNo
			|";
		//"+НазваниеРеквизитаГрузополучатель+",
			
			УсловиеПоСвойствуТовара="";
			Если ПустоеЗначение(ВыбТипПродукции) = 0 Тогда		
				УсловиеПоСвойствуТовара = "and СпрЗн.ID = :ВыбТипПродукции";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСвойствуТовара%", УсловиеПоСвойствуТовара);
			
			//УсловиеПоГрузополучателю = "";
			//Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
			//	УсловиеПоГрузополучателю = " and $ДокР."+НазваниеРеквизитаГрузополучатель+" IN (SELECT Val FROM #ГруппаК) ";
			//КонецЕсли;
			//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
			
			//условие по фирме
			УсловиеПоФирме="";
			Если ПустоеЗначение(ВыбФирма) = 0 Тогда		
				УсловиеПоФирме = " and Жур.$ОбщийРеквизит.Фирма = :ВыбФирма";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);
	
			//условие по филиалу
			Если ПустоеЗначение(глПользователь.Филиал) = 0 Тогда		
				УсловиеПоФилиалу = " and Жур.$ОбщийРеквизит.Филиал = :ВыбФилиал ";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФилиалу%", УсловиеПоФилиалу);
	
			
			RS.УложитьСписокОбъектов(ВыбКонтрагент, "#ГруппаК","Контрагенты");
			RS.УстановитьТекстовыйПараметр("ВыбВидСвойств", ВСД_Продукция_Свойство);    
			RS.УстановитьТекстовыйПараметр("ВыбТипПродукции", ВыбТипПродукции);    
			RS.УстановитьТекстовыйПараметр("НачДата", НачДата);
			RS.УстановитьТекстовыйПараметр("КонДата", КонДата);
			RS.УстановитьТекстовыйПараметр("ВыбФилиал", глПользователь.Филиал);
			RS.УстановитьТекстовыйПараметр("ВыбФирма", ВыбФирма);
			        
			//RS.Отладка(1);
			ТЗ = RS.ВыполнитьИнструкцию(ТекстЗапроса);
			//ТЗ.ВыбратьСтроку();
		  	
		Иначе	
				
			Запрос = ВыпМодуль.базаДанных.НовыйЗапрос();
		
			ТекстЗапроса = "
			|SELECT
			|    Жур.IDDoc as [Док :Документ],
			|    Жур.IDDocDef as Док_вид,
			|	Жур.DocNo as [НомерДок],
			|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_исходящий],
			|	ДокР.Склад as [Склад :Справочник.Склады],
			|	ДокР.СкладПолучатель as [СкладПолучатель :Справочник.Склады],		
			|	SUM(ДокСтроки.Количество) [Количество],
			//|	SUM(ДокСтроки.КоличествоМест) [КоличествоМест],
			|	СпрЗн.descr as Свво
			|FROM
			|    Журнал Жур
			|INNER JOIN 
			|	[ДокументСтроки.Реализация] as ДокСтроки 
			|		ON Жур.IDDoc = ДокСтроки.IDDoc
			|LEFT JOIN 
			|	[Справочник.СвойстваНоменклатуры] as СпрСв 
			|		ON СпрСв.ParentExt = ДокСтроки.Номенклатура
			|			 and СпрСв.ВидСвойства = :ВыбВидСвойств 		
			|LEFT JOIN 
			|	[Справочник.ЗначенияСвойств] as СпрЗн 
			|		ON СпрЗн.ID = СпрСв.ЗначениеСвойства 
			|			and  СпрЗн.ParentExt = :ВыбВидСвойств 
			|INNER JOIN 
			|	[Документ.ПеремещениеТМЦ] as ДокР 
			|		ON Жур.IDDoc = ДокР.IDDoc
			|Left join 
			|	[Документ.ВСД_исходящий] as ДокВСД
			|	ON SUBSTR(ДокВСД.ДокОснование, 5, 8) = Жур.IDDoc
			//|		AND ДокВСД.Статус = 'COMPLETED'	
			|WHERE
			|    Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = :ВидДокумента.Реализация
			|	and Жур.Closed & 1 = 1
			|	%УсловиеПоГрузополучателю%
			|	%УсловиеПоСвойствуТовара%
			|	%УсловиеПоФирме%
			|
			|GROUP BY
			|	Жур.IDDoc,
			|	Жур.IDDocDef,
			|	Жур.DocNo,
			|	ДокР.Склад,
			|	ДокР.СкладПолучатель,		
			|	СпрЗн.descr
			|order by Жур.DocNo
			|";
		
			УсловиеПоГрузополучателю = "";
			УсловиеПоСвойствуТовара="";
			Если ПустоеЗначение(ВыбТипПродукции) = 0 Тогда		
				УсловиеПоСвойствуТовара = "and СпрЗн.ID = :ВыбТипПродукции";
			КонецЕсли;
			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
				УсловиеПоГрузополучателю = " and ДокР."+НазваниеРеквизитаГрузополучатель+" IN (SELECT Val FROM ГруппаК) ";
				ВыпМодуль.базаДанных.УложитьОбъекты(ВыбКонтрагент, "ГруппаК",, "Контрагенты");
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСвойствуТовара%", УсловиеПоСвойствуТовара);
	
			//условие по фирме
			УсловиеПоФирме="";
			Если ПустоеЗначение(ВыбФирма) = 0 Тогда		
				УсловиеПоФирме = " and Жур.Фирма = :ВыбФирма";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);
			        
			//Запрос.Подставлять("ВыбКлиент", ВыбКлиент);
			Запрос.Подставлять("ВыбВидСвойств", ВСД_Продукция_Свойство);    
			Запрос.Подставлять("ВыбТипПродукции", ВыбТипПродукции);    
			Запрос.Подставлять("НачДата", НачДата);
			Запрос.Подставлять("КонДата", КонДата);
			Запрос.Подставлять("ВыбФирма", ВыбФирма);
		
			//Запрос.Отладка();
			ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
			//ТЗ.ВыбратьСтроку();
		КонецЕсли;
			
		СписокДокументов.УдалитьСтроки();
		
		тзДок = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тзДок);
		
		тз.ВыбратьСтроки();
		Ном=0;
		ПредДок="";
		Пока тз.ПолучитьСтроку()=1 Цикл 
			тзДок.НоваяСтрока();
			тзДок.Пометка=1;
			тзДок.Контрагент = тз.Склад;
			тзДок.Грузополучатель = тз.СкладПолучатель;
			тзДок.Док = тз.Док;
			тзДок.Колво = тз.Количество;
			тзДок.Вес = тз.Количество;
			Попытка			
				тзДок.КолвоМест = тз.КоличествоМест;
			Исключение			
			КонецПопытки;
					
			//СписокДокументов.ХозСубъект = НайтиХозСубъект(тз.Склад);
			тзДок.ХозСубъект = Отправитель_ХозСубъект;
			тзДок.Площадка = ВыпМодуль.НайтиПлощадкуПоСкладу(тзДок.Грузополучатель);
	
			Попытка
				Если тз.ДокВСД.ПометкаУдаления()=0 Тогда 
					тзДок.ВСД = тз.ДокВСД;
				КонецЕсли;
			Исключение
			КонецПопытки;
			
			тзДок.инфо = 35;
	
		КонецЦикла; 
		    
		РаскраситьСписокДокументов( тзДок);
		ОбновитьИнф();
	Исключение
		Сообщить("Не удалось выполнить запрос по документам. Проверьте параметры
		|"+ ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

//*******************************************
Процедура ЗаполнитьСписокДокументов_Реализации()  

	Попытка
		
		Если ВыпМодуль.ЭтоSQL=1 Тогда 	
			RS = СоздатьОбъект("ODBCRecordset");
			RS.УстБД1С();     
			
			ТекстЗапроса = "
			|SELECT
			|    Жур.IDDoc as [Док $Документ],
			|    Жур.IDDocDef as Док_вид,
			|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_исходящий],
			|	Жур.DocNo as [НомерДок],
			|	$ДокР."+НазваниеРеквизитаГрузополучатель+" as [Клиент $Справочник.Контрагенты],
			|	SUM($ДокСтроки.Количество) [Количество],
			|	SUM($ДокСтроки."+НазваниеРеквизитаКоличествоМест+") [КоличествоМест],
			|	СпрЗн.descr as Свво
			|FROM
			|    _1SJourn Жур
			|INNER JOIN 
			|	$ДокументСтроки.Реализация as ДокСтроки 
			|		ON Жур.IDDoc = ДокСтроки.IDDoc
			|LEFT JOIN 
			|	$Справочник.СвойстваНоменклатуры as СпрСв 
			|		ON СпрСв.ParentExt = $ДокСтроки.Номенклатура
			|			 and $СпрСв.ВидСвойства = :ВыбВидСвойств 		
			|LEFT JOIN 
			|	$Справочник.ЗначенияСвойств as СпрЗн 
			|		ON СпрЗн.ID = $СпрСв.ЗначениеСвойства 
			|			and  СпрЗн.ParentExt = :ВыбВидСвойств 
			|INNER JOIN 
			|	$Документ.Реализация as ДокР 
			|		ON Жур.IDDoc = ДокР.IDDoc
			|Left join 
			|	$Документ.ВСД_исходящий as ДокВСД
			|	ON SUBSTRING($ДокВСД.ДокОснование, 5, 8) = Жур.IDDoc
		//	|		AND $ДокВСД.Статус = 'COMPLETED'
		//	|	AND $ДокВСД.СвойствоНоменклатурыЗначение = :ВыбТипПродукции
			|	%УсловиеВСДПоСвойствуТовара%
			|
			|WHERE
			|    Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = $ВидДокумента.Реализация
			|	and Жур.Closed & 1 = 1
			|	%УсловиеПоГрузополучателю%
			|	%УсловиеПоСвойствуТовара%
			|	%УсловиеПоФирме%
			|	%УсловиеПоФилиалу%
			|
			|GROUP BY
			|	Жур.IDDoc,
			|	Жур.IDDocDef,
			|	Жур.DocNo,
			|	$ДокР."+НазваниеРеквизитаГрузополучатель+",
			|	СпрЗн.descr,
			|	ДокВСД.IDDoc
			|
			|order by Жур.DocNo
			|";
			
			УсловиеПоСвойствуТовара="";
			Если ПустоеЗначение(ВыбТипПродукции) = 0 Тогда		
				УсловиеПоСвойствуТовара = "and СпрЗн.ID = :ВыбТипПродукции 
				//| AND $ДокВСД.СвойствоНоменклатурыЗначение = :ВыбТипПродукции
				|";
				УсловиеВСДПоСвойствуТовара = "
				| AND $ДокВСД.СвойствоНоменклатурыЗначение = :ВыбТипПродукции
				|";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСвойствуТовара%", УсловиеПоСвойствуТовара);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеВСДПоСвойствуТовара%", УсловиеВСДПоСвойствуТовара);
			
			УсловиеПоГрузополучателю = "";
			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
				УсловиеПоГрузополучателю = " and $ДокР."+НазваниеРеквизитаГрузополучатель+" IN (SELECT Val FROM #ГруппаК) ";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
			
			//условие по фирме
			УсловиеПоФирме="";
			Если ПустоеЗначение(ВыбФирма) = 0 Тогда		
				УсловиеПоФирме = " and Жур.$ОбщийРеквизит.Фирма = :ВыбФирма";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);
	
			//условие по филиалу
			Если ПустоеЗначение(глПользователь.Филиал) = 0 Тогда		
				УсловиеПоФилиалу = " and Жур.$ОбщийРеквизит.Филиал = :ВыбФилиал ";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФилиалу%", УсловиеПоФилиалу);
	
			
			RS.УложитьСписокОбъектов(ВыбКонтрагент, "#ГруппаК","Контрагенты");
			RS.УстановитьТекстовыйПараметр("ВыбВидСвойств", ВСД_Продукция_Свойство);    
			RS.УстановитьТекстовыйПараметр("ВыбТипПродукции", ВыбТипПродукции);    
			RS.УстановитьТекстовыйПараметр("НачДата", НачДата);
			RS.УстановитьТекстовыйПараметр("КонДата", КонДата);
			RS.УстановитьТекстовыйПараметр("ВыбФилиал", глПользователь.Филиал);
			RS.УстановитьТекстовыйПараметр("ВыбФирма", ВыбФирма);
			        
			//RS.Отладка(1);
			ТЗ = RS.ВыполнитьИнструкцию(ТекстЗапроса);
			//ТЗ.ВыбратьСтроку();
		  	
		Иначе	
				
			Запрос = ВыпМодуль.базаДанных.НовыйЗапрос();
		
			ТекстЗапроса = "
			|SELECT
			|    Жур.IDDoc as [Док :Документ],
			|    Жур.IDDocDef as Док_вид,
			|	Жур.DocNo as [НомерДок],
			|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_исходящий],
			|	ДокР."+НазваниеРеквизитаГрузополучатель+" as [Клиент :Справочник.Контрагенты],
			|	SUM(ДокСтроки.Количество) [Количество],
			|	SUM(ДокСтроки."+НазваниеРеквизитаКоличествоМест+") [КоличествоМест],
			|	СпрЗн.descr as Свво
			|FROM
			|    Журнал Жур
			|INNER JOIN 
			|	[ДокументСтроки.Реализация] as ДокСтроки 
			|		ON Жур.IDDoc = ДокСтроки.IDDoc
			|LEFT JOIN 
			|	[Справочник.СвойстваНоменклатуры] as СпрСв 
			|		ON СпрСв.ParentExt = ДокСтроки.Номенклатура
			|			 and СпрСв.ВидСвойства = :ВыбВидСвойств 		
			|LEFT JOIN 
			|	[Справочник.ЗначенияСвойств] as СпрЗн 
			|		ON СпрЗн.ID = СпрСв.ЗначениеСвойства 
			|			and  СпрЗн.ParentExt = :ВыбВидСвойств 
			|INNER JOIN 
			|	[Документ.Реализация] as ДокР 
			|		ON Жур.IDDoc = ДокР.IDDoc
			|Left join 
			|	[Документ.ВСД_исходящий] as ДокВСД
			|	ON SUBSTR(ДокВСД.ДокОснование, 5, 8) = Жур.IDDoc
			//|		AND ДокВСД.Статус = 'COMPLETED'	
			//|	AND ДокВСД.СвойствоНоменклатурыЗначение = :ВыбТипПродукции
			|	%УсловиеВСДПоСвойствуТовара%
			|
			|WHERE
			|    Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = :ВидДокумента.Реализация
			|	and Жур.Closed & 1 = 1
			|	%УсловиеПоГрузополучателю%
			|	%УсловиеПоСвойствуТовара%
			|	%УсловиеПоФирме%
			|
			|GROUP BY
			|	Жур.IDDoc,
			|	Жур.IDDocDef,
			|	Жур.DocNo,
			|	ДокР."+НазваниеРеквизитаГрузополучатель+",
			|	СпрЗн.descr,
			|	ДокВСД.IDDoc
			|
			|order by Жур.DocNo
			|";
		
			УсловиеПоГрузополучателю = "";
			УсловиеПоСвойствуТовара="";
			Если ПустоеЗначение(ВыбТипПродукции) = 0 Тогда		
				УсловиеПоСвойствуТовара = "and СпрЗн.ID = :ВыбТипПродукции";
				УсловиеВСДПоСвойствуТовара = "
				| AND ДокВСД.СвойствоНоменклатурыЗначение = :ВыбТипПродукции
				|";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСвойствуТовара%", УсловиеПоСвойствуТовара);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеВСДПоСвойствуТовара%", УсловиеВСДПоСвойствуТовара);
	
			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
				УсловиеПоГрузополучателю = " and ДокР."+НазваниеРеквизитаГрузополучатель+" IN (SELECT Val FROM ГруппаК) ";
				ВыпМодуль.базаДанных.УложитьОбъекты(ВыбКонтрагент, "ГруппаК",, "Контрагенты");
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
	
			//условие по фирме
			УсловиеПоФирме="";
			Если ПустоеЗначение(ВыбФирма) = 0 Тогда		
				УсловиеПоФирме = " and Жур.Фирма = :ВыбФирма";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);
			        
			//Запрос.Подставлять("ВыбКлиент", ВыбКлиент);
			Запрос.Подставлять("ВыбВидСвойств", ВСД_Продукция_Свойство);    
			Запрос.Подставлять("ВыбТипПродукции", ВыбТипПродукции);    
			Запрос.Подставлять("НачДата", НачДата);
			Запрос.Подставлять("КонДата", КонДата);
			Запрос.Подставлять("ВыбФирма", ВыбФирма);
		
			//Запрос.Отладка();
			ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
			//ТЗ.ВыбратьСтроку();
		КонецЕсли;
			
		СписокДокументов.УдалитьСтроки();
		
		тзДок = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тзДок);
		
		тз.ВыбратьСтроки();
		Ном=0;
		ПредДок="";
		Пока тз.ПолучитьСтроку()=1 Цикл 
			тзДок.НоваяСтрока();
			тзДок.Пометка=1;
			тзДок.Контрагент = тз.Клиент;
			тзДок.Грузополучатель = тз.Док.ПолучитьАтрибут(НазваниеРеквизитаГрузополучатель);
			тзДок.Док = тз.Док;
			тзДок.Колво = тз.Количество;
			тзДок.Вес = тз.Количество;
			тзДок.Свво = тз.Свво;
			
			Если ПустоеЗначение(тзДок.Свво)=1 Тогда 
				Сообщить("ВНИМАНИЕ! "+тзДок.Контрагент+" в документе "+тзДок.Док+" не заполнены свойства в количестве "+тзДок.Вес,"!");
			КонецЕсли;
			
			Попытка			
				тзДок.КолвоМест = тз.КоличествоМест;
			Исключение			
			КонецПопытки;
					
			тзДок.ХозСубъект = ВыпМодуль.НайтиХозСубъект(тз.Клиент);
			Если ПустоеЗначение(тзДок.ХозСубъект)=0 Тогда
				тзДок.Площадка = ВыпМодуль.НайтиПлощадкуПоКонтрагенту( тзДок.Грузополучатель);
			КонецЕсли;
	
			Попытка
				Если тз.ДокВСД.ПометкаУдаления()=0 Тогда 
					тзДок.ВСД = тз.ДокВСД;
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		КонецЦикла; 		      		
		
		РаскраситьСписокДокументов( тзДок );
		ОбновитьИнф();
	
	Исключение
		Сообщить("Не удалось выполнить запрос по документам. Проверьте параметры
		|"+ ОписаниеОшибки());
	КонецПопытки;		
КонецПроцедуры

Процедура СоздатьВСД()

	//Сохраним привязку партии к свойству 
	Если ПустоеЗначение(ВыбТипПродукции)=0 Тогда 
		Спр = СоздатьОбъект("Справочник.ВСД_Партия");
		Спр.НайтиЭлемент(Партия);	
		Спр.СвойствоНоменклатурыЗначение = ВыбТипПродукции;
		Спр.Записать();                              
	КонецЕсли;

	
	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");			
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Партия)=1 Тогда
		Сообщить("Не выбран параметр Партия ","!");			
		Возврат;
	КонецЕсли;			
	//Если ПустоеЗначение(ТермическиеУсловияПеревозки)=1 Тогда
	//	Сообщить("Не выбран ТермическиеУсловияПеревозки ","!");			
	//	Возврат;
	//КонецЕсли;			
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
				// в накладной несколько видов Продукции - проверяем 
				// если ВСД [Completed] для Продукциия - тогда пропускаем
				Если ( СписокДокументов.ВСД.Партия = Партия ) Тогда 
					Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		

		Сообщить("создание ВСД для "+СписокДокументов.Док);
		
		Если СписокДокументов.Контрагент.Вид()="Склады" Тогда 
			ХС = Отправитель_ХозСубъект;
		Иначе
			ХС = ВыпМодуль.НайтиХозСубъект( СписокДокументов.Контрагент );
		КонецЕсли;
		Если СписокДокументов.Грузополучатель.Вид()="Склады" Тогда
			Площадка = ВыпМодуль.НайтиПлощадкуПоСкладу(СписокДокументов.Грузополучатель);
		Иначе
			Площадка = ВыпМодуль.НайтиПлощадкуПоКонтрагенту( СписокДокументов.Грузополучатель );
		КонецЕсли;
		
		// создание кастомного ВСД
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_исходящий.ert")=1 Тогда
			
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Док,				"ДокОснование");    
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Контрагент,		"Контрагент");    
			СписокПараметров.ДобавитьЗначение(СписокДокументов.Грузополучатель,	"Грузополучатель");    
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,			"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,				"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение(Перевозчик_ХозСубъект,			"Перевозчик_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Партия,							"Партия");    
			//СписокПараметров.ДобавитьЗначение(ТермическиеУсловияПеревозки,		"ТермическиеУсловияПеревозки");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,				"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( ХС,				"ХС");    
			СписокПараметров.ДобавитьЗначение( Площадка,		"Площадка");    
			СписокПараметров.ДобавитьЗначение( СписокДокументов.Колво,			"Колво");    
			СписокПараметров.ДобавитьЗначение( СписокДокументов.КолвоМест,		"КолвоМест");    
			СписокПараметров.ДобавитьЗначение( ВыбТипПродукции,					"ВыбТипПродукции");    
			СписокПараметров.ДобавитьЗначение( ВСД_Продукция_Свойство,			"ВыбВидСвойств");
			
			СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,					"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,					"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,				"ВСД_ОсобыеОтметки");    
			
				
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_исходящий.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
		Иначе

			//Если ПустоеЗначение(СписокДокументов.Док.Маршрут)=1 Тогда
			//	Сообщить("Не указан маршрут в документе "+СписокДокументов.Док);
			//	Продолжить;
			//КонецЕсли;
	
			ДокВСД = СоздатьОбъект("Документ.ВСД_исходящий");
			ДокВСД.Новый();
			//ДокВСД.НомерДок = ;
			ДокВСД.ДокОснование = СписокДокументов.Док;
			
			//ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
			ДокВСД.ДатаДок = НачДата;
			
			ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
			
			ДокВСД.Получатель_ХозСубъект = ХС;		
			ДокВСД.Получатель_Площадка = Площадка;					
			ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
	
			ДокВСД.Производитель_Площадка = Партия.Производитель_Площадка;
			ДокВСД.Количество = СписокДокументов.Колво;
			ДокВСД.КоличествоКор = СписокДокументов.КолвоМест;
			
			ТТН = СписокДокументов.Док.Маршрут;		
			//ТТН = СписокДокументов.Док.НомерМаршрута;	
			Попытка
				ДокВСД.номерАвто = ТТН.Авто.НомернойЗнак;
			Исключение
				ДокВСД.номерАвто = "000";
			КонецПопытки;
			Если ПустоеЗначение(ДокВСД.номерАвто)=1 Тогда 
				ДокВСД.номерАвто="000";
			КонецЕсли;
			
			
			ДокВСД.ТтнСерия = ""; //ТТН.Серия;
			ДокВСД.ТтнНомер = СписокДокументов.Док.НомерДок;
			ДокВСД.ТтнДата = СписокДокументов.Док.ДатаДок;
						
			ДокВСД.Партия = Партия;
			ДокВСД.Продукция = Партия.Продукция;
			ДокВСД.ВидПродукции = Партия.ВидПродукции;
			ДокВСД.НаименованиеПродукции = Партия.НаименованиеПродукции;
			Попытка				
				ДокВСД.Автор = глПользователь;
			Исключение
			КонецПопытки;

			Попытка				
				ДокВСД.Филиал = глПользователь.Филиал;
			Исключение
			КонецПопытки;
			ДокВСД.ФормаВСД = 1;
			ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
			ДокВСД.ФормаУпаковки = ДокВСД.Партия.ФормаУпаковки;
			//ДокВСД.ТермическоеСостояние = ТермическиеУсловияПеревозки;
			
			ДокВСД.Продукция_Элемент 	= ДокВСД.Партия.Продукция_Элемент;
			ДокВСД.ТермическоеСостояние = ДокВСД.Продукция_Элемент.ТермическиеУсловияПеревозки;
			
			ДокВСД.Экспертиза 		= ВСД_Экспертиза;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
			
			ДокВСД.СвойствоНоменклатурыЗначение = ВыбТипПродукции;
			
			//Если ПустоеЗначение( СокрЛП(ДокВСД.номерАвто) )=1 Тогда
			//	Сообщить("В документе "+ДокВСД.ТтнНомер+"не указан № автомобиля 
			//	|ВСД не сформирован");
			//	Продолжить;
			//КонецЕсли;
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		СписокДокументов.ВСД = ДокументСсылка;
		
		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");		
	КонецЦикла;
	
	//Партия = "";

	тзДок = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тзДок);
	
	РаскраситьСписокДокументов(тзДок);	
КонецПроцедуры

Процедура ПроверитьПартию()
	//Если Партия.ТермическоеСостояние=0 Тогда 
	//	Предупреждение("Не указано термическое состояние партии");
	//	Партия = "";
	//	Возврат;
	//КонецЕсли;
	Если ПустоеЗначение(Партия)=1 Тогда 
		ПартияИнфо = "<<Партия не выбрана>>";
	Иначе
		ПартияИнфо = "Партия: "+Партия.Количество+" кг - "+СокрЛП(Партия.НаименованиеПродукции);
	КонецЕсли;
	
	ОбновитьИнф();
КонецПроцедуры	

//============================================================
Процедура УбратьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=1;		
	КонецЦикла;	 
	
	ОбновитьИнф();
КонецПроцедуры
//============================================================
Процедура ПометитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.инфо = 36 Тогда 
			СписокДокументов.Пометка=2;		
		КонецЕсли;
	КонецЦикла;	      

	ОбновитьИнф();	
КонецПроцедуры


//******************************************************************************
 // предопределенная процедура
 //
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
 	ТекСтрока = СписокДокументов.ТекущаяСтрока();
 	
	СписокДокументов.УдалитьСтроки();
 	
 	Если НомерЗакладки=1 Тогда
		Форма.ИспользоватьСлой("Основной, Реализации");
		ЗаполнитьСписокДокументов_Реализации();
	ИначеЕсли НомерЗакладки=2 Тогда
		Форма.ИспользоватьСлой("Основной, Перемещения");
		ЗаполнитьСписокДокументов_ПеремещенийТМЦ();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;     	
	
КонецПроцедуры 

//*******************************************
Процедура ПриОткрытии()
	ИмяФайла="";
	КаталогОбработки="";
	
	РасположениеФайла(КаталогОбработки, ИмяФайла);
	
	ГлобМодуль=СоздатьОбъект("Текст");
	//ГлобМодуль.Открыть(КаталогИБ()+ПутьГлобальныйМодуль);
	ГлобМодуль.Открыть(КаталогОбработки+ПутьГлобальныйМодуль);
    Н=1; ТекстМодуля="";
	Для Н=1 по ГлобМодуль.КоличествоСтрок() Цикл
		Стр=ГлобМодуль.ПолучитьСтроку(Н); 
		ТекстМодуля=ТекстМодуля+Стр+РазделительСтрок;
	КонецЦикла;
	
	ВыпМодуль = СоздатьОбъект("ВыполняемыйМодуль");
	ВыпМодуль.УстановитьМодуль(ТекстМодуля);
	ВыпМодуль.НазначитьКонтекст(Контекст);
	ВыпМодуль.КомпилироватьМодуль();
	ВыпМодуль.ВыполнитьМодуль();	
	ВыпМодуль.ПриОткрытии();
		
	//ВерсияСистемы = ВосстановитьЗначение("ВСД_ВерсияСистемы");	
	//ПриСменеВерсииСистемы();		
		
	ЗаголовокНадпись();   
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Реализации");
	Форма.Закладки.ДобавитьЗначение("Перемещения");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, Реализации");
	
	Партия = "";
		
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

Процедура ОтправитьВСД()
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("ОтправитьВсдИсходящие", "Команда");
	СписокПараметров.ДобавитьЗначение(НачДата, "НачДата");
	СписокПараметров.ДобавитьЗначение(КонДата, "КонДата");


	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) и (СписокДокументов.Пометка = 2) Тогда 
			СписокВСД.ДобавитьЗначение(СписокДокументов.ВСД);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.ДобавитьЗначение(СписокВСД, "СписокВСД");

	ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+ОбработкаОбмена);
	
	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

КонецПроцедуры

Процедура ПолучитьПартии()
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("ПолучитьПартии", "Команда");
	ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+ОбработкаОбмена);
	
	ЗаписьЖурналаРегистрации("Меркурий получение партий ");
	
КонецПроцедуры

Процедура Реестр()
	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		
		Таб.ВывестиСекцию("Строка");		
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");	
КонецПроцедуры

Процедура ЗагрузитьПлощадки()
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("ЗагрузитьПлощадки", "Команда");
	СписокПараметров.ДобавитьЗначение(СписокДокументов.ХозСубъект, "ХозСубъект");

	//ЗаписьЖурналаРегистрации("Меркурий ");	
	ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+ОбработкаОбмена);
	
	ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"");
КонецПроцедуры

процедура выбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"");
	конецесли;
конецпроцедуры

Процедура БыстрыйВыборПартии()
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = "
	|эл = Справочник.ВСД_Партия.ТекущийЭлемент;
	|Свво = Справочник.ВСД_Партия.СвойствоНоменклатурыЗначение;
	|Кол = Справочник.ВСД_Партия.Количество;
	|Код = Справочник.ВСД_Партия.Код;
	|
	|Условие ((Свво = ВыбТипПродукции) ); //или (Свво = '')
	|Функция Колво = Сумма(Кол);
	|
	|группировка эл Без Групп Упорядочить по Эл.Код;
	|Группировка Свво;
	|";
	тз = СоздатьОбъект("ТаблицаЗначений");
	тз.НоваяКолонка("Партия",,,,,30);
	тз.НоваяКолонка("Свво",,,,,30);
	тз.НоваяКолонка("Колво",,,,,30);
	Запрос.Выполнить(ТекстЗапроса);
	
	Пока Запрос.Группировка(1,-1)=1 Цикл
		тз.НоваяСтрока();
		тз.Партия = Запрос.эл;
		тз.Колво = Запрос.Колво;
		Пока Запрос.Группировка(2)=1 Цикл
			тз.Свво = Запрос.Свво;
		КонецЦикла;
	КонецЦикла;
	//Запрос.Выгрузить(тз);
	
	стр=0;
	Если тз.ВыбратьСтроку(стр,"Выбор Партии по свойству ["+ВыбТипПродукции+"]",30)=1 Тогда
		Партия = тз.ПолучитьЗначение(стр,"Партия");
	КонецЕсли;
	
	//СпрПартии = СоздатьОбъект("Справочник.ВСД_Партия");
	//СпрПартии.Выбрать("Партия ВСД","ФормаСписка");
КонецПроцедуры

Процедура ПриИзменении_ВыбТипПродукции()
	Если Партия.СвойствоНоменклатурыЗначение <> ВыбТипПродукции Тогда
		Партия="";
	КонецЕсли;
	БыстрыйВыборПартии();
	
	ПроверитьПартию();
	ПриВыбореЗакладки( Форма.Закладки.ТекущаяСтрока(), "");
КонецПроцедуры

Процедура ПриИзменении_Выб_Продукция_Элемент()
	ВыбТипПродукции = Выб_Продукция_Элемент.СвойствоНоменклатурыЗначение;
	ТермическиеУсловияПеревозки = Выб_Продукция_Элемент.ТермическиеУсловияПеревозки;
	ПриИзменении_ВыбТипПродукции();
КонецПроцедуры

НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов.НоваяКолонка("сЦвет",,,,,1,);
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("инфо",,,,,3,);
СписокДокументов.НоваяКолонка("Грузополучатель",,,,,70,);
СписокДокументов.НоваяКолонка("Площадка",,,,,30,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Колво",,,,,10,);
СписокДокументов.НоваяКолонка("Вес",,,,,10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,,10,);

СписокДокументов.НоваяКолонка("Свво",,,,,15,);
СписокДокументов.НоваяКолонка("Док",,,,,30,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,10,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,10,);

СписокДокументов.ВыводитьПиктограммы("Пометка");
СписокДокументов.ВыводитьПиктограммы("Инфо");

ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

//НазваниеРеквизитаГрузополучатель = "Контрагент";
ПартияИнфо = "<<выберите партию>>";

//НазваниеРеквизитаКоличествоМест = "КоличествоМест";

ЗагрузитьВнешнююКомпоненту("1cpp.dll");
ЗагрузитьВнешнююКомпоненту("formex.dll");

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();

ПутьГлобальныйМодуль = "Меркурий_ГлобальныйМодуль.txt"; 