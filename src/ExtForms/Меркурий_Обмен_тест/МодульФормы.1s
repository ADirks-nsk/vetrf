Перем ГМ;
Перем ВыбРеквизит; //для выбора площадки


//======= ФУНКЦИИ ИНТЕРФЕЙСА ==============

 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
 	Если ЗначениеЗакладки="ВСД" Тогда
		Форма.ИспользоватьСлой("Основной,ВСД");
	ИначеЕсли ЗначениеЗакладки="Справочники" Тогда
		Форма.ИспользоватьСлой("Основной, Справочники");
	ИначеЕсли ЗначениеЗакладки="ХозСубъекты" Тогда
		Форма.ИспользоватьСлой("Основной, ХозСубъекты");
	ИначеЕсли ЗначениеЗакладки="Площадки" Тогда
		Форма.ИспользоватьСлой("Основной, Площадки");
	ИначеЕсли ЗначениеЗакладки="Партии" Тогда
		Форма.ИспользоватьСлой("Основной, Партии");
	ИначеЕсли ЗначениеЗакладки="Параметры" Тогда
		Форма.ИспользоватьСлой("Основной, Параметры");
	КонецЕсли;        
	
КонецПроцедуры 

Процедура ОткрытьПлощадкиПоХС(ВыбХС)
						
	тз = ГМ.ВыбратьВсеПлощадкиХС(ВыбХС);
	
	СписокОтбора = СоздатьОбъект("СписокЗначений");
	
	Тз.ВыбратьСтроки();
	Пока ТЗ.ПолучитьСТроку()=1 Цикл
		СписокОтбора.ДобавитьЗначение(тз.id);
	КонецЦикла;			
			
	ОткрытьПодбор("Справочник.ВСД_Площадка", ,СписокОтбора);

КонецПроцедуры

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если ВыбРеквизит="Отправитель_Площадка"  Тогда 
		
		Отправитель_Площадка = Элемент;
		//Если ПустоеЗначение(GUID_ОтправительПлощадка)=1 Тогда 
		//	GUID_ОтправительПлощадка = Элемент.GUID;
		//Иначе
		//	Если НЕ(СокрЛП(GUID_ОтправительПлощадка) = СокрЛП(Элемент.GUID)) Тогда 
		//		Сообщить("Ошибка в GUID_ОтправительПлощадка, должно быть "+Элемент.GUID,"!");
		//	Иначе
		//		Сообщить("GUID_ОтправительПлощадка - правильно "+Элемент.Адрес,"i");
		//	КонецЕсли;
		//КонецЕсли;
		
		КонтФормы.Форма.Закрыть();
		ВыбРеквизит="";
	ИначеЕсли Элемент.Вид()="ВСД_Площадка" Тогда
		ВыбПлощадка = Элемент;
		КонтФормы.Форма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры


//=========================== Площадки =================================

Процедура СоздатьНовуюПлощадку(ВыбХС)
	Если ПустоеЗначение(ВыбХС)=1 Тогда
		Предупреждение("Выберите Хоз субъект");
	КонецЕсли;
	СпрПл = СоздатьОбъект("Справочник.ВСД_Площадка");
	СпрПл.Новый();
	//СпрПл.Код = ;
	СпрПл.Наименование = ВыбХС.Контрагент.Наименование;
	СпрПл.Контрагент = ВыбХС.Контрагент;
	//СпрПл.GUID = ;
	//СпрПл.UUID = ;
	СпрПл.Адрес = ВыбХС.Контрагент.ЮрФизЛицо.ФактАдрес;;
	СпрПл.GuidХозСубъекта = ВыбХС.GUID;
	СпрПл.Записать();
	Сообщить("Создан ВСД_Площадка "+СпрПл.ТекущийЭлемент());
	
	ВыбПлощадка = СпрПл.ТекущийЭлемент();
КонецПроцедуры

Процедура ПолучитьОтветСоздатьСвязьХозсубъектПлощадка( applicationID )
	
	Если ПустоеЗначение(applicationID)=1 Тогда
		Сообщить("Не указано applicationID");
		Возврат;
	КонецЕсли;
	
	Сообщить(" Запрос CreateActivityLocationsOperationResult [ "+СокрЛП(applicationID)+" ]","i");		
	Результат = ГМ.Компонента.CreateActivityLocationsOperationResult( СокрЛП(applicationID));
	//Отладка();
	
	Если Результат="COMPLETED" Тогда			
	    objDom=СоздатьОбъект("MSXML2.DOMDocument");
	    objDom.load(ГМ.Компонента.LogFilename);    	        
        businessEntity=objDom.selectSingleNode("//merc:businessEntity") ;									
		guid = businessEntity.selectSingleNode("base:guid").text;
		uuid = businessEntity.selectSingleNode("base:uuid").text;			
		active = businessEntity.selectSingleNode("base:active").text;		
		enterprise = businessEntity.selectSingleNode("ent:activityLocation").selectSingleNode("ent:enterprise").selectSingleNode("base:guid").text;		
		Сообщить("Успешно установлена связь ВСД_Площадка ["+enterprise+"] ВСД_ХозСубъект ["+guid+"]","i");
		//рез = Компонента.ResultString;				
	КонецЕсли;	
	
	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );
КонецПроцедуры

Процедура СоздатьСвязьХозсубъектПлощадка(Площадка)
	Если ПустоеЗначение(Площадка.GuidХозСубъекта)=1 Тогда 
		Сообщить("не указан GUID хоз субъекта");
		Возврат;
	КонецЕсли;
		
	Если ПустоеЗначение(Площадка.GUID)=1 Тогда 
		Сообщить("Выб площадке не указан GUID");
		Возврат;
	КонецЕсли;
	
	Сообщить(" Запрос CreateActivityLocationsOperation [ "+СокрЛП(Площадка)+" ]","i");		
	Результат = ГМ.Компонента.CreateActivityLocationsOperation(
			СокрЛП(Площадка.GuidХозСубъекта),
			СокрЛП(Площадка.GUID) 
	);
	
	//Отладка();	
	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );
	
	Если Результат="ACCEPTED" Тогда
		ГМ.Пауза(ПаузаСек);
		
		ПолучитьОтветСоздатьСвязьХозсубъектПлощадка( ГМ.Компонента.ApplicationId)
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьОтветПлощадка( applicationID , Площадка)
	
	Если ПустоеЗначение(applicationID)=1 Тогда
		Сообщить("Не указано applicationID");
		Возврат;
	КонецЕсли;
	
	Сообщить(" Запрос CreateEnterpriseResult [ "+СокрЛП(applicationID)+" ]","i");		
	Результат = ГМ.Компонента.CreateEnterpriseResult( СокрЛП(applicationID));

	//Отладка();
	
	Если Результат="COMPLETED" Тогда
			
	   Сообщить("Загрузка XML-файла: "+ГМ.Компонента.LogFilename);    
	    
	    objDom=СоздатьОбъект("MSXML2.DOMDocument");
	    objDom.load(ГМ.Компонента.LogFilename);        
    
        enterprise=objDom.selectSingleNode("//merc:enterprise") ;
									
		guid = enterprise.selectSingleNode("base:guid").text;
		uuid = enterprise.selectSingleNode("base:uuid").text;
		name = enterprise.selectSingleNode("ent:name").text;
		active = enterprise.selectSingleNode("base:active").text;
					
		если ПустоеЗначение(GUID)=0 Тогда			
			Спр = СоздатьОбъект("Справочник.ВСД_Площадка");
			Спр.НайтиЭлемент(Площадка);
			спр.GUID = GUID;
			спр.uuid = uuid;
			спр.Записать();
			Сообщить("Успешно записан ВСД_Площадка ["+Спр.ТекущийЭлемент()+"] GUID = "+GUID,"i");
			
			Площадка = Спр.ТекущийЭлемент();
		Иначе
			Сообщить("Пустой GUID Площадки");
		КонецЕсли;
			
		ГМ.УдалитьXML( ГМ.Компонента.LogFilename );
		ГМ.Пауза(ПаузаСек);
		
		СоздатьСвязьХозсубъектПлощадка(Площадка);
		
	КонецЕсли;	

		
КонецПроцедуры

Процедура СоздатьПлощадку(Площадка)
	
	Если ПустоеЗначение(Площадка.GuidХозСубъекта)=1 Тогда
		Сообщить("Не указан Guid ХозСубъекта");
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Страна.GUID)=1 Тогда
		Сообщить("Не указан Страна.GUID");
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Регион.GUID)=1 Тогда
		Сообщить("Не указан Регион.GUID");
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Город.GUID)=1 Тогда
		Сообщить("Не указан Город.GUID");
		Возврат;
	КонецЕсли;

	
	Адрес = Площадка.Контрагент.ЮрФизЛицо.ФактАдрес;
	
	Сообщить(" Запрос CreateEnterprise [ "+СокрЛП(Площадка)+" ]","i");		
	Результат = ГМ.Компонента.CreateEnterprise(
			СокрЛП(Площадка.Контрагент.Наименование),
			Адрес, 
	        СокрЛП(Страна.GUID),
            СокрЛП(Регион.GUID),
            СокрЛП(Город.GUID), 
			СокрЛП(Площадка.GuidХозСубъекта)
	);	
	//Отладка();	
		
	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );
	
	Если Результат="ACCEPTED" Тогда
		Состояние("Пауза "+ПаузаСек+" сек");
		ГМ.Пауза(ПаузаСек);
		
		ПолучитьОтветПлощадка( ГМ.Компонента.ApplicationId, Площадка )
		
	КонецЕсли;
	
КонецПроцедуры

//=========================== ХозСубъекты =================================

Процедура ХС_Создать_Ответ( applicationID, ХС)
	
	Если ПустоеЗначение(applicationID)=1 Тогда
		Сообщить("Не указано applicationID");
		Возврат;
	КонецЕсли;
	
	Сообщить(" Запрос CreateBusinessEntityResult [ "+СокрЛП(applicationID)+" ]","i");		
	Результат = ГМ.Компонента.CreateBusinessEntityResult( СокрЛП(applicationID));
	//Отладка();	
	
    Сообщить("Загрузка XML-файла: "+ГМ.Компонента.LogFilename);        
    objDom=СоздатьОбъект("MSXML2.DOMDocument");
    objDom.load(ГМ.Компонента.LogFilename);    
    
    enterprise=objDom.selectSingleNode("//merc:businessEntity") ;
	guid = enterprise.selectSingleNode("base:guid").text;
	uuid = enterprise.selectSingleNode("base:uuid").text;
	active = enterprise.selectSingleNode("base:active").text;
						
	если ПустоеЗначение(GUID)=0 Тогда			
		Спр = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
		Спр.НайтиЭлемент(ХС);
		спр.GUID = GUID;
		спр.Записать();
		Сообщить("Успешно записан ВСД_ХозСубъект ["+Спр.ТекущийЭлемент()+"] GUID = "+GUID,"i");
	Иначе
		Сообщить("Пустой GUID ХозСубъекта");
	КонецЕсли;

	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );
КонецПроцедуры

Процедура ХС_Создать(ХС)

	ИНН = ГМ.ПолучитьИНН(ХС.Контрагент);	
	КПП = ГМ.ПолучитьКПП(ХС.Контрагент);	
	//ИНН = СокрЛП(ХС.Контрагент.ИНН);
	//КПП = СокрЛП(ХС.Контрагент.КПП);
	ОГРН = ГМ.ПолучитьОГРН(ХС);

	Если ПустоеЗначение(ИНН)=1 Тогда 
		Сообщить("Неправильно указан ИНН","!");
		Возврат;
	КонецЕсли;	
	// для ИП - пустое КПП
	//Если ПустоеЗначение(КПП)=1 Тогда 
	//	Сообщить("Неправильно указан КПП","!");
	//	Возврат;
	//КонецЕсли;
	Если ПустоеЗначение(ОГРН)=1 Тогда 
		Сообщить("Не указан ОГРН","!");
		Возврат;
	КонецЕсли;
	
	Адрес = ХС.Контрагент.ЮрФизЛицо.ЮрАдрес;
	
	Сообщить(" Запрос CreateBusinessEntity [ "+ИНН+" ]","i");		
	Результат = ГМ.Компонента.CreateBusinessEntity(
			хс.Контрагент.Наименование, 
			хс.Контрагент.ЮрФизЛицо.ПолнНаименование, 
			ИНН, 
			КПП, 
			ОГРН, 
	        СокрЛП(Страна.GUID), 
            СокрЛП(Регион.GUID), 
            СокрЛП(Город.GUID), 
			Адрес
	);
	
	//Отладка();	
	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );
	
	Если Результат="ACCEPTED" Тогда
		Состояние("Пауза "+ПаузаСек+" сек");
		ГМ.Пауза(ПаузаСек);
		
		ХС_Создать_Ответ( ГМ.Компонента.ApplicationId, ХС )
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СинхронизацияСпрХС()
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = "
	|id = Справочник.ВСД_ХозСубъект.ТекущийЭлемент;
	|GuidХозСубъекта = Справочник.ВСД_ХозСубъект.Guid;
	|Группировка id;
	|Без Итогов;
	|";

	//Если обновитьВсеХозСубъекты=0 Тогда 
  	//	ТекстЗапроса=ТекстЗапроса+"Условие (СокрЛП(GuidХозСубъекта) = '');";
  	//КонецЕсли;
  	
	Запрос.Выполнить(ТекстЗапроса);
	тз =СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(тз);
	
	Спр = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл

	  	Если обновитьВсеХозСубъекты=0 Тогда 
	  		Если ПустоеЗначение(тз.id.GUID)=0 Тогда 
	  			Продолжить;
	  		КонецЕсли;
	  	КонецЕсли;		
	  	
		ГМ.ХС_ПолучитьGuid(тз.id);
		
		Если ПустоеЗначение(тз.id.GUID)=0 Тогда
			Сообщить("Получение площадок хозСубъекта = "+тз.id);
			//ГМ.НайтиПлощадкиПоНазванию(тз.id, 0 );
			ГМ.ЗагрузитьПлощадки( тз.id );
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

//============================================================

Процедура ПриОткрытии()
	
	ИмяФайла="";
	КаталогОбработки="";
	
	РасположениеФайла(КаталогОбработки, ИмяФайла);

   //{ Глобальный модуль + Интеграционный модуль для переопределения функций, плюс несколько базовых функций
    глМеркурийИнтеграция 		= СоздатьОбъект("МеркурийИнтеграция");
    ТестовыйРежимРаботыМодуля   = глМеркурийИнтеграция.ОпределитьРежимРаботыМодуля(ИмяФайла);    	// определение режима работы модуля
    КаталогБиблиотек            = глМеркурийИнтеграция.КаталогБиблиотек();                         	// путь к хранилищу стандартных библиотек DLL
    КаталогМодуля               = глМеркурийИнтеграция.КаталогМодуля(КаталогОбработки);            	// путь к каталогу обработок модуля меркурий

    ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
    ГМ.Инициализация(КаталогМодуля, КаталогБиблиотек, ТестовыйРежимРаботыМодуля);        
    ГМ.ЗагрузитьПараметры(Контекст);

    //Переопределение функций, если они определены в модуле
    глМеркурийИнтеграция.Инициализация(ГМ);    
    //}		
		
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Партии");
	Форма.Закладки.ДобавитьЗначение("ХозСубъекты");
	Форма.Закладки.ДобавитьЗначение("ВСД");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, Партии");	
	
	//{ оставлено для совместимости с предыдущими версиями, в дальнейшем - удалим
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
		
		Команда = Парам.Получить("Команда");
		
		Если Команда="ОтправитьВсдИсходящие" Тогда
			
			НачДата = Парам.Получить("НачДата");
			КонДата = Парам.Получить("КонДата");
			Если ПустоеЗначение(НачДата)=1 Тогда
				НачДата = ТекущаяДата();
			КонецЕсли;
			Если ПустоеЗначение(КонДата)=1 Тогда 
				КонДата = ТекущаяДата();
			КонецЕсли;
			Сообщить("отправляются ВСД исходящие за период "+ПериодСтр(НачДата, КонДата));
			
			СписокВСД = Парам.Получить("СписокВСД");
			ГМ.ОтправитьВсе_ВСД_Исходящий(СписокВСД, НачДата, КонДата);
						
			СтатусВозврата(0);
			Возврат;
		ИначеЕсли Команда="ОтправитьВсдТранзакции" Тогда
			
			НачДата = Парам.Получить("НачДата");
			КонДата = Парам.Получить("КонДата");
			Если ПустоеЗначение(НачДата)=1 Тогда
				НачДата = ТекущаяДата();
			КонецЕсли;
			Если ПустоеЗначение(КонДата)=1 Тогда 
				КонДата = ТекущаяДата();
			КонецЕсли;
			Сообщить("отправляются ВСД транзакции за период "+ПериодСтр(НачДата, КонДата));
			
			СписокВСД = Парам.Получить("СписокВСД");
			ГМ.ОтправитьВсе_ВСД_Транзакция(СписокВСД, НачДата, КонДата);
						
			СтатусВозврата(0);
			Возврат;
		ИначеЕсли Команда="ОтправитьВсдПроизводство" Тогда
			
			СписокВСД = Парам.Получить("СписокВСД");
			НачДата = Парам.Получить("НачДата");
			КонДата = Парам.Получить("КонДата");
			Если ПустоеЗначение(НачДата)=1 Тогда
				НачДата = ТекущаяДата();
			КонецЕсли;
			Если ПустоеЗначение(КонДата)=1 Тогда 
				КонДата = ТекущаяДата();
			КонецЕсли;
			
			ГМ.ОтправитьВсе_ВСД_Производство(СписокВСД, НачДата, КонДата);
						
			СтатусВозврата(0);
			Возврат;
		ИначеЕсли Команда="ПолучитьПартии" Тогда
			Состояние("Меркурий: получение партий...");
			ГМ.ПолучитьПартии();
			СтатусВозврата(0);
			Возврат;
		ИначеЕсли Команда="ЗагрузитьПлощадки" Тогда
			
			выбХС = Парам.Получить("ХозСубъект");
			Сообщить("загрузка площадок "+ выбХС);
	
			ГМ.ХС_ПолучитьGuid(ВыбХС);

			Спр = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
			Спр.НайтиЭлемент(ВыбХС);
						
			ГМ.ЗагрузитьПлощадки(Спр.ТекущийЭлемент());			
						
			СтатусВозврата(0);
			Возврат;

		КонецЕсли;
	КонецЕсли;   
	//}
	
КонецПроцедуры

НачДата = ТекущаяДата();
КонДата = НачДата;

productType = 1; //мясо 

ЗагрузитьВнешнююКомпоненту("1cpp.dll");
