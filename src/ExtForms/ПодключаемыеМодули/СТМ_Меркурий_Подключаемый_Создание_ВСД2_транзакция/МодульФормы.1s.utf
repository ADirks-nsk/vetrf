// API 2.0
//ВСД2_Транзакция

Перем  ПропускатьПустыеСвойства;
Перем ГМ;
//*****************************************************************************
Функция ПолучитьЗначениеСвойства(Номенклатура, ВыбВидСвойств)
	
	СпрСвва = СоздатьОбъект("Справочник.СвойстваНоменклатуры");
	СпрСвва.ИспользоватьВладельца(Номенклатура);
	СпрСвва.ВыбратьЭлементыПоРеквизиту("ВидСвойства",ВыбВидСвойств,1,0);
	Если  СпрСвва.ПолучитьЭлемент() = 1 Тогда 
		Возврат СпрСвва.ЗначениеСвойства;
	КонецЕсли;
	
	Сообщить("Товар ["+Номенклатура+"] свойство "+ВыбВидСвойств+" не указано!","!");	
	Возврат "";
КонецФункции

Функция ПолучитьКоличествоМест(ДокОснование, ВыбТипПродукции, ВыбВидСвойств)
	Результат = 0;
	ДокОснование.ВыбратьСтроки();
	Пока ДокОснование.ПолучитьСтроку()=1 Цикл
		Если ПустоеЗначение(ВыбТипПродукции)=0 Тогда 
			ТекЗнСвойства = ПолучитьЗначениеСвойства(ДокОснование.Номенклатура, ВыбВидСвойств);

			Если ВыбТипПродукции <> ТекЗнСвойства тогда 
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Попытка			
			к = ДокОснование.Количество* ДокОснование.Коэффициент / ДокОснование.Номенклатура.ОсновнаяЕдиница.Коэффициент;
		Исключение
			к =0;
		КонецПопытки;

		Результат=Результат+к;		
	КонецЦикла;
	
	Возврат Результат;
КонецФункции


Функция СоздатьВСД(Парам)

	ДокОснование 				= Парам.Получить("ДокОснование");
	Контрагент 					= Парам.Получить("Контрагент");
	Грузополучатель 			= Парам.Получить("Грузополучатель");
	Отправитель_ХозСубъект 		= Парам.Получить("Отправитель_ХозСубъект");
	Отправитель_Площадка 		= Парам.Получить("Отправитель_Площадка");
	Перевозчик_ХозСубъект 		= Парам.Получить("Перевозчик_ХозСубъект");
	Партия 						= Парам.Получить("Партия");
	//ТермическиеУсловияПеревозки = Парам.Получить("ТермическиеУсловияПеревозки");
	ХС 							= Парам.Получить("ХС");
	Площадка 					= Парам.Получить("Площадка"); 
	Колво 						= Парам.Получить("Колво"); 
	КолвоМест 					= Парам.Получить("КолвоМест"); 
	ВыбТипПродукции 			= Парам.Получить("ВыбТипПродукции"); 
	ВыбВидСвойств 				= Парам.Получить("ВыбВидСвойств"); 
	ВСД_Экспертиза 				= Парам.Получить("ВСД_Экспертиза");    
	ВСД_Местность				= Парам.Получить("ВСД_Местность");
	ВСД_ОсобыеОтметки 			= Парам.Получить("ВСД_ОсобыеОтметки");
	СписокПартий 				= Парам.Получить("СписокПартий");    
	ГМ 				= Парам.Получить("ГМ");
    ПропускатьПустыеСвойства=1;
	
	ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
	ДокВСД.Новый();
	//ДокВСД.НомерДок = ;
	ДокВСД.ДокОснование = ДокОснование;
	ДокВСД.Фирма = ДокОснование.Фирма;
	
	Если ПустоеЗначение(ГМ) = 1 Тогда
		ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
	КонецЕсли;
	ГМ.Инициализация(ДокОснование);
	Отправитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
	Отправитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");
	Экспертиза = ГМ.СписокКонстант.Получить("ВСД_Экспертиза");
	Местность = ГМ.СписокКонстант.Получить("ВСД_Местность");
	Особыеотметки = ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки");
	//ГМ.Инициализация(Контекст);        
	//ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
	ДокВСД.ДатаДок = ДокОснование.ДатаДок;
	
	ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
	ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
	
	ДокВСД.Получатель_ХозСубъект = ХС;		
	ДокВСД.Получатель_Площадка = Площадка;					
	ДокВСД.Перевозчик_ХозСубъект = ?(ПустоеЗначение(ДокОснование.ВСДПеревозчик) = 0,ДокОснование.ВСДПеревозчик,"");

	//ДокВСД.Производитель_Площадка = Партия.Производитель_Площадка;
	
	ТТН = ДокВСД.ДокОснование.Водитель;		
	//ТТН = СписокДокументов.Док.НомерМаршрута;	
				
	ДокВСД.ТтнСерия = ""; //ТТН.Серия;
	ДокВСД.ТтнНомер = ГлНомерНаПечать(ДокВСД.ДокОснование);//.НомерДок;
	ДокВСД.ТтнДата = ДокВСД.ДокОснование.ДатаДок;
	ДокВСД.Торг12Номер = ГлНомерНаПечать(ДокВСД.ДокОснование);//.НомерДок;
	ДокВСД.ТОРГ12Дата = ДокВСД.ДокОснование.ДатаДок;

	Попытка		
		ДокВСД.номерАвто = ТТН.НомерАвтомобиля;
		Если ПустоеЗначение(ДокВСД.номерАвто)=1 Тогда
			ДокВСД.номерАвто = "не используется";
		КонецЕсли;
	Исключение
		ДокВСД.номерАвто = "не используется";
	КонецПопытки;
	
	ДокВСД.Автор = глПользователь;
	Попытка				
		ДокВСД.Филиал = глПользователь.Филиал;
	Исключение
	КонецПопытки;
//	ДокВСД.ФормаВСД = 1;
	//ДокВСД.ТермическоеСостояние = ТермическиеУсловияПеревозки;
	
	//ДокВСД.Экспертиза 		= ВСД_Экспертиза;
	ДокВСД.Местность 		= ВСД_Местность;
	ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
	ДокВСД.cargoExpertized  = 1; 
	
	ДокВСД.НомерЗаказаПокупателя = СокрЛП(ДокОснование.Заказ);
	ДокВСД.ДатаЗаказаПокупателя = СокрЛП(ДокОснование.ДатаЗаказа);

	ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");//Перечисление.ВСД2_РезультатИсследований.VSEFULL;
	ДокВСД.cargoInspected  = 1; 
	
	ПропускатьПустыеСвойства = ГМ.СписокКонстант.Получить("ПропускатьПустыеСвойства");

	//тз = СвернутьТчПоСвойству(ДокВСД.ДокОснование);
	тз = СоздатьОбъект("Таблицазначений");
	ДокВСД.Докоснование.ВыгрузитьТабличнуюЧасть(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		 Если (ПропускатьПустыеСвойства = 1) и (ПустоеЗначение(тз.Номенклатура.ВСД_Продукция_Элемент) = 1) Тогда
			Сообщить("Не указан ВСД_Продукция_Элемент у "+тз.Номенклатура+". Пропускаем","i");
			Продолжить;
		 КонецЕсли;
			
			ВрПартия = ГМ.НайтиПервуюПартию(тз.Номенклатура.ВСД_Продукция_Элемент,ДокВСД.Отправитель_Площадка,ДокВСД.Отправитель_Хозсубъект);//ТЗПартий.Партия;
			Если ПустоеЗначение(ВрПартия) = 1 Тогда
				Сообщить("Нет партий для "+тз.Номенклатура+". Проверьте!","!!");				
			    Продолжить;
			КонецЕсли;
			
			
			КСписанию = тз.Количество*тз.Номенклатура.ВесНетто; 
			
			Если ПустоеЗначение(ВрПартия) = 0 Тогда
				Если ВрПартия.Количество < КСписанию Тогда
					Сообщить("В партии "+ВрПартия+" недостаточно веса, в партии  "+ВрПартия.Количество,"!");
					ВрПартия = ""
			    	//КСписанию = ВрПартия.Количество;
				КонецЕсли;
			КонецЕсли;

				ДокВСД.НоваяСтрока();
				ДокВСД.Номенклатура = тз.Номенклатура;
				ДокВСД.Партия = ВрПартия;
				ДокВСД.Количество = КСписанию;
//				ДокВСД.КоличествоМест = тз.КоличествоМест;			
				ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
				ДокВСД.Продукция = ДокВСД.Партия.Продукция;
				ДокВСД.ВидПродукции = ДокВСД.Партия.ВидПродукции;

				ДокВСД.Продукция_Элемент 	= ДокВСД.Номенклатура.ВСД_Продукция_Элемент;
				ДокВСД.ТермическоеСостояние = ДокВСД.Продукция_Элемент.ТермическиеУсловияПеревозки;
				ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование; 
				ДокВСД.КодПродукции = тз.АртикулПокупателя;
				
				ДокВСД.ФормаУпак4 = ДокВСД.Продукция_Элемент.ТипФасовки;//ФормаУпаковки;
				Если ПустоеЗначение(ДокВСД.ФормаУпак4) = 0 Тогда
					ДокВСД.КолвоУпак4 = тз.Количество;
				КонецЕсли;
				
				ДокВСД.ФормаУпак2 = ДокВСД.Продукция_Элемент.ФормаУпаковки;
				Если ПустоеЗначение(ДокВСД.ФормаУпак2) = 0 Тогда
					Попытка
						ДокВСД.КолвоУпак2 = Окр(ДокВСД.Количество / ДокВСД.Продукция_Элемент.ОбъемЕдиницыФасовки,2,3);
					Исключение
						Сообщить("Деление на 0");
						ДокВСД.ФормаУпак2 = "";
					КонецПопытки;
				КонецЕсли;
				
				//Маркировка
				ДокВСД.ЗначениеМаркировки1_2 = ДокВСД.Продукция_Элемент.GTIN;
				Если ПустоеЗначение(ДокВСД.ЗначениеМаркировки1_2)=0 Тогда						
					ДокВСД.КлассМаркировки1_2 = "EAN13";
				КонецЕсли;
				
				ДокВСД.Цель = ГМ.СписокКонстант.Получить("Цель");
				
	КонецЦикла;
	
	//ДокВСД.СвойствоНоменклатурыЗначение = ВыбТипПродукции;
	
	//Если ПустоеЗначение( СокрЛП(ДокВСД.номерАвто) )=1 Тогда
	//	Сообщить("В документе "+ДокВСД.ТтнНомер+"не указан № автомобиля 
	//	|ВСД не сформирован");
	//	Продолжить;
	//КонецЕсли;
	
	ДокВСД.Записать();
			
	Возврат ДокВСД.ТекущийДокумент();
	
КонецФункции

Процедура ПриОткрытии()

	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
		
		Если ПустоеЗначение(Парам.Получить("ДокОснование"))=1 Тогда
			Сообщить("В форму служебной обработки передан неверный параметр!","I");
			СтатусВозврата(0);Возврат;
		КонецЕсли;      
        
		//Сообщение = Парам.Получить("Сообщение");
                                 
		ДокументСсылка = СоздатьВСД(Парам);
		
		СписокПараметров = СоздатьОбъект("СписокЗначений");
		СписокПараметров.ДобавитьЗначение(ДокументСсылка,"ДокументСсылка");
		                    
		Форма.Параметр = СписокПараметров;   

	КонецЕсли;
    
	СтатусВозврата(0); Возврат;
	
КонецПроцедуры