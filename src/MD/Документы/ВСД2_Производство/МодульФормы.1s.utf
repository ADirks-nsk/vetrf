 //+zhukov@КБ99, 2018-01-15 19:11
Перем СписокДействий; // для механизма кнопки "Действия"
//Перем ГМ; = определение перенесено в ПриНачалеРаботыСистемы() Глобальный Модуль конфигурации
Перем ПараПараметров; // Для отправки из формы

Процедура ДоступностьЭлементов()
	Если Проведен()=1 Тогда 
		Форма.ТолькоПросмотр(1); 
		Форма.кнОК.Доступность(0);
		Форма.кнЗаписать.Доступность(0);
		Форма.кнОтправить.Доступность(0);
		Форма.кнПриход.Доступность(0);
		Форма.кнРасход.Доступность(0);
		
	КонецЕсли;
	//СзВСЭ.ТекущаяСтрока(СзВСЭ.НайтиЗначение(cargoExpertized));
КонецПроцедуры

//Процедура ПриВыбореВСЭ()
//	cargoExpertized = СзВСЭ.ПолучитьЗначение(СзВСЭ.ТекущаяСтрока());	
//КонецПроцедуры

Процедура ПриВыбореФирмы()
	попытка
		ГМ.Инициализация(Контекст);
		//ГМ.ЗагрузитьПараметры(Фирма); 
		Производитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		Производитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");
		Экспертиза = ГМ.СписокКонстант.Получить("ВСД_Экспертиза");
		Местность = ГМ.СписокКонстант.Получить("ВСД_Местность");
		Особыеотметки = ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки");
	Исключение
		
	КонецПопытки
	
КонецПроцедуры



Процедура Отправить()

	Если Проведен()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПометкаУдаления()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(applicationID)=0 Тогда 
		Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Записать();
	Если (Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0) Тогда
	    
	иначе
		Предупреждение("Запишите документ");
		Возврат;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД транзакция "+НомерДок+" от "+ДатаДок);
	
   ПараПараметров = СоздатьОбъект("СписокЗначений");
   ПараПараметров.Установить("КонтекстДокумента", Контекст);  
   
   КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
   ОткрытьФорму("Отчет", ПараПараметров, КаталогОбработки+"ВСД_ОтправкаИзФормы.ert");
   	
    ДоступностьЭлементов();
КонецПроцедуры




Процедура ПриЗаписи()
	Если (ПустоеЗначение(operationId) = 1) и (ЗавершитьОперацию=0) Тогда
	    Предупреждение("Вы пытаетесь сделать незавершенное производство, но не указали OperationID");
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры
//
Процедура ПоКнопкеОснование()
	
	Перем Основание;
	
	// если документ основание уже есть, откроем его
	Если ПустоеЗначение(ДокОснование) = 0 Тогда
		ОткрытьФорму(ДокОснование);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводНового(Скопирован)
	UUID = "";
	applicationID = "";
	Статус = ""; 

	Если Скопирован = 0 Тогда
		Попытка
			Фирма = ГМ.глЗначениеПоУмолчанию("ОсновнаяФирма");
			ПриВыбореФирмы();
		Исключение КонецПопытки;
		cargoInspected  	= 1;			
		РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");//Перечисление.ВСД2_РезультатИсследований.VSEFULL;
	КонецЕсли;
	Попытка	Автор = ГМ.ПолучитьАвтора();	Исключение	КонецПопытки;
	Попытка	Филиал = Автор.Филиал;			Исключение	КонецПопытки;
КонецПроцедуры

Процедура ПослеОткрытия()
	//ГМ.Инициализация(Контекст);        
КонецПроцедуры

Процедура ПриОткрытии()
	//из типовой ЖД
	//НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);
	ПриЗаписиПерепроводить(1);
	
	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений"); 
	СписокДействий.ДобавитьЗначение("Перейти в журнал");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Структура подчиненности"); 
	СписокДействий.ДобавитьЗначение("История");

	ДоступностьЭлементов();	

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("ТабличнаяЧасть");
		
	//глАктивизироватьРеквизит(Контекст);		
	Форма.Закладки.ТекущаяСтрока(1);
	Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
	
КонецПроцедуры

//ЖД
Процедура ПриЗакрытии()
   Если ТипЗначенияСтр(ПараПараметров) = "ГрупповойКонтекст" Тогда
// форма обработки открыта
      ПараПараметров.Форма.Закрыть();
// закрываем форму обработки
   КонецЕсли;
КонецПроцедуры // ПриЗакрытии

//******************************************************************************
// предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если ЗначениеЗакладки="Основной" Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
	ИначеЕсли ЗначениеЗакладки="ТабличнаяЧасть" Тогда
		Форма.ИспользоватьСлой("Шапка,ТабличнаяЧасть,Подвал");
	КонецЕсли;       
	
КонецПроцедуры // ПриВыбореЗакладки()


//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Параметры = СоздатьОбъект("СписокЗначений");
	Попытка Параметры.ДобавитьЗначение(?((Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0), ТекущийДокумент(), ГМ.глВзятьКонтекст(Контекст)), "Контекст"); Исключение КонецПопытки;
	Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
	Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");

	ОткрытьФорму("Отчет", ТекущийДокумент(), КаталогОбработки+"ПечФорма_ВСД2_Производство.ert");
	
КонецПроцедуры // ПоКнопкеПечать()
	
Функция НайтиВСД2_Производство(Докум)
	//Продумать, что делать с Rejected Документами
	Рез ="";
	
	ДокТ = СоздатьОбъект("Документ");
	ДокТ.ВыбратьПодчиненныедокументы(,,Докум.ТекущийДокумент());
	Пока ДокТ.ПолучитьДокумент()=1 Цикл
	    Если (ДокТ.Вид() = "ВСД2_Производство") и (ДокТ.ПометкаУдаления()=0) Тогда
			Если (ПустоеЗначение(ДокТ.Статус)=1) или (СокрЛП(докТ.Статус) = "COMPLETED") Тогда
	        	Рез = ДокТ.текущийДокумент();
				Прервать;
			КонецЕсли;
	    КонецЕсли;
	КонецЦикла;

	Возврат Рез;
КонецФункции // ()


Функция ЗаполнитьВСД2Производство(ДокР)
	
	
	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");

	// заполнение кастомного ВСД  - ЖД в этом случае отменить Ввод на основании и открыть Созданный док
	Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_Производство.ert")=1 Тогда
		//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			//
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(ДокР.ТекущийДокумент(),				"ДокОснование");
			СписокПараметров.ДобавитьЗначение(Производитель_ХозСубъект,	"Производитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Производитель_Площадка,	"Производитель_Площадка");
			//СписокПараметров.ДобавитьЗначение( ГМ.СписокКонстант.Получить("ВСД_Экспертиза"),		"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ГМ.СписокКонстант.Получить("ВСД_Местность"),		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки"),	"ВСД_ОсобыеОтметки");    
			СписокПараметров.ДобавитьЗначение( ДокР.ДатаДок,				"НачДата");
			СписокПараметров.ДобавитьЗначение( ДокР.ДатаДок,				"КонДата");    
				
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_Производство.ert");
			ДокументСсылка = "";
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				Возврат ""; 
			Иначе
				Возврат ДокументСсылка; 
			КонецЕсли;
			//}
	Иначе
		ДокОснование = ДокР.ТекущийДокумент();			
		ДатаДок = ДокОснование.ДатаДок;			
		//Производитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		//Производитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");			
		ЗавершитьОперацию = 1;
		Местность 		= ГМ.СписокКонстант.Получить("ВСД_Местность");
		ОсобыеОтметки 	= ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки");
		cargoExpertized  = 1;
		cargoInspected  	= 1;			
		РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");//Перечисление.ВСД2_РезультатИсследований.VSEFULL;
		
		ПропускатьПустыеСвойства = ГМ.СписокКонстант.Получить("ПропускатьПустыеСвойства");
		
		ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку() = 1 Цикл
		    Если (ПропускатьПустыеСвойства = 1) и (ПустоеЗначение(ДокОснование.Номенклатура.ВСД_Продукция_Элемент) = 1) Тогда
				Сообщить("Не указан ВСД_Продукция_Элемент у "+ДокОснование.Номенклатура+". Пропускаем","i");
				Продолжить;
		    КонецЕсли;
			Попытка
		        Если ПустоеЗначение(ДокОснование.Номенклатура.ВСД_Продукция_Элемент.Guid) = 1 Тогда
					Сообщить("У "+СокрЛП(ДокОснование.Номенклатура.Наименование)+" -> "+ДокОснование.Номенклатура.ВСД_Продукция_Элемент+" не указан GUID - Возникнет ошибка при отправке ВСД","!!");	
				КонецЕсли;
			Исключение 	КонецПопытки;
			НоваяСтрока();
			Номенклатура		= ДокОснование.Номенклатура;
			Продукция_Элемент 	= Номенклатура.ВСД_Продукция_Элемент;
			Попытка Количество 	= ДокОснование.Количество*ДокОснование.Единица.Вес; Исключение  Сообщить("Нестандартная конфигурация!!!","!!"); Возврат ""; КонецПопытки;
			ЕдиницаИзмерения 	= Продукция_Элемент.ЕдиницаИзмерения;
			Продукция 			= Продукция_Элемент.Продукция;
			ВидПродукции 		= Продукция_Элемент.ВидПродукции;
			ВидДвижения 		= 1;
			НаименованиеПродукции = Продукция_Элемент.Наименование;
			ДатаИзготовления1 = ДатаДок;
			ДатаСрокГодности1 = ДатаИзготовления1+Продукция_Элемент.СрокГодности;
		КонецЦикла;			
		
        Если КоличествоСтрок()=0 Тогда
            Предупреждение("Нет элементов для создания ВСД Производство !","!!");
        КонецЕсли;
		Возврат "";
	КонецЕсли;
КонецФункции

Функция ОбработатьОснование(Докум)
	Рез = "";
	Если ПустоеЗначение(Докум) = 1 Тогда
	    Возврат Рез;
	КонецЕсли;
// в стандарте д.б. Контрагент - самопис - все что угодно
// Либо для исключения ошибки искать ХС по Площадке - по реквизиту GUIDХозСубъекта
	Возврат 1;
	
КонецФункции // ОбработатьОснование()

//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНаОсновании(ДокументОснование)
	    
	// Поищем есть ли уже введенный и проведенный
	Рез = НайтиВСД2_Производство(ДокументОснование);
	Если ПустоеЗначение(Рез) =  0 Тогда
		ОткрытьФорму(Рез,"");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;		
	Попытка Фирма = ДокументОснование.Фирма; Исключение КонецПопытки;
	ГМ.Инициализация(Контекст);

	// проверим ошибки реквизитов и есть ли партии
//	Если ПустоеЗначение(ОбработатьОснование(ДокументОснование)) = 1 Тогда
//	    СтатусВозврата(0);
//		Возврат;
//	КонецЕсли;
//	ДатаДок = ДокументОснование.ДатаДок;
	Попытка
		Производитель_Площадка = ГМ.НайтиПлощадкуПоСкладу(ДокументОснование.Склад);
		Если ПустоеЗначение(Производитель_Площадка) = 1 Тогда
			Производитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");    
		КонецЕсли;
	Исключение
		Производитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");	
	КонецПопытки;
	
	Производитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");

	Попытка	Автор = ГМ.ПолучитьАвтора();	Исключение	КонецПопытки;
	Попытка	Филиал = Автор.Филиал;	Исключение	КонецПопытки;
   // ТЗЭлементов = ГМ.СвернутьТЧ(ДокументОснование);
	
	ДокСсылка = ЗаполнитьВСД2Производство(ДокументОснование);
	Если ПустоеЗначение(ДокСсылка)  = 0 Тогда
		ОткрытьФорму(ДокСсылка);
	    СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ВводНаОсновании()



//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Производитель_площадка" Тогда
		ВремЭлем = Производитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
    ИначеЕсли ЭлементДиалога = "Партия" Тогда
		парам = создатьОбъект("СписокЗначений");
        Парам.Установить("ВСД_Продукция_Элемент",Продукция_Элемент);
        Парам.Установить("Площадка",Производитель_Площадка);
		Парам.Установить("ХозСубъект",Производитель_ХозСубъект);
        ОткрытьФорму("Справочник.ВСД_Партия", Парам);
        ФлагСтандОбр = 0;
	ИначеЕсли Найти(ЭлементДиалога, "КлассМаркировки") <> 0 Тогда
		Рез = "";
		Если ГМ.КлассыМаркировки.ВыбратьЗначение(Рез,,,,1) <> 0 Тогда
			УстановитьАтрибут(ЭлементДиалога, Рез);
		КонецЕсли;
        ФлагСтандОбр = 0;		
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()


Процедура ПриВыбореПартии()
	Если ВидДвижения = 1 Тогда
		Партия = "";
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Партия) = 0 Тогда
		Продукция = Партия.Продукция;
		ВидПродукции = Партия.ВидПродукции;
		ЕдиницаИзмерения = Партия.ЕдиницаИзмерения;
		ФормаУпаковки = Партия.ФормаУпаковки;
		НаименованиеПродукции = Партия.НаименованиеПродукции;
		Продукция_Элемент = Партия.Продукция_Элемент;
	КонецЕсли;
КонецПроцедуры


Процедура ПриВыбореНоменклатуры()
	Продукция_Элемент = Номенклатура.ВСД_Продукция_Элемент;
	Если ВидДвижения = 1 Тогда
		Партия = "";
	Иначе
		Партия = ГМ.НайтиПервуюПартию(Продукция_Элемент,Производитель_Площадка);
	КонецЕсли;
	
	Если ПустоеЗначение(Партия) = 1 Тогда
		Продукция = Продукция_Элемент.Продукция;
		ВидПродукции = Продукция_Элемент.ВидПродукции;
		ЕдиницаИзмерения = Продукция_Элемент.ЕдиницаИзмерения;
	Иначе
		Продукция = Партия.Продукция;
		ВидПродукции = Партия.ВидПродукции;
		ЕдиницаИзмерения = Партия.ЕдиницаИзмерения;
	КонецЕсли;
	НаименованиеПродукции = Продукция_Элемент.Наименование;
КонецПроцедуры

Процедура ПриВыбореВСД_Элемент()
	Если ВидДвижения = 1 Тогда
		Партия = "";
	Иначе
		Партия = ГМ.НайтиПервуюПартию(Продукция_Элемент,Производитель_Площадка);
	КонецЕсли;
	Если ПустоеЗначение(Партия) = 1 Тогда
		Продукция = Продукция_Элемент.Продукция;
		ВидПродукции = Продукция_Элемент.ВидПродукции;
		ЕдиницаИзмерения = Продукция_Элемент.ЕдиницаИзмерения;
		ДатаИзготовления1 = ТекущаяДата();
		ДатаСрокГодности1 = ДатаИзготовления1 + Продукция_Элемент.СрокГодности;
	Иначе
		Продукция = Партия.Продукция;
		ВидПродукции = Партия.ВидПродукции;
		ЕдиницаИзмерения = Партия.ЕдиницаИзмерения;
	КонецЕсли;
	НаименованиеПродукции = Продукция_Элемент.Наименование;
КонецПроцедуры

Процедура ПриВводеСтроки()
	СтатусВозврата(0);
КонецПроцедуры

Процедура ДобавитьПриход()
	НоваяСтрока();
	ВидДвижения = 1;	
КонецПроцедуры

Процедура ДобавитьРасход()
	НоваяСтрока();
	ВидДвижения = 2;	
КонецПроцедуры

Функция ПоказатьЗнакДвижения()
	Если ВидДвижения=1 Тогда 
		Возврат "+";
	Иначе
		Возврат "-";
	КонецЕсли;
КонецФункции

Процедура ОткрытьВСД()
	тз = СоздатьОбъект("ТаблицаЗначений");
	тз.НоваяКолонка("ВСД",,,,,50);
	
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(ДатаДок, ДатаДок, ТекущийДокумент());
	Пока Док.ПолучитьДокумент() = 1 Цикл
		тз.НоваяСтрока();
		тз.ВСД = Док.ТекущийДокумент();
	КонецЦикла;
	
	стр=0;
	Если тз.ВыбратьСтроку(стр,"ВСД")=1 Тогда 
		тз.ПолучитьСтрокуПоНомеру(стр);
		ОткрытьФорму(тз.ВСД);
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьПартии()
	ОткрытьФормуМодально("Справочник.ВСД_Партия", ТекущийДокумент());	
КонецПроцедуры



Процедура ЗавершитьОперацию()
	Если ЗавершитьОперацию=0 Тогда 
		Если СокрЛП(operationId)="" Тогда 
			operationId=СокрЛП(НомерДок);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ПриВыбореХС(Имя, ВыбХС)
	Если Имя = "Производитель_ХозСубъект" Тогда
		Если Производитель_площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Производитель_площадка = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриВыбореХС

Процедура ДействияВСД()
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	//СписокДействийВСД.ДобавитьЗначение("СписокВСД","Список ВСД"); 
	СписокДействийВСД.ДобавитьЗначение("ОткрытьВсдВГис","Открыть ВСД в ГИС");
	СписокДействийВСД.ДобавитьЗначение("ОтправитьВСД","Отправить ВСД");
	СписокДействийВСД.ДобавитьЗначение("АннулироватьВСД","Аннулировать ВСД");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьЗапрос","Открыть Запрос");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьОтвет","Открыть Ответ");
	//СписокДействийВСД.ДобавитьЗначение("Мультимодальная","Мультимодальная перевозка");
	СписокДействийВСД.ДобавитьЗначение("ПолучитьОтветВетис","Получить ответ ВЕТИС");
			
	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда
		
		Записать();
		
		ГМ.Инициализация(Контекст);    
			
		Если Зн = "ОткрытьВсдВГис" Тогда
			ГМ.ОткрытьВсдВГис( ТекущийДокумент() );		
		ИначеЕсли Зн = "СписокВСД" Тогда
			ГМ.ОткрытьСписокВсд( ТекущийДокумент() );		
		ИначеЕсли Зн = "ОтправитьВСД" Тогда 
			Отправить();
		ИначеЕсли Зн = "АннулироватьВСД" Тогда 
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
		   	ПараПараметров.Установить("ГМ", ГМ);
			ПараПараметров.Установить("Действие", "Аннулировать");		   		   
		   	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
		   	ОткрытьФорму("Отчет", ПараПараметров, КаталогОбработки+"ВСД_ОтправкаИзФормы.ert");		
		ИначеЕсли Зн = "ОткрытьЗапрос" Тогда 
			ГМ.ОткрытьЗапрос( ТекущийДокумент() );		
		ИначеЕсли Зн = "ОткрытьОтвет" Тогда 
			ГМ.ОткрытьОтвет( ТекущийДокумент() );		
//		ИначеЕсли Зн = "Мультимодальная" Тогда 
//			Если ПустаяСтрока(ИмяФайлаМультимодального) = 1 Тогда
//				ГМ2 = СоздатьОбъект("Меркурий_ГлобальныйМодуль2");
//				ГМ2.Инициализация(ГМ);
//				ИмяФайлаМультимодального = ГМ2.ПолучитьИмяФайлаПеревозки( ТекущийДокумент() );
//				Записать();
//			КонецЕсли;
//
//			КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");				
//			СписокПараметров = СоздатьОбъект("СписокЗначений");
//			СписокПараметров.Установить("Документ", ТекущийДокумент());
//			СписокПараметров.Установить("ГМ", ГМ);
//   			ОткрытьФорму("Отчет", СписокПараметров, КаталогОбработки+"Меркурий_МультимодальнаяПеревозка.ert");
		ИначеЕсли Зн = "ПолучитьОтветВетис" Тогда 			
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
		   	ПараПараметров.Установить("ГМ", ГМ);
			ПараПараметров.Установить("Действие", "ПолучитьОтвет");		   		   
		   	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
		   	ОткрытьФорму("Отчет", ПараПараметров, КаталогОбработки+"ВСД_ОтправкаИзФормы.ert");		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры   

//ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");  = определение перенесено в ПриНачалеРаботыСистемы() Глобальный Модуль конфигурации