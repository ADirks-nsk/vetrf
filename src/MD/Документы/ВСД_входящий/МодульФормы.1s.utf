 //+phsin@КБ99, 2016-08-15 15:02:17
Перем СписокДействий; // для механизма кнопки "Действия"
//Перем ГМ; = определение перенесено в ПриНачалеРаботыСистемы() Глобальный Модуль конфигурации
Перем ИмяПеременной;
Перем Типытранспорта;
Перем ВыбФирма;

Процедура ПриВыбореФирмы()
	попытка
		ГМ.Инициализация(Контекст);
		Отправитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		Отправитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");
		Особыеотметки = ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки");
		// ?
		Экспертиза = ГМ.СписокКонстант.Получить("ВСД_Экспертиза");
		Местность = ГМ.СписокКонстант.Получить("ВСД_Местность");
	Исключение
		
	КонецПопытки
	
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());

		ФирмаИмяРеквизита = "";
		ГМ.ПолучитьИмяРеквизитаФирма(Вид(), ФирмаИмяРеквизита);
		Попытка УстановитьАтрибут(ФирмаИмяРеквизита, ВыбФирма);  Исключение КонецПопытки;

		ПриВыбореФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

Процедура КликПроизводители()
	Сп = ЗначениеИзСтроки(ПроизводительСписок); 
	зн="";
	Сп.ВыбратьЗначение(зн,"Производители");
	
КонецПроцедуры

Процедура КликМаркировка()
	Сп = ЗначениеИзСтроки(МаркировкаСписок); 
	зн="";
	Попытка		
		Сп.ВыбратьЗначение(зн,"Маркировка");
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция ТипТССтрокой()
	Рез = Типытранспорта.Получить(СокрЛП(типТС));
	Возврат Рез;
КонецФункции


Процедура ПриСменеВидаВСД()

	Если ВидВСД=1 Тогда
		Форма.UUID.Доступность(0);
		
	Иначе
		Форма.UUID.Доступность(1);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводНового(Скопирован)
	Статус="";
	applicationID="";
	GUID="";
	UUID="";
	НомерЗаписи="";
	ДатаИзменения="";
	RequestResult = "";
	Если Скопирован = 0 Тогда
		Попытка
			Фирма = ГМ.глЗначениеПоУмолчанию("ОсновнаяФирма");
			ПриВыбореФирмы();
		Исключение КонецПопытки;
		cargoInspected  	= 1;
		ТипТС=1;
	КонецЕсли;
	Автор = ГМ.ПолучитьАвтора();
	Попытка	Филиал = Автор.Филиал;			Исключение	КонецПопытки;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ГМ._ПриОткрытии(Контекст);

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Площадки");
	Форма.Закладки.ДобавитьЗначение("Товары");
	Форма.Закладки.ДобавитьЗначение("ТТН");
		
	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Шапка, Товары, Подвал");
	
	ПриЗаписиПерепроводить(1);
	
	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Структура подчиненности"); 
	СписокДействий.ДобавитьЗначение("История");
	СписокДействий.ДобавитьЗначение("Ввести на основании");
	
	ПриСменеВидаВСД();
	
	
	сп = ЗначениеИзСтроки(ПроизводительСписок); 
	Попытка
		Сп.Выгрузить(спПроизводитель_Площадки);
	Исключение
	КонецПопытки;
	
	АвтоВремяТекущее();
	
КонецПроцедуры

//******************************************************************************
// предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если ЗначениеЗакладки="Площадки" Тогда
		Форма.ИспользоватьСлой("Шапка,Площадки,Подвал");
	ИначеЕсли ЗначениеЗакладки="Товары" Тогда
		Форма.ИспользоватьСлой("Шапка,Товары,Подвал");		
	ИначеЕсли ЗначениеЗакладки="ТТН" Тогда
		//ОбновитьНадписи();
		Форма.ИспользоватьСлой("Шапка,Подвал,ТТН");
	//ИначеЕсли ЗначениеЗакладки="Результат" Тогда
	//	Форма.ИспользоватьСлой("Шапка,Результат,Подвал");
	КонецЕсли;       
	
КонецПроцедуры // ПриВыбореЗакладки()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Параметры = СоздатьОбъект("СписокЗначений");
	Попытка Параметры.ДобавитьЗначение(?((Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0), ТекущийДокумент(), ГМ.глВзятьКонтекст(Контекст)), "Контекст"); Исключение КонецПопытки;
	Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
	Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");

	ОткрытьФорму("Отчет", ТекущийДокумент(), ГМ.КаталогМодуля+"ПечФорма_ВСД_Входящий.ert");
	
КонецПроцедуры // ПоКнопкеПечать()

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	спПроизводитель_Площадки.ДобавитьЗначение(Элемент);
	КонтФормы.Форма.Закрыть();
	
	ПроизводительСписок = ЗначениеВСтроку(спПроизводитель_Площадки); 
КонецПроцедуры

Процедура Выбрать_Площадку_ПоХС(Имя, ВыбХС)
	
	Если ВыбХС.Выбран() = 1 Тогда
		ВремХС = ВыбХС;
		ОткрытьПодбор("Справочник.ВСД_Площадка", ,ВремХС);
	КонецЕсли;

КонецПроцедуры

Процедура ОткрытьПартии()
	ОткрытьФормуМодально("Справочник.ВСД_Партия", ТекущийДокумент());	
КонецПроцедуры

Процедура ПриВыборе_Продукция_Элемент()
	Продукция = Продукция_Элемент.Продукция;
	ВидПродукции = Продукция_Элемент.ВидПродукции;
	НаименованиеПродукции = Продукция_Элемент.Наименование;
	
КонецПроцедуры


Процедура ВводНаОсновании(ДокументОснование)

	ФирмаИмяРеквизита = "";
	ГМ.ПолучитьИмяРеквизитаФирма(ДокументОснование.Вид(), ФирмаИмяРеквизита);

	Попытка ВыбФирма = ДокументОснование.ПолучитьАтрибут(ФирмаИмяРеквизита) Исключение КонецПопытки;
	Попытка УстановитьАтрибут(ФирмаИмяРеквизита, ДокументОснование.ПолучитьАтрибут(ФирмаИмяРеквизита));  Исключение КонецПопытки;
	
	UUID = ДокументОснование.UUID;
	ВидВСД = 2; // электронный
	
	Отправитель_ХозСубъект = ДокументОснование.Отправитель_ХозСубъект;
	Отправитель_Площадка = ДокументОснование.Отправитель_Площадка;
	Получатель_ХозСубъект = ДокументОснование.Получатель_ХозСубъект;
	Получатель_Площадка = ДокументОснование.Получатель_Площадка;
	Производитель_Площадка = ДокументОснование.Производитель_Площадка;
	
	Продукция = ДокументОснование.Продукция;
	ВидПродукции = ДокументОснование.ВидПродукции;
	НаименованиеПродукции = ДокументОснование.НаименованиеПродукции;
	Продукция_Элемент = ДокументОснование.Продукция_Элемент;
	
	Количество = ДокументОснование.Количество;
	ЕдиницаИзмерения = ДокументОснование.ЕдиницаИзмерения;
	КоличествоМест = ДокументОснование.КоличествоМест;
	ФормаУпаковки = ДокументОснование.ФормаУпаковки;
	
	ДатаИзготовления1 = ДокументОснование.ДатаИзготовления1;
	ДатаИзготовления2 = ДокументОснование.ДатаИзготовления2;
	//ДатаИзготовленияСтрока = ДокументОснование.ДатаИзготовленияСтрока;
	
	ДатаСрокГодности1 = ДокументОснование.ДатаСрокГодности1;
	ДатаСрокГодности2 = ДокументОснование.ДатаСрокГодности2;
	//ДатаСрокГодностиСтрока = ДокументОснование.ДатаСрокГодностиСтрока;
	
КонецПроцедуры


Процедура УдалитьПроизводителя()
	//ПроизводительСписок=""; 
	спПроизводитель_Площадки.УдалитьЗначение( спПроизводитель_Площадки.ТекущаяСтрока() );
	ПроизводительСписок = ЗначениеВСтроку(спПроизводитель_Площадки); 
КонецПроцедуры


Процедура Отправить()

	Если Проведен()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПометкаУдаления()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(applicationID)=0 Тогда 
		Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если (Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0) Тогда
	    
	иначе
		Предупреждение("Запишите документ");
		Возврат;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД транзакция "+НомерДок+" от "+ДатаДок);
	
   ПараПараметров = СоздатьОбъект("СписокЗначений");
   ПараПараметров.Установить("КонтекстДокумента", Контекст);
   // передаем контекст документа
    
   ГМ.Инициализация( Контекст );        
   
   ОткрытьФорму("Отчет", ПараПараметров, ГМ.КаталогМодуля+"ВСД_ОтправкаИзФормы.ert");
   	
   Возврат;
КонецПроцедуры


Процедура ДобавитьЛабИсследования()
	ОткрытьФорму("Документ.ВСД2_ЛабораторныеИсследования",ТекущийДокумент());
КонецПроцедуры

//******************************************************************************
Процедура ПриВыбореХС(Имя, ВыбХС)
	Если Имя = "Отправитель_ХозСубъект" Тогда
		Если Отправитель_Площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Отправитель_Площадка = "";
		КонецЕсли;
	ИначеЕсли Имя = "Получатель_ХозСубъект" Тогда
		Если Получатель_Площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Получатель_Площадка = "";
		КонецЕсли;
	ИначеЕсли Имя = "Производитель_ХозСубъект" Тогда
		УдалитьПроизводителя()
	КонецЕсли;
КонецПроцедуры // ПриВыбореХС

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	ИначеЕсли ЭлементДиалога = "Получатель_Площадка" Тогда
		ВремЭлем = Получатель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()


Типытранспорта = СоздатьОбъект("СписокЗначений");
Типытранспорта.ДобавитьЗначение("Автомобильный", "1");
Типытранспорта.ДобавитьЗначение("Железнодорожный", "2");
Типытранспорта.ДобавитьЗначение("Авиатранспортный", "3");
Типытранспорта.ДобавитьЗначение("Морской (контейнерная партия)", "4"); 
Типытранспорта.ДобавитьЗначение("Морской (трюмная партия)", "5");
Типытранспорта.ДобавитьЗначение("Речной", "6");
Типытранспорта.ДобавитьЗначение("Перегон", "7");
//ГМ 	 = СоздатьОбъект("Меркурий_ГлобальныйМодуль"); = определение перенесено в ПриНачалеРаботыСистемы() Глобальный Модуль конфигурации
ВыбФирма = "";