Перем оПривязки;
Перем тпЗакладки;
Перем тзОтбор, тпОтбор, УстановленОтбор;
Перем выбХозСубъект, выбДокумент;

Процедура ОтборПоДокументу(ВыбДок)
	НовыйСписокОтбора = СоздатьОбъект("СписокЗначений");
	
	Если ПустоеЗначение(ВыбДок)=1 Тогда 

	Иначе
		СпрПартий = СоздатьОбъект("Справочник.ВСД_Партия");
		СпрПартий.ВыбратьЭлементыПоРеквизиту("ДокОснование",ВыбДок,0,0);
		Пока СпрПартий.ПолучитьЭлемент()=1 Цикл
			НовыйСписокОтбора.ДобавитьЗначение(СпрПартий.ТекущийЭлемент());
		КонецЦикла;

	КонецЕсли;
		
	ИспользоватьСписокЭлементов(НовыйСписокОтбора);
КонецПроцедуры

//======================================================================
Процедура УстановитьОтборПоЗакладкам()
	Если флВидСортировки = 1 Тогда
		ОтборСортировки = "	, ВСД_Продукция_Элемент.DESCR "; СтрокаСортировки = "	ВСД_Продукция_Элемент.DESCR";
	ИначеЕсли флВидСортировки = 2 Тогда
		ОтборСортировки = "	, $ВСД_Партия.ДатаИзготовления1 "; СтрокаСортировки = "	$ВСД_Партия.ДатаИзготовления1";
	ИначеЕсли флВидСортировки = 3 Тогда
		ОтборСортировки = "	, $ВСД_Партия.ДатаСрокГодности1 "; СтрокаСортировки = "	$ВСД_Партия.ДатаСрокГодности1";
	ИначеЕсли флВидСортировки = 4 Тогда
		ОтборСортировки = "	, $ВСД_Партия.ДатаИзменения "; СтрокаСортировки = "	$ВСД_Партия.ДатаИзменения";
	ИначеЕсли флВидСортировки = 5 Тогда
		ОтборСортировки = "	, $ВСД_Партия.Количество "; СтрокаСортировки = "	$ВСД_Партия.Количество";
	ИначеЕсли флВидСортировки = 6 Тогда
		ОтборСортировки = "	, ВСД_Партия.CODE "; СтрокаСортировки = "	ВСД_Партия.CODE";
	КонецЕсли;
	
	Если ГМ.ЭтоSQL = 1 Тогда
		ТекстЗапроса = "
			|SELECT ВСД_Партия.ID as [ВСД_Партия $Справочник.ВСД_Партия]"+ОтборСортировки+"
			|FROM $Справочник.ВСД_Партия as ВСД_Партия
			|	INNER JOIN $Справочник.ВСД_Продукция_Элемент as ВСД_Продукция_Элемент ON ВСД_Продукция_Элемент.ID = $ВСД_Партия.Продукция_Элемент";
	Иначе
		ТекстЗапроса = "
			|SELECT ВСД_Партия.ID as [ВСД_Партия :Справочник.ВСД_Партия]"+ОтборСортировки+"
			|FROM [Справочник.ВСД_Партия] as ВСД_Партия
			|	INNER JOIN [Справочник.ВСД_Продукция_Элемент] as ВСД_Продукция_Элемент ON ВСД_Продукция_Элемент.ID = ВСД_Партия.Продукция_Элемент";
	КонецЕсли;
	
	МД = СоздатьОбъект("MetaDataWork");                                        
	Если ПустоеЗначение(выбХозСубъект) = 0 Тогда
		СтрокаУсловий = "$ВСД_Партия.Получатель_ХозСубъект = '"+МД.ЗначениеВСтрокуБД(выбХозСубъект)+"' AND "; ЕстьУсловие = 1; 
	Иначе
		СтрокаУсловий = ""; ЕстьУсловие = 0;
	КонецЕсли;     
	
	ЕстьУсловие = 1;
	
	тзОтбор.ВыбратьСтроки();
	Пока тзОтбор.ПолучитьСтроку() = 1 Цикл
		Если тзОтбор.Пометка = 1 Тогда
			СтрокаПоиска = тзОтбор.Значение;
			Если тзОтбор.Элемент = "Только актуальные" Тогда
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Партия.Количество > 0 AND ";
				Если ГМ.ЭтоSQL = 1 Тогда
					СтрокаУсловий = СтрокаУсловий + "(ВСД_Партия.IsMark = 0) AND ";
				Иначе
					СтрокаУсловий = СтрокаУсловий + "(ВСД_Партия.ISMARK = '') AND ";
				КонецЕсли;
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Наименование" Тогда
				Пока Найти(СтрокаПоиска, "  ")>0 Цикл
					СтрокаПоиска = СокрЛП(СтрЗаменить(СтрокаПоиска, "  ", " "));
				КонецЦикла;
				
				мнСтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", РазделительСтрок);
				Для х=1 По СтрКоличествоСтрок(мнСтрокаПоиска) Цикл
					ПодСтрокаП = СтрПолучитьСтроку(мнСтрокаПоиска, х);
					Если ПустаяСтрока(ПодСтрокаП) = 0 Тогда
						Если ГМ.ЭтоSQL = 1 Тогда
							СтрокаУсловий = СтрокаУсловий + "LOWER(ВСД_Продукция_Элемент.DESCR) LIKE '%"+ПодСтрокаП+"%' AND ";
						Иначе
							СтрокаУсловий = СтрокаУсловий + "ВСД_Продукция_Элемент.DESCR LIKE '%"+ПодСтрокаП+"%' AND ";
						КонецЕсли;
						ЕстьУсловие = 1;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли тзОтбор.Элемент = "Продукция_Элемент" Тогда
				СтрокаУсловий = СтрокаУсловий + "ВСД_Продукция_Элемент.ID = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1; 
			ИначеЕсли тзОтбор.Элемент ="Дата изготовления" Тогда
				Если Найти(СтрокаПоиска, ".") > 0 Тогда
					мнСтрокаПоиска = СтрЗаменить(СокрЛП(СтрокаПоиска), ".", РазделительСтрок);
					ПодСтрокаП = "";

					СЦ = СтрКоличествоСтрок(мнСтрокаПоиска);
					Пока СЦ > 0 Цикл
						ВремСтр = СтрПолучитьСтроку(мнСтрокаПоиска, СЦ);
						Если СЦ = 3 Тогда
							Если СтрДлина(ВремСтр) = 2 Тогда
								ВремСтр = "20"+ВремСтр;
							КонецЕсли;
						КонецЕсли;
						ПодСтрокаП = ПодСтрокаП + ВремСтр + "-";
						СЦ = СЦ - 1;
					КонецЦикла; 
					ПодСтрокаП = Лев(ПодСтрокаП,10);                                        

					СтрокаУсловий = СтрокаУсловий + "($ВСД_Партия.ДатаИзготовления1 LIKE '%"+ПодСтрокаП+"%' OR $ВСД_Партия.ДатаИзготовления1 LIKE '%"+СтрЗаменить(ПодСтрокаП, "-", "")+"%') AND ";
					ЕстьУсловие = 1;
				Иначе
					Пока Найти(СтрокаПоиска, "  ")>0 Цикл
						СтрокаПоиска = СокрЛП(СтрЗаменить(СтрокаПоиска, "  ", " "));
					КонецЦикла;
					
					мнСтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", РазделительСтрок);
					Для х=1 По СтрКоличествоСтрок(мнСтрокаПоиска) Цикл
						ПодСтрокаП = СтрПолучитьСтроку(мнСтрокаПоиска, х);
						Если ПустаяСтрока(ПодСтрокаП) = 0 Тогда
							СтрокаУсловий = СтрокаУсловий + "$ВСД_Партия.ДатаИзготовления1 LIKE '%"+ПодСтрокаП+"%' AND ";
							ЕстьУсловие = 1;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			ИначеЕсли тзОтбор.Элемент ="Годен до" Тогда
				Если Найти(СтрокаПоиска, ".") > 0 Тогда
					мнСтрокаПоиска = СтрЗаменить(СокрЛП(СтрокаПоиска), ".", РазделительСтрок);
					ПодСтрокаП = "";

					СЦ = СтрКоличествоСтрок(мнСтрокаПоиска);
					Пока СЦ > 0 Цикл
						ВремСтр = СтрПолучитьСтроку(мнСтрокаПоиска, СЦ);
						Если СЦ = 3 Тогда
							Если СтрДлина(ВремСтр) = 2 Тогда
								ВремСтр = "20"+ВремСтр;
							КонецЕсли;
						КонецЕсли;
						ПодСтрокаП = ПодСтрокаП + ВремСтр + "-";
						СЦ = СЦ - 1;
					КонецЦикла; 
					ПодСтрокаП = Лев(ПодСтрокаП,10);                                        

					СтрокаУсловий = СтрокаУсловий + "($ВСД_Партия.ДатаСрокГодности1 LIKE '%"+ПодСтрокаП+"%' OR $ВСД_Партия.ДатаСрокГодности1 LIKE '%"+СтрЗаменить(ПодСтрокаП, "-", "")+"%') AND ";
					ЕстьУсловие = 1;
				Иначе
					Пока Найти(СтрокаПоиска, "  ")>0 Цикл
						СтрокаПоиска = СокрЛП(СтрЗаменить(СтрокаПоиска, "  ", " "));
					КонецЦикла;
					
					мнСтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", РазделительСтрок);
					Для х=1 По СтрКоличествоСтрок(мнСтрокаПоиска) Цикл
						ПодСтрокаП = СтрПолучитьСтроку(мнСтрокаПоиска, х);
						Если ПустаяСтрока(ПодСтрокаП) = 0 Тогда
							СтрокаУсловий = СтрокаУсловий + "$ВСД_Партия.ДатаСрокГодности1 LIKE '%"+ПодСтрокаП+"%' AND ";
							ЕстьУсловие = 1;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			ИначеЕсли тзОтбор.Элемент = "Продукция" Тогда
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Продукция_Элемент.Продукция = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Вид продукции" Тогда
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Продукция_Элемент.ВидПродукции = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Отбор по номенклатуре" Тогда
				Если ГМ.ЭтоSQL = 1 Тогда
					ТекстЗапроса = ТекстЗапроса + "
						|	INNER JOIN 
						|		$Справочник.ВСД_Номенклатура_Соответсвия as СпрН 
						|		ON СпрН.ParentExt = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' 
						|		AND $СпрН.ВСД_Продукция_Элемент = ВСД_Продукция_Элемент.ID
						|		AND СпрН.ISMARK =0 
						|";
				Иначе
					ТекстЗапроса = ТекстЗапроса + "
						|	INNER JOIN 
						|		[Справочник.ВСД_Номенклатура_Соответсвия] as СпрН 
						|		ON СпрН.ParentExt = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' 
						|		AND СпрН.ВСД_Продукция_Элемент = ВСД_Продукция_Элемент.ID
						|		AND СпрН.ISMARK ='' 
						|";
				КонецЕсли;
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Отбор по площадке" Тогда
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Партия.Получатель_Площадка = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1; 
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	СтрокаУсловий=Лев(СтрокаУсловий,(СтрДлина(СтрокаУсловий)-5));
	Если ГМ.ЭтоSQL = 0 Тогда
		СтрокаУсловий = СтрЗаменить(СтрокаУсловий,"$","")
	КонецЕсли;
	
	Если СтрокаУсловий <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|WHERE "+СтрокаУсловий;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|GROUP BY ВСД_Партия.ID"+ОтборСортировки+"
		|ORDER BY 2";  
		
	Если ЕстьУсловие = 0 Тогда 
		Если УстановленОтбор = 1 Тогда 
			текЭлемент = ТекущийЭлемент();
		
			СписокЭлементов = ПолучитьПустоеЗначение();
			
			ИспользоватьСписокЭлементов();
			
			Форма.Обновить();
			Попытка
				АктивизироватьОбъект(текЭлемент);
			Исключение
			КонецПопытки;
		КонецЕсли;
		УстановленОтбор = 0;
	Иначе
		ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
		Если ГМ.ЭтоSQL = 1 Тогда
			ГМ.RS.Отладка(0);
			ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса, ВремТЗ); 
		Иначе
			Запрос = ГМ.базаДанных.НовыйЗапрос();
			ВремТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		КонецЕсли;

		СписокЭлементов = СоздатьОбъект("СписокЗначений");

		ВремТЗ.Выгрузить(СписокЭлементов,,,1);
		
		УстановленОтбор = 1;
		ИспользоватьСписокЭлементов(СписокЭлементов);
		Форма.Обновить();
	КонецЕсли;       
			
КонецПроцедуры 

//======================================================================
Процедура тпОтборВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона =3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзОтбор);

		КодКолонки = Колонка.Данные;
		
		Если (КодКолонки = "Значение") Тогда
			Если Стр > 1 Тогда
				_знач = тзОтбор.Значение;
				Если тзОтбор.ВыборДаты = 1 Тогда                                  
					_знач = Дата(_знач);
					ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,10,0, тзОтбор.ЭлементДиалога, "0x00000020");		
				ИначеЕсли ТипЗначенияСтр(_знач) = "Справочник" Тогда
					ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, тзОтбор.ЭлементДиалога, "0x00000200");		
				Иначе                                                             
					_знач = Строка(_знач);
					ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, тзОтбор.ЭлементДиалога, "0x100000");		
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпОтборПриРедактированииЗначения(ТабличноеПоле, Стр, Колонка, ТипРегиона, __знач)
	Если ТипРегиона = 3 Тогда
		КодКолонки = Колонка.Данные;

		Если КодКолонки = "Значение" Тогда
			ТекЗнач = ТабличноеПоле.ТекущиеДанные.Значение;

			Если ТекЗнач <> __знач Тогда
				тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Значение",__знач);
				Если ПустоеЗначение(__знач) = 0 Тогда
					тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Пометка",1);
				Иначе
					тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Пометка",0);
				КонецЕсли;
				ТабличноеПоле.ОбновитьСтроки();
				УстановитьОтборПоЗакладкам();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура тпОтборПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Пометка");
	ОбъектЯчейка.ЗначениеФлажка=ДанныеСтроки.Получить("Пометка");
	ОбъектЯчейка.ОтображатьФлажок=1;
	ОбъектЯчейка.ОтображатьТекст=0;
	     
	Если (ДанныеСтроки.ЭлементДиалога = "Дата") Тогда
		ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Элемент");
		ОбъектЯчейка.ЗначениеФлажка=ДанныеСтроки.Получить("ВыборДаты");
		ОбъектЯчейка.ОтображатьФлажок=1;            
		
		Окончание = ?(ДанныеСтроки.ВыборДаты = 1, "(дата)", "(строка)");
		ОбъектЯчейка.Текст = ДанныеСтроки.Элемент + " " + Окончание;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпОтборПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)

	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзОтбор);
	
	КодКолонки = Колонка.Имя;
	
	Если КодКолонки = "Пометка" Тогда
		_знач = тзОтбор.Пометка;
		НовЗнач = ?(_знач=1,0,1);
		тзОтбор.Пометка = НовЗнач;
	Иначе
		_знач = тзОтбор.ВыборДаты;
		НовЗнач = ?(_знач=1,0,1);
		тзОтбор.ВыборДаты = НовЗнач;
	КонецЕсли;
	
	ТабличноеПоле.ОбновитьСтроки();
	
	УстановитьОтборПоЗакладкам();

КонецПроцедуры

//======================================================================
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)
	Если ЭлементДиалога = "ВыбВидПродукции" Тогда
		Поз = 0;
		Если тзОтбор.НайтиЗначение("ВСД_Продукция",Поз,"ЭлементДиалога") = 1 Тогда
			СуперВладелец = тзОтбор.ПолучитьЗначение(Поз,"Значение");	
			Если ПустоеЗначение(СуперВладелец) = 0 Тогда
				Парам = "";
				ОткрытьФорму("Справочник.ВСД_ВидПродукции",Парам);
				Парам.ИспользоватьВладельца(СуперВладелец);
			Иначе
				Сообщить("Выберите продукцию!");
			КонецЕсли;
		КонецЕсли;
		ФлагПродолжения = 0;                    
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);

	Если Форма.МодальныйРежим() = 0 Тогда
		Попытка
			оПривязки.Привязка("рамкаСортировка,кнЗакрыть, кнЗагрузитьПартии", "T", "Форма");
			оПривязки.Привязка("флВидСортировки,флДатаИ,флДатаГ,флДатаИзменения,флКоличество,флКод", "T", "Форма");
			оПривязки.Привязка("тпОтбор,рамкаЗакладки", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("МногострочнаяЧасть","H","Форма","W","Форма");
		Исключение
			Сообщить("Справочник ВСД_Партии - Не удалось инициализировать привязки");
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ПриЗакрытии()
	ЗначениеВФайл(КаталогПользователя()+"ОтборВсдПартии.txt",тзОтбор);
КонецПроцедуры // ПриЗакрытии()

//======================================================================
Процедура ПослеСозданияФормы()
	Перем ВремТЗ;

	// Отбор
	тзОтбор = СоздатьОбъект("ТаблицаЗначений");
	тзОтбор.НоваяКолонка("Пометка","Число",,,"Вкл",3);
	тзОтбор.НоваяКолонка("Элемент",,,,"Представление реквизита",10);
	тзОтбор.НоваяКолонка("Значение",,,,"Значение",30);
	тзОтбор.НоваяКолонка("ЭлементДиалога");
	тзОтбор.НоваяКолонка("ВыборДаты","Число");

	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Только актуальные";
	тзОтбор.Значение = "";
	тзОтбор.ЭлементДиалога = "Актуальные";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Наименование";
	тзОтбор.Значение = "";
	тзОтбор.ЭлементДиалога = "ВыбНаименование";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Продукция_Элемент";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_Продукция_Элемент");
	тзОтбор.ЭлементДиалога = "ВСД_Продукция_Элемент";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Дата изготовления";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Дата");
	тзОтбор.ЭлементДиалога = "Дата";
	тзОтбор.ВыборДаты = 1;
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Годен до";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Дата");
	тзОтбор.ЭлементДиалога = "Дата";
	тзОтбор.ВыборДаты = 1;
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Продукция";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_Продукция");
	тзОтбор.ЭлементДиалога = "ВСД_Продукция";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Вид продукции";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_ВидПродукции");
	тзОтбор.ЭлементДиалога = "ВыбВидПродукции";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Отбор по номенклатуре";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.Номенклатура");
	тзОтбор.ЭлементДиалога = "ВыбТМЦ";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Отбор по площадке";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_Площадка");
	тзОтбор.ЭлементДиалога = "ВыбПлощадка";

	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		СписокОтбора = Форма.Параметр;
				
		выбВСД_Продукция_Элемент= СписокОтбора.Получить("ВСД_Продукция_Элемент");
		выбПродукция = СписокОтбора.Получить("Продукция");
		выбВидПродукции = СписокОтбора.Получить("ВидПродукции");
		выбПлощадка = СписокОтбора.Получить("Площадка");
		выбХозСубъект = СписокОтбора.Получить("ХозСубъект");
		
		Если ПустоеЗначение(выбВСД_Продукция_Элемент)=0 Тогда 
			Поз = 0;
			Если тзОтбор.НайтиЗначение("Продукция_Элемент", Поз, "Элемент") = 1 Тогда
				тзОтбор.УстановитьЗначение(Поз, "Пометка", 1);
				тзОтбор.УстановитьЗначение(Поз, "Значение", выбВСД_Продукция_Элемент);
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(выбПродукция)=0 Тогда 
			Поз = 0;
			Если тзОтбор.НайтиЗначение("Продукция", Поз, "Элемент") = 1 Тогда
				тзОтбор.УстановитьЗначение(Поз, "Пометка", 1);
				тзОтбор.УстановитьЗначение(Поз, "Значение", выбПродукция);
			КонецЕсли;
		КонецЕсли;	
		Если ПустоеЗначение(выбВидПродукции)=0 Тогда 
			Поз = 0;
			Если тзОтбор.НайтиЗначение("Вид продукции", Поз, "Элемент") = 1 Тогда
				тзОтбор.УстановитьЗначение(Поз, "Пометка", 1);
				тзОтбор.УстановитьЗначение(Поз, "Значение", выбВидПродукции);
			КонецЕсли;
		КонецЕсли;
		Если ПустоеЗначение(выбПлощадка)=0 Тогда 
			Поз = 0;
			Если тзОтбор.НайтиЗначение("Отбор по площадке", Поз, "Элемент") = 1 Тогда
				тзОтбор.УстановитьЗначение(Поз, "Пометка", 1);
				тзОтбор.УстановитьЗначение(Поз, "Значение", выбПлощадка);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗначенияСтр(Форма.Параметр) = "Документ" Тогда
		ОтборПоДокументу(Форма.Параметр)
	Иначе
		ЗначениеИзФайла(КаталогПользователя()+"ОтборВсдПартии.txt",ВремТЗ);
		                                                                 
		Если ТипЗначенияСтр(ВремТЗ) = "ТаблицаЗначений" Тогда
			Попытка
				ВремТЗ.ВыбратьСтроки();
				Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл     
					Поз = 0;
					Если тзОтбор.НайтиЗначение(ВремТЗ.Элемент, Поз, "Элемент") = 1 Тогда
						Если (ВремТЗ.Элемент = "Только актуальные") Тогда          
							//тзОтбор.УстановитьЗначение(Поз, "Пометка", 1);
						ИначеЕсли (ВремТЗ.Элемент = "Отбор по номенклатуре") Тогда          
						//Если (ВремТЗ.Элемент = "Отбор по номенклатуре") Тогда          
							Если (ПустоеЗначение(ВремТЗ.Значение) = 0) Тогда
								тзОтбор.УстановитьЗначение(Поз, "Пометка", ВремТЗ.Пометка);
								тзОтбор.УстановитьЗначение(Поз, "Значение", ВремТЗ.Значение);
							КонецЕсли;
						ИначеЕсли (ПустоеЗначение(ВремТЗ.Значение) = 0) Тогда
							тзОтбор.УстановитьЗначение(Поз, "Значение", ВремТЗ.Значение);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			Исключение
			КонецПопытки;
		КонецЕсли;       
	КонецЕсли;
                                                    
	Поз = 0;
	Если тзОтбор.НайтиЗначение("Только актуальные", Поз, "Элемент") = 1 Тогда
		тзОтбор.УстановитьЗначение(Поз, "Пометка", 1);
	КонецЕсли;
	
	Форма.ИспользоватьСлой("Общий,Отбор", 2);
	тпОтбор=ГМ.СоздатьТабличноеПоле(Контекст, "тпОтбор", тзОтбор, 1);

	УстановитьОтборПоЗакладкам();

КонецПроцедуры
	
//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//======================================================================
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

//======================================================================
Процедура ЗагрузитьПартии()
	ВыбПлощадка="";
	
	//тзОтбор.ВыбратьСтроки();
	//Пока тзОтбор.ПолучитьСтроку() = 1 Цикл
	//	Если тзОтбор.ЭлементДиалога = "ВыбПлощадка" Тогда 
	//		ВыбПлощадка = тзОтбор.Значение;
	//	КонецЕсли;
	//КонецЦикла;		
	Поз = 0;
	Если тзОтбор.НайтиЗначение("ВыбПлощадка", Поз, "ЭлементДиалога") = 1 Тогда
		ВыбПлощадка = тзОтбор.ПолучитьЗначение(Поз, "Значение");
	КонецЕсли;
		
	Если ПустоеЗначение(ВыбПлощадка)=1 Тогда
		Сообщить("Выберите площадку","!");
		Возврат;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Ветис получение партий ");

	// 2.1
	ПартииНачало = ТекущаяДата()-30;
	ПартииОкончание = ТекущаяДата();
	Ненулевые = 1;
	если ВвестиДату(ПартииНачало,"Загрузить партии с :")=1 Тогда 
		Если ПустоеЗначение(ПартииНачало) = 1 Тогда
			//Все хотят
			ПартииНачало = "";
			ПартииОкончание = "";
			Ненулевые = 0;
			Сообщить("Ветис получение всех партий по площадке "+ВыбПлощадка);
		Иначе
			Сообщить("Ветис получение ненулевых партий по площадке "+СокрЛП(ВыбПлощадка.Наименование)+" за период "+ПериодСтр(ПартииНачало,ПартииОкончание));
		КонецЕсли;
		Состояние("Ветис получение партий 2.1");
		ГМ2.ПолучитьПартии2(ВыбПлощадка, 0, 1,ПартииНачало, ПартииОкончание);
	КонецЕсли;
	
КонецПроцедуры

флВидСортировки = 1;