Перем оПривязки;
Перем тпЗакладки;
Перем тзОтбор, тпОтбор, УстановленОтбор;
Перем тпТМЦ, тзТМЦ;
Перем ПредыдущийЭлемент;

Функция Этот(Конт) 	Возврат Конт; КонецФункции
Функция Сам() 	Возврат Этот(Контекст); КонецФункции

//======================================================================
Процедура УстановитьОтборПоЗакладкам()
	ЕстьУсловие = 0;
	
	Если ГМ.ЭтоSQL = 1 Тогда
		ТекстЗапроса = "
			|SELECT ВСД_Продукция_Элемент.ID as [ВСД_Продукция_Элемент $Справочник.ВСД_Продукция_Элемент]
			|	, ВСД_Продукция_Элемент.DESCR as DESCR
			|FROM $Справочник.ВСД_Продукция_Элемент as ВСД_Продукция_Элемент";
	Иначе
		ТекстЗапроса = "
			|SELECT ВСД_Продукция_Элемент.ID as [ВСД_Продукция_Элемент :Справочник.ВСД_Продукция_Элемент]
			|FROM [Справочник.ВСД_Продукция_Элемент] as ВСД_Продукция_Элемент";
	КонецЕсли;
	
	СтрокаУсловий = "";
	
	тзОтбор.ВыбратьСтроки();
	Пока тзОтбор.ПолучитьСтроку() = 1 Цикл
		Если тзОтбор.Пометка = 1 Тогда
			СтрокаПоиска = тзОтбор.Значение;
			Если тзОтбор.Элемент = "Наименование" Тогда
				Пока Найти(СтрокаПоиска, "  ")>0 Цикл
					СтрокаПоиска = СокрЛП(СтрЗаменить(СтрокаПоиска, "  ", " "));
				КонецЦикла;
				
				мнСтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", РазделительСтрок);
				Для х=1 По СтрКоличествоСтрок(мнСтрокаПоиска) Цикл
					ПодСтрокаП = СтрПолучитьСтроку(мнСтрокаПоиска, х);
					Если ПустаяСтрока(ПодСтрокаП) = 0 Тогда
						Если ГМ.ЭтоSQL = 1 Тогда
							СтрокаУсловий = СтрокаУсловий + "LOWER(ВСД_Продукция_Элемент.DESCR) LIKE '%"+ПодСтрокаП+"%' AND ";
						Иначе
							СтрокаУсловий = СтрокаУсловий + "ВСД_Продукция_Элемент.DESCR LIKE '%"+ПодСтрокаП+"%' AND ";
						КонецЕсли;
						ЕстьУсловие = 1;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли тзОтбор.Элемент = "Продукция" Тогда
				МД 	 = СоздатьОбъект("MetaDataWork");
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Продукция_Элемент.Продукция = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Вид продукции" Тогда
				МД 	 = СоздатьОбъект("MetaDataWork");
				СтрокаУсловий = СтрокаУсловий + "$ВСД_Продукция_Элемент.ВидПродукции = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Отбор по номенклатуре" Тогда
				МД 	 = СоздатьОбъект("MetaDataWork");
				Если ГМ.ЭтоSQL = 1 Тогда
					ТекстЗапроса = ТекстЗапроса + "
						|	INNER JOIN $Справочник.Номенклатура as Номенклатура ON $Номенклатура.ВСД_Продукция_Элемент = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				Иначе
					ТекстЗапроса = ТекстЗапроса + "
						|	INNER JOIN [Справочник.Номенклатура] as Номенклатура ON Номенклатура.ВСД_Продукция_Элемент = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				КонецЕсли;
				ЕстьУсловие = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	СтрокаУсловий=Лев(СтрокаУсловий,(СтрДлина(СтрокаУсловий)-5));
	Если ГМ.ЭтоSQL = 0 Тогда
		СтрокаУсловий = СтрЗаменить(СтрокаУсловий,"$","")
	КонецЕсли;
	
	Если СтрокаУсловий <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|WHERE "+СтрокаУсловий;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|GROUP BY ВСД_Продукция_Элемент.ID, ВСД_Продукция_Элемент.DESCR
		|ORDER BY ВСД_Продукция_Элемент.DESCR";
	Если ЕстьУсловие = 0 Тогда 
		Если УстановленОтбор = 1 Тогда 
			текЭлемент = ТекущийЭлемент();
		
			СписокЭлементов = ПолучитьПустоеЗначение();
			
			ИспользоватьСписокЭлементов();
			
			Форма.Обновить();
			Попытка
				АктивизироватьОбъект(текЭлемент);
			Исключение
			КонецПопытки;
		КонецЕсли;
		УстановленОтбор = 0;
	Иначе
		ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
		Если ГМ.ЭтоSQL = 1 Тогда
			ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса, ВремТЗ); 
			
		//глБраузер(ВремТЗ);
		Иначе
			Запрос = ГМ.базаДанных.НовыйЗапрос();
			ВремТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		КонецЕсли;

		СписокЭлементов = СоздатьОбъект("СписокЗначений");

		ВремТЗ.Выгрузить(СписокЭлементов,,,1);
		
		УстановленОтбор = 1;
		ИспользоватьСписокЭлементов(СписокЭлементов);
		Форма.Обновить();
	КонецЕсли;       
			
КонецПроцедуры 

//======================================================================
Процедура кнПодборВыбор()
	Перем ТекТМЦ;
	текЭлемент=ТекущийЭлемент();
	Если текЭлемент.Выбран()=0 Тогда Возврат; КонецЕсли;

	Если Число(тпТМЦ.ТекущаяСтрока) > 0 Тогда
		ТекТМЦ = тзТМЦ.ПолучитьЗначение(тпТМЦ.ТекущаяСтрока, "Номенклатура");
	КонецЕсли;
	ОткрытьПодбор("Справочник.Номенклатура", "ДляВыбора", , 1, ТекТМЦ);
КонецПроцедуры // кнПодборВыбор()

//======================================================================
Процедура ОбработкаПодбора(ВыбЗнач)
	Перем Стр;
	Если тзТМЦ.НайтиЗначение(ВыбЗнач, Стр, "Номенклатура") <> 0 Тогда
		Предупреждение("Данный элемент уже выбран.",20); Возврат;
	Иначе
		Если ГМ.ЭтоSQL = 1 Тогда
			ТекстЗапроса = "
				|UPDATE $Справочник.Номенклатура
				|SET $Справочник.Номенклатура.ВСД_Продукция_Элемент = :ВыбЭлемент
				|FROM $Справочник.Номенклатура as Номенклатура
				|WHERE Номенклатура.ID = :ВыбТМЦ
				|";
			ГМ.RS.УстановитьТекстовыйПараметр("ВыбЭлемент", ТекущийЭлемент());
			ГМ.RS.УстановитьТекстовыйПараметр("ВыбТМЦ", ВыбЗнач); 
			ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса);
		Иначе          
			Спр = СоздатьОбъект("Справочник.Номенклатура");
			Спр.НайтиЭлемент(ВыбЗнач);
			Спр.ВСД_Продукция_Элемент = ТекущийЭлемент();
			Спр.Записать();
		КонецЕсли;
	
		тзТМЦ.НоваяСтрока();
		тзТМЦ.Наименование = ВыбЗнач.Наименование;
		тзТМЦ.Номенклатура = ВыбЗнач;
		
		тпТМЦ.ОбновитьСтроки();
		тпТМЦ.ТекущаяСтрока = тзТМЦ.КоличествоСтрок();
	КонецЕсли;
КонецПроцедуры // ОбработкаПодбора()

//******************************************************************************
Процедура кнУдалитьВыбор()
	Перем ТекТМЦ;
	текЭлемент=ТекущийЭлемент();
	Если текЭлемент.Выбран()=0 Тогда Возврат; КонецЕсли;

	Если Число(тпТМЦ.ТекущаяСтрока) > 0 Тогда
		ТекТМЦ = тзТМЦ.ПолучитьЗначение(тпТМЦ.ТекущаяСтрока, "Номенклатура");
		
		Если ГМ.ЭтоSQL = 1 Тогда
			ТекстЗапроса = "
				|UPDATE $Справочник.Номенклатура
				|SET $Справочник.Номенклатура.ВСД_Продукция_Элемент = $ПустойИД
				|FROM $Справочник.Номенклатура as Номенклатура
				|WHERE Номенклатура.ID = :ВыбТМЦ
				|";
			RS = СоздатьОбъект("ODBCRecordset");
			RS.УстановитьТекстовыйПараметр("ВыбТМЦ", ТекТМЦ); 
			RS.ВыполнитьИнструкцию(ТекстЗапроса);
		Иначе
			Спр = СоздатьОбъект("Справочник.Номенклатура");
			Спр.НайтиЭлемент(ТекТМЦ);
			Спр.ВСД_Продукция_Элемент = "";
			Спр.Записать();
		КонецЕсли;

		тзТМЦ.УдалитьСтроку(тпТМЦ.ТекущаяСтрока);
		тпТМЦ.ОбновитьСтроки();
	КонецЕсли;
	
КонецПроцедуры // кнУдалитьВыбор()

//******************************************************************************
Процедура кнУдалитьВсеВыбор()
	Если тзТМЦ.КоличествоСтрок() > 0 Тогда
		Если Вопрос("Удалить все строки?","Да+Нет",10) = "Да" Тогда
			Если ГМ.ЭтоSQL = 1 Тогда
				ТекстЗапроса = "
					|UPDATE $Справочник.Номенклатура
					|SET $Справочник.Номенклатура.ВСД_Продукция_Элемент = $ПустойИД
					|FROM $Справочник.Номенклатура as Номенклатура
					|WHERE Номенклатура.ID IN (SELECT Val FROM #СписокТМЦ)
					|";
				
				СписокТМЦ = СоздатьОбъект("СписокЗначений");
				тзТМЦ.Выгрузить(СписокТМЦ,,,"Номенклатура");
				ГМ.RS.УложитьСписокОбъектов(СписокТМЦ, "#СписокТМЦ",);
				ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса);
			Иначе
				Спр = СоздатьОбъект("Справочник.Номенклатура");
				Для СЦ = 1 По СписокТМЦ.РазмерСписка() Цикл
					ТекТМЦ = СписокТМЦ.ПолучитьЗначение(СЦ);
					
					Спр.НайтиЭлемент(ТекТМЦ);
					Спр.ВСД_Продукция_Элемент = "";
					Спр.Записать();
				КонецЦикла;
			КонецЕсли;

			СписокТМЦ.УдалитьВсе();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // кнУдалитьВсеВыбор()

//======================================================================
Процедура тпОтборПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Пометка");
	ОбъектЯчейка.ЗначениеФлажка=ДанныеСтроки.Получить("Пометка");
	ОбъектЯчейка.ОтображатьФлажок=1;
	ОбъектЯчейка.ОтображатьТекст=0;
КонецПроцедуры

//======================================================================
Процедура тпОтборВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона =3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзОтбор);

		КодКолонки = Колонка.Данные;
		
		Если (КодКолонки = "Значение") Тогда
			_знач = тзОтбор.Значение;
			Если ТипЗначенияСтр(_знач) = "Справочник" Тогда
				ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, тзОтбор.ЭлементДиалога, "0x00000200");		
			Иначе
				ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, тзОтбор.ЭлементДиалога, "0x100000");		
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпОтборПриРедактированииЗначения(ТабличноеПоле, Стр, Колонка, ТипРегиона, __знач)
	Если ТипРегиона = 3 Тогда
		КодКолонки = Колонка.Данные;

		Если КодКолонки = "Значение" Тогда
			ТекЗнач = ТабличноеПоле.ТекущиеДанные.Значение;

			Если ТекЗнач <> __знач Тогда
				тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Значение",__знач);
				Если ПустоеЗначение(__знач) = 0 Тогда
					тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Пометка",1);
				Иначе
					тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Пометка",0);
				КонецЕсли;
				ТабличноеПоле.ОбновитьСтроки();
				УстановитьОтборПоЗакладкам();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура тпТМЦВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона = 3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзТМЦ);
		Если ТекущийЭлемент().ЭтоГруппа() = 0 Тогда
			ОткрытьФорму(тзТМЦ.Номенклатура);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриВыбореОбъектаЗакладки()
	Если ПустоеЗначение(тпЗакладки)=1 Тогда Возврат; КонецЕсли;
	стрИмяЗакладки=тпЗакладки.ТекущаяКолонка.Имя;
	текЭлемент=ТекущийЭлемент();
	
	Если стрИмяЗакладки="Отбор" Тогда
		Форма.ИспользоватьСлой("Общий,Отбор", 2);
	ИначеЕсли стрИмяЗакладки="ОбщаяИнформация" Тогда
	ИначеЕсли стрИмяЗакладки="ТМЦ" Тогда
		Если текЭлемент.Выбран() = 0 Тогда Возврат;
		КонецЕсли;
		тзТМЦ.УдалитьСтроки();

		Если ГМ.ЭтоSQL = 1 Тогда
			ТекстЗапроса = "
				|SELECT Номенклатура.DESCR Наименование
				|	, Номенклатура.ID [Номенклатура $Справочник.Номенклатура]
				|FROM $Справочник.Номенклатура as Номенклатура
				|WHERE $Номенклатура.ВСД_Продукция_Элемент = :ВыбЭлемент
				|ORDER BY Номенклатура.DESCR";

			ГМ.RS.УстановитьТекстовыйПараметр("ВыбЭлемент", ТекущийЭлемент());
				
			ТЗ = ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса);
		Иначе
			ТекстЗапроса = "
				|SELECT Номенклатура.DESCR Наименование
				|	, Номенклатура.ID [Номенклатура $Справочник.Номенклатура]
				|FROM [Справочник.Номенклатура] as Номенклатура
				|WHERE Номенклатура.ВСД_Продукция_Элемент = :ВыбЭлемент
				|ORDER BY Номенклатура.DESCR";

			Запрос = ГМ.базаДанных.НовыйЗапрос();
			Запрос.Подставлять("ВыбЭлемент", ТекущийЭлемент());
				
			ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		КонецЕсли;

		тзТМЦ.Загрузить(тз);
		тпТМЦ.ОбновитьСтроки();
		Форма.ИспользоватьСлой("Общий,ТМЦ", 2);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Функция ПриОбновленииФормы()
	текЭлемент=ТекущийЭлемент();
	Если текЭлемент.Выбран()=0 Тогда Возврат ""; КонецЕсли;
	Если ПредыдущийЭлемент=текЭлемент Тогда Возврат ""; КонецЕсли;
	ПредыдущийЭлемент=текЭлемент;

    ПриВыбореОбъектаЗакладки();
КонецФункции

//======================================================================
Процедура тпОтборПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)

	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзОтбор);
	_знач = тзОтбор.Пометка;
	НовЗнач = ?(_знач=1,0,1);
	тзОтбор.Пометка = НовЗнач;
	ТабличноеПоле.ОбновитьСтроки();
	
	УстановитьОтборПоЗакладкам();

КонецПроцедуры

//======================================================================
Процедура тпЗакладкиПриВыбореЗаголовка(тпЗакладки, ОбъектКолонка)
	ГМ._ЗакладкиВыбор(тпЗакладки, ОбъектКолонка);
	ПриВыбореОбъектаЗакладки();
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)
	Если ЭлементДиалога = "ВыбВидПродукции" Тогда
		Поз = 0;
		Если тзОтбор.НайтиЗначение("ВыбПродукция",Поз,"ЭлементДиалога") = 1 Тогда
			СуперВладелец = тзОтбор.ПолучитьЗначение(Поз,"Значение");	
			Если ПустоеЗначение(СуперВладелец) = 0 Тогда
				Парам = "";
				ОткрытьФорму("Справочник.ВСД_ВидПродукции",Парам);
				Парам.ИспользоватьВладельца(СуперВладелец);
			Иначе
				Сообщить("Выберите продукцию!");
			КонецЕсли;
		КонецЕсли;
		ФлагПродолжения = 0;                    
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);

	Если Форма.МодальныйРежим() = 0 Тогда
		Попытка
			
			оПривязки.Привязка("тпЗакладки,рамкаЗакладки", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("кнПодбор,кнУдалить,кнУдалитьВсе", "T", "Форма", "L", "Форма");
			оПривязки.Привязка("тпОтбор,тпТМЦ", "T", "Форма", "W", "кнПодбор");
			оПривязки.Привязка("МногострочнаяЧасть","H","Форма","W","Форма");
			оПривязки.Привязка("ДеревоГруппФормыСпискаСправочника","H","Форма");
			оПривязки.Привязка("кнЗакрыть","T","Форма");
		Исключение
			//привязки не инициализировались, попробуем еще раз
			Попытка
				
				оПривязки=СоздатьОбъект("Меркурий.Привязки");
				оПривязки.УстановитьФорму(Форма);
	
				оПривязки.Привязка("тпЗакладки,рамкаЗакладки", "T", "Форма", "W", "Форма");
				оПривязки.Привязка("кнПодбор,кнУдалить,кнУдалитьВсе", "T", "Форма", "L", "Форма");
				оПривязки.Привязка("тпОтбор,тпТМЦ", "T", "Форма", "W", "кнПодбор");
				оПривязки.Привязка("МногострочнаяЧасть","H","Форма","W","Форма");
				оПривязки.Привязка("ДеревоГруппФормыСпискаСправочника","H","Форма");
				оПривязки.Привязка("кнЗакрыть","T","Форма");
	
			Исключение
				Сообщить("Справочник ВСД_Продукция_Элемент - Не удалось инициализировать привязки");
			КонецПопытки;
			
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ПослеСозданияФормы()
	Перем ВремТЗ;
	
	// Закладки
	спЗакладки=СоздатьОбъект("СписокЗначений");
	спЗакладки.ДобавитьЗначение("Отбор", "Отбор");
	спЗакладки.ДобавитьЗначение("ТМЦ", "Номенклатура");

	ОбъектФорма=СоздатьОбъект("Форма");
	ОбъектФорма.УстановитьФорму(Форма);

	тпЗакладки=ОбъектФорма.СоздатьЭлементУправления("ТабличноеПоле",Форма.тпЗакладки);
	ГМ._ЗакладкиЗаполнить(тпЗакладки, спЗакладки);

	// Отбор
	тзОтбор = СоздатьОбъект("ТаблицаЗначений");
	тзОтбор.НоваяКолонка("Пометка","Число",,,"Вкл",3);
	тзОтбор.НоваяКолонка("Элемент",,,,"Представление реквизита",10);
	тзОтбор.НоваяКолонка("Значение",,,,"Значение",30);
	тзОтбор.НоваяКолонка("ЭлементДиалога");

	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Наименование";
	тзОтбор.Значение = "";
	тзОтбор.ЭлементДиалога = "Наименование";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Продукция";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_Продукция");
	тзОтбор.ЭлементДиалога = "ВыбПродукция";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Вид продукции";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.ВСД_ВидПродукции");
	тзОтбор.ЭлементДиалога = "ВыбВидПродукции";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Отбор по номенклатуре";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.Номенклатура");
	тзОтбор.ЭлементДиалога = "ВыбТМЦ";

	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		СписокОтбора = Форма.Параметр;
				
		выбПродукция = СписокОтбора.Получить("Продукция");
		выбВидПродукции = СписокОтбора.Получить("ВидПродукции");
		Если ПустоеЗначение(выбПродукция)=0 Тогда 
			Поз = 0;
			Если тзОтбор.НайтиЗначение("Продукция", Поз, "Элемент") = 1 Тогда
				тзОтбор.УстановитьЗначение(Поз, "Пометка", 1);
				тзОтбор.УстановитьЗначение(Поз, "Значение", выбПродукция);
			КонецЕсли;
		КонецЕсли;	
		Если ПустоеЗначение(выбВидПродукции)=0 Тогда 
			Поз = 0;
			Если тзОтбор.НайтиЗначение("Вид продукции", Поз, "Элемент") = 1 Тогда
				тзОтбор.УстановитьЗначение(Поз, "Пометка", 1);
				тзОтбор.УстановитьЗначение(Поз, "Значение", выбВидПродукции);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ЗначениеИзФайла(КаталогПользователя()+"ОтборПродукцияЭлемент.txt",ВремТЗ);
		
		Если ТипЗначенияСтр(ВремТЗ) = "ТаблицаЗначений" Тогда
			Попытка
				ВремТЗ.ВыбратьСтроки();
				Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл     
					Поз = 0;
					Если тзОтбор.НайтиЗначение(ВремТЗ.Элемент, Поз, "Элемент") = 1 Тогда
						Если (ВремТЗ.Элемент = "Отбор по номенклатуре") Тогда          
							Если (ПустоеЗначение(ВремТЗ.Значение) = 0) Тогда
								тзОтбор.УстановитьЗначение(Поз, "Пометка", ВремТЗ.Пометка);
								тзОтбор.УстановитьЗначение(Поз, "Значение", ВремТЗ.Значение);
							КонецЕсли;
						ИначеЕсли (ПустоеЗначение(ВремТЗ.Значение) = 0) Тогда
							тзОтбор.УстановитьЗначение(Поз, "Значение", ВремТЗ.Значение);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			Исключение
			КонецПопытки;
		КонецЕсли;       
	КонецЕсли;
	
	тпОтбор=ГМ.СоздатьТабличноеПоле(Контекст, "тпОтбор", тзОтбор, 1);
	
	// ТМЦ
	тзТМЦ = СоздатьОбъект("ТаблицаЗначений");
	тзТМЦ.НоваяКолонка("Наименование",,,,"Наименование",30);
	тзТМЦ.НоваяКолонка("Номенклатура");

	тпТМЦ=ГМ.СоздатьТабличноеПоле(Контекст, "тпТМЦ", тзТМЦ, 0);
	
	УстановитьОтборПоЗакладкам();
	ПриВыбореОбъектаЗакладки();	

КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	ЗначениеВФайл(КаталогПользователя()+"ОтборПродукцияЭлемент.txt",тзОтбор);
КонецПроцедуры // ПриЗакрытии()
	
//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//======================================================================
Процедура ПослеОткрытия()
	
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры
