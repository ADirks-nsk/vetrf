//Перем ТекЭл;
//ГМ//:Меркурий_ГлобальныйМодуль
Перем Неопределено;
Перем оПривязки Экспорт;
Перем тпЗакладки;
Перем тзОтбор, тпОтбор, УстановленОтбор;
Перем тпПлощадки, тзПлощадки;
Перем ПредыдущийЭлемент;

//===========================================================

Процедура ОткрытьПлощадки(элХС = "")
	Если элХС = "" Тогда
		элХС = ТекущийЭлемент();
	КонецЕсли;
	
	
	Если ПустоеЗначение(элХС) = 1 Тогда
		Возврат;
	ИначеЕсли ПустоеЗначение(элХС.GUID) = 1 Тогда
		Предупреждение("Не загружен GUID", 5);
		Возврат;
	КонецЕсли;

	ОткрытьФорму("Справочник.ВСД_Площадка", элХС);
КонецПроцедуры

///******************************** ADirks 04.07.2018 ************
Процедура ОбновитьПоКонтрагенту(элХС)
	Ответ = Вопрос("Обновить карточку ХС по данным контрагента?", "Да+Нет");
	Если Ответ <> "Да" Тогда
		Возврат;
	КонецЕсли;
	
	элКонтрагент = элХС.Контрагент;
	
	спрХС = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
	спрХС.НайтиЭлемент(элХС);
	спрХС.ИНН = ГМ.ПолучитьИНН(элКонтрагент);
	спрХС.ОГРН = ГМ.ПолучитьОГРН(элКонтрагент);
	спрХС.Записать();
	
	Форма.Обновить();
КонецПроцедуры
///******************************** ADirks 04.07.2018 ************

///******************************** ADirks 04.07.2018 ************
Процедура ПолучитьГУИД(элХС)
	Если ПустаяСтрока(элХС.ИНН) = 1 Тогда
		Предупреждение("Для получения GUID необходимо указать ИНН", 10);
		Возврат;
	КонецЕсли;
	ГМ.ХС_ПолучитьGuid(элХС);
КонецПроцедуры
///******************************** ADirks 04.07.2018 ************

///******************************** ADirks 04.07.2018 ************
Процедура ЗагрузитьПлощадки(элХС)
	Если ПустаяСтрока(элХС.GUID) = 1 Тогда
		Предупреждение("Для загрузки площадок необходимо загрузить (или указать) GUID", 10);
		Возврат;
	КонецЕсли;
	ГМ.ЗагрузитьПлощадки(элХС);
КонецПроцедуры
///******************************** ADirks 04.07.2018 ************

///******************************** ADirks 10.07.2018 ************
Процедура СоздатьХС(элХС)
	сзПарам = СоздатьОбъект("СписокЗначений");
	сзПарам.Установить("ХС", элХС);
	ГМ.ОткрытьОбработку("ВСД_СоздатьХС", сзПарам);
КонецПроцедуры
///******************************** ADirks 10.07.2018 ************

///******************************** ADirks 04.07.2018 ************
Процедура Действия()
	Если Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	элХС = ТекущийЭлемент();
	
	сзМеню = СоздатьОбъект("СписокЗначений");
	сзМеню.ДобавитьЗначение("ОткрытьПлощадки", "Открыть площадки для <"+элХС+">");
	сзМеню.ДобавитьЗначение("ЗагрузитьПлощадки", "Загрузить площадки для <"+элХС+">");
	сзМеню.ДобавитьЗначение("ПолучитьГУИД", "Получить GUID по ИНН");
	Если ПустоеЗначение(элХС.Контрагент) = 0 Тогда
		сзМеню.ДобавитьЗначение("ОбновитьПоКонтрагенту", "Обновить ИНН и ОГРН из карточки контрагента");
	КонецЕсли;
	Если ПустаяСтрока(элХС.GUID) = 1 Тогда
		сзМеню.ДобавитьЗначение("СоздатьХС", "Создать ХС в Меркурии");
	КонецЕсли;
	
	Команда = "";
	Если сзМеню.ВыбратьЗначение(Команда,,,, 1) <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	Попытка		
		ГМ.Инициализация( Контекст );
	Исключение
	КонецПопытки;
	
	Если Команда = "ОткрытьПлощадки" Тогда
		ОткрытьПлощадки(элХС);
	ИначеЕсли Команда = "ЗагрузитьПлощадки" Тогда
		ЗагрузитьПлощадки(элХС);
	ИначеЕсли Команда = "ОбновитьПоКонтрагенту" Тогда
		ОбновитьПоКонтрагенту(элХС);
	ИначеЕсли Команда = "ПолучитьГУИД" Тогда
		ПолучитьГУИД(элХС);
	ИначеЕсли Команда = "СоздатьХС" Тогда
		СоздатьХС(элХС);
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 04.07.2018 ************

//******************************************************************************
Процедура УстановитьОтборПоЗакладкам()
	ЕстьУсловие = 0;
	
	Если ГМ.ЭтоSQL = 1 Тогда
		ТекстЗапроса = "
			|SELECT ВСД_ХозСубъект.ID as [ВСД_ХозСубъект $Справочник.ВСД_ХозСубъект]
			|	, ВСД_ХозСубъект.DESCR as DESCR
			|FROM $Справочник.ВСД_ХозСубъект as ВСД_ХозСубъект";
	Иначе
		ТекстЗапроса = "
			|SELECT ВСД_ХозСубъект.ID as [ВСД_ХозСубъект :Справочник.ВСД_ХозСубъект]
			|FROM [Справочник.ВСД_ХозСубъект] as ВСД_ХозСубъект";
	КонецЕсли;
	
	СтрокаУсловий = "";
	
	тзОтбор.ВыбратьСтроки();
	Пока тзОтбор.ПолучитьСтроку() = 1 Цикл
		Если тзОтбор.Пометка = 1 Тогда
			СтрокаПоиска = тзОтбор.Значение;
			Если тзОтбор.Элемент = "Наименование" Тогда
				Пока Найти(СтрокаПоиска, "  ")>0 Цикл
					СтрокаПоиска = СокрЛП(СтрЗаменить(СтрокаПоиска, "  ", " "));
				КонецЦикла;
				
				мнСтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", РазделительСтрок);
				Для х=1 По СтрКоличествоСтрок(мнСтрокаПоиска) Цикл
					ПодСтрокаП = СтрПолучитьСтроку(мнСтрокаПоиска, х);
					Если ПустаяСтрока(ПодСтрокаП) = 0 Тогда
						Если ГМ.ЭтоSQL = 1 Тогда
							СтрокаУсловий = СтрокаУсловий + "LOWER(ВСД_ХозСубъект.DESCR) LIKE '%"+ПодСтрокаП+"%' AND ";
						Иначе
							СтрокаУсловий = СтрокаУсловий + "ВСД_ХозСубъект.DESCR LIKE '%"+ПодСтрокаП+"%' AND ";
						КонецЕсли;
						ЕстьУсловие = 1;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли тзОтбор.Элемент = "ИНН" Тогда
				Пока Найти(СтрокаПоиска, "  ")>0 Цикл
					СтрокаПоиска = СокрЛП(СтрЗаменить(СтрокаПоиска, "  ", " "));
				КонецЦикла;
				
				мнСтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", РазделительСтрок);
				Для х=1 По СтрКоличествоСтрок(мнСтрокаПоиска) Цикл
					ПодСтрокаП = СтрПолучитьСтроку(мнСтрокаПоиска, х);
					Если ПустаяСтрока(ПодСтрокаП) = 0 Тогда
						СтрокаУсловий = СтрокаУсловий + "LOWER($ВСД_ХозСубъект.ИНН) LIKE '%"+ПодСтрокаП+"%' AND ";
						ЕстьУсловие = 1;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли тзОтбор.Элемент = "Отбор по контрагенту" Тогда
				МД 	 = СоздатьОбъект("MetaDataWork");
				СтрокаУсловий = СтрокаУсловий + "$ВСД_ХозСубъект.Контрагент = '"+МД.ЗначениеВСтрокуБД(СтрокаПоиска)+"' AND ";
				ЕстьУсловие = 1;
			ИначеЕсли тзОтбор.Элемент = "Наименование Площадки" Тогда
				Если ГМ.ЭтоSQL = 1 Тогда
					ТекстЗапроса = ТекстЗапроса + "
						|	INNER JOIN $Справочник.ВСД_Площадка as ВСД_Площадка ON $ВСД_Площадка.GuidХозСубъекта = $ВСД_ХозСубъект.GUID";
				Иначе
					ТекстЗапроса = ТекстЗапроса + "
						|	INNER JOIN [Справочник.ВСД_Площадка] as ВСД_Площадка ON ВСД_Площадка.GuidХозСубъекта = ВСД_ХозСубъект.GUID";
				КонецЕсли;
				
				Пока Найти(СтрокаПоиска, "  ")>0 Цикл
					СтрокаПоиска = СокрЛП(СтрЗаменить(СтрокаПоиска, "  ", " "));
				КонецЦикла;
				
				мнСтрокаПоиска = СтрЗаменить(СтрокаПоиска, " ", РазделительСтрок);
				Для х=1 По СтрКоличествоСтрок(мнСтрокаПоиска) Цикл
					ПодСтрокаП = СтрПолучитьСтроку(мнСтрокаПоиска, х);
					Если ПустаяСтрока(ПодСтрокаП) = 0 Тогда
						Если ГМ.ЭтоSQL = 1 Тогда
							СтрокаУсловий = СтрокаУсловий + "LOWER(ВСД_Площадка.DESCR) LIKE '%"+ПодСтрокаП+"%' AND ";
						Иначе
							СтрокаУсловий = СтрокаУсловий + "ВСД_Площадка.DESCR LIKE '%"+ПодСтрокаП+"%' AND ";
						КонецЕсли;
						ЕстьУсловие = 1;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	СтрокаУсловий=Лев(СтрокаУсловий,(СтрДлина(СтрокаУсловий)-5));
	Если ГМ.ЭтоSQL = 0 Тогда
		СтрокаУсловий = СтрЗаменить(СтрокаУсловий,"$","")
	КонецЕсли;
	
	Если СтрокаУсловий <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|WHERE "+СтрокаУсловий;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|GROUP BY ВСД_ХозСубъект.ID, ВСД_ХозСубъект.DESCR
		|ORDER BY ВСД_ХозСубъект.DESCR";
	Если ЕстьУсловие = 0 Тогда 
		Если УстановленОтбор = 1 Тогда 
			текЭлемент = ТекущийЭлемент();
		
			СписокЭлементов = ПолучитьПустоеЗначение();
			
			ИспользоватьСписокЭлементов();
			
			Форма.Обновить();
			Попытка
				АктивизироватьОбъект(текЭлемент);
			Исключение
			КонецПопытки;
		КонецЕсли;
		УстановленОтбор = 0;
	Иначе
		ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
		Если ГМ.ЭтоSQL = 1 Тогда
			ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса, ВремТЗ); 
			
		//глБраузер(ВремТЗ);
		Иначе
			Запрос = ГМ.базаДанных.НовыйЗапрос();
			ВремТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		КонецЕсли;

		СписокЭлементов = СоздатьОбъект("СписокЗначений");

		ВремТЗ.Выгрузить(СписокЭлементов,,,1);
		
		УстановленОтбор = 1;
		ИспользоватьСписокЭлементов(СписокЭлементов);
		Форма.Обновить();
	КонецЕсли;       
			
КонецПроцедуры 

//******************************************************************************
Процедура тпОтборПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Пометка");
	ОбъектЯчейка.ЗначениеФлажка=ДанныеСтроки.Получить("Пометка");
	ОбъектЯчейка.ОтображатьФлажок=1;
	ОбъектЯчейка.ОтображатьТекст=0;
КонецПроцедуры

//******************************************************************************
Процедура тпОтборВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона =3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзОтбор);

		КодКолонки = Колонка.Данные;
		
		Если (КодКолонки = "Значение") Тогда
			_знач = тзОтбор.Значение;
			Если ТипЗначенияСтр(_знач) = "Справочник" Тогда
				ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, "ВыбЗнач", "0x00000200");		
			Иначе
				ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, "ВыбЗнач", "0x100000");		
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура тпОтборПриРедактированииЗначения(ТабличноеПоле, Стр, Колонка, ТипРегиона, __знач)
	Если ТипРегиона = 3 Тогда
		КодКолонки = Колонка.Данные;

		Если КодКолонки = "Значение" Тогда
			ТекЗнач = ТабличноеПоле.ТекущиеДанные.Значение;

			Если ТекЗнач <> __знач Тогда
				тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Значение",__знач);
				Если ПустоеЗначение(__знач) = 0 Тогда
					тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Пометка",1);
				Иначе
					тзОтбор.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,"Пометка",0);
				КонецЕсли;
				ТабличноеПоле.ОбновитьСтроки();
				УстановитьОтборПоЗакладкам();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//******************************************************************************
Процедура тпПлощадкиВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона = 3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзПлощадки);
		КодКолонки = Колонка.Данные;
		Если КодКолонки = "Грузополучатель" Тогда
			_знач = тзПлощадки.Грузополучатель;
			ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, "Грузополучатель", "0x00000200");		
		Иначе
			Если ТекущийЭлемент().ЭтоГруппа() = 0 Тогда
				ОткрытьФорму(тзПлощадки.Площадка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)
	ТекЭлем = ТекущийЭлемент();
	Если ПустоеЗначение(ТекЭлем) = 0 Тогда
		Если ЭлементДиалога = "Грузополучатель" Тогда   
			ВидСтравочника = Метаданные.Справочник("ВСД_Площадка").Реквизит("Контрагент").Вид;
			Если Метаданные.Справочник(ВидСтравочника).Владелец.Выбран() = 1 Тогда
				СуперВладелец = ТекЭлем.Контрагент;
				Если СуперВладелец.Выбран() = 1 Тогда
					Парам = "";
					ОткрытьФорму("Справочник."+ВидСтравочника,Парам);
					Парам.ИспользоватьВладельца(СуперВладелец);
					ФлагПродолжения = 0;           
				Иначе
					Сообщить("Не выбран контрагент ХозСубъекта!");
					ФлагПродолжения = 0;           
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура тпПлощадкиПриРедактированииЗначения(ТабличноеПоле, Стр, Колонка, ТипРегиона, __знач)
	Если ТипРегиона = 3 Тогда
		КодКолонки = Колонка.Данные;

		Если КодКолонки = "Грузополучатель" Тогда
			ТекЗнач = ТабличноеПоле.ТекущиеДанные.Грузополучатель;

			Если ТекЗнач <> __знач Тогда
				тзПлощадки.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,КодКолонки,__знач);

				Спр = СоздатьОбъект("Справочник.ВСД_Площадка");
				Спр.НайтиЭлемент(ТабличноеПоле.ТекущиеДанные.Площадка);
				Спр.Контрагент = __знач;
				Спр.Записать();
				
				тпПлощадки.ОбновитьСтроки();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
	
//******************************************************************************
Процедура ПриВыбореОбъектаЗакладки()
	Если ПустоеЗначение(тпЗакладки)=1 Тогда Возврат; КонецЕсли;
	стрИмяЗакладки=тпЗакладки.ТекущаяКолонка.Имя;
	текЭлемент=ТекущийЭлемент();
	
	Если стрИмяЗакладки="Отбор" Тогда
		Форма.ИспользоватьСлой("Общий,Отбор", 2);
	ИначеЕсли стрИмяЗакладки="ОбщаяИнформация" Тогда
	ИначеЕсли стрИмяЗакладки="Площадки" Тогда
		Если текЭлемент.Выбран() = 0 Тогда Возврат;
		КонецЕсли;
		тзПлощадки.УдалитьСтроки();
		Если ПустаяСтрока(текЭлемент.GUID) = 0 Тогда
			Спр = СоздатьОбъект("Справочник.ВСД_Площадка");
			Спр.ВыбратьЭлементыПоРеквизиту("GuidХозСубъекта",текЭлемент.GUID);
			Пока Спр.ПолучитьЭлемент() = 1 Цикл
				тзПлощадки.НоваяСтрока();
				тзПлощадки.Наименование = Спр.Наименование;
				тзПлощадки.Грузополучатель = Спр.Контрагент;
				тзПлощадки.GUID = Спр.GUID;
				тзПлощадки.Адрес = Спр.Адрес;
				тзПлощадки.Площадка = Спр.ТекущийЭлемент();
			КонецЦикла;
		КонецЕсли;
		тпПлощадки.ОбновитьСтроки();
		Форма.ИспользоватьСлой("Общий,Площадки", 2);
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Функция ПриОбновленииФормы()
	текЭлемент=ТекущийЭлемент();
	Если текЭлемент.Выбран()=0 Тогда Возврат ""; КонецЕсли;
	Если ПредыдущийЭлемент=текЭлемент Тогда Возврат ""; КонецЕсли;
	ПредыдущийЭлемент=текЭлемент;

    ПриВыбореОбъектаЗакладки();
КонецФункции

//******************************************************************************
Процедура тпОтборПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)

	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзОтбор);
	_знач = тзОтбор.Пометка;
	НовЗнач = ?(_знач=1,0,1);
	тзОтбор.Пометка = НовЗнач;
	ТабличноеПоле.ОбновитьСтроки();
	
	УстановитьОтборПоЗакладкам();

КонецПроцедуры

//******************************************************************************
Процедура тпЗакладкиПриВыбореЗаголовка(тпЗакладки, ОбъектКолонка)
	ГМ._ЗакладкиВыбор(тпЗакладки, ОбъектКолонка);
	ПриВыбореОбъектаЗакладки();
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);

	Если Форма.МодальныйРежим() = 0 Тогда
		Попытка

			оПривязки.Привязка("МногострочнаяЧасть","H","Форма","W","Форма");			
			оПривязки.Привязка("тпЗакладки,рамкаЗакладки", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("тпПлощадки", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("тпОтбор", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("кнЗакрыть, кнОткрытьПлощадки, кнДействия","T","Форма");
			
		Исключение
			//привязки не инициализировались, попробуем еще раз
			Сообщить("Справочник ВСД_Продукция_Элемент - Не удалось инициализировать привязки");			
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//******************************************************************************
Процедура ПослеСозданияФормы()
	Перем ВремТЗ;
	
	// Закладки
	спЗакладки=СоздатьОбъект("СписокЗначений");
	спЗакладки.ДобавитьЗначение("Отбор", "Отбор");
// 	спЗакладки.ДобавитьЗначение("ОбщаяИнформация", "Общая информация");
	спЗакладки.ДобавитьЗначение("Площадки", "Площадки");

	ОбъектФорма=СоздатьОбъект("Форма");
	ОбъектФорма.УстановитьФорму(Форма);

	тпЗакладки=ОбъектФорма.СоздатьЭлементУправления("ТабличноеПоле",Форма.тпЗакладки);
	ГМ._ЗакладкиЗаполнить(тпЗакладки, спЗакладки);

	// Отбор
	тзОтбор = СоздатьОбъект("ТаблицаЗначений");
	тзОтбор.НоваяКолонка("Пометка","Число",,,"Вкл",3);
	тзОтбор.НоваяКолонка("Элемент",,,,"Представление реквизита",10);
	тзОтбор.НоваяКолонка("Значение",,,,"Значение",30);
	
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Отбор по контрагенту";
	тзОтбор.Значение = ПолучитьПустоеЗначение("Справочник.Контрагенты");

	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Наименование";
	тзОтбор.Значение = "";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "ИНН";
	тзОтбор.Значение = "";
	тзОтбор.НоваяСтрока();
	тзОтбор.Элемент = "Наименование Площадки";
	тзОтбор.Значение = "";
	
	ЗначениеИзФайла(КаталогПользователя()+"ОтборХозСубъектов.txt",ВремТЗ);
	
	Если ТипЗначенияСтр(ВремТЗ) = "ТаблицаЗначений" Тогда
		Попытка
			ВремТЗ.ВыбратьСтроки();
			Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл     
				Поз = 0;
				Если тзОтбор.НайтиЗначение(ВремТЗ.Элемент, Поз, "Элемент") = 1 Тогда
					Если (ВремТЗ.Элемент = "Отбор по контрагенту") Тогда          
						Если (ПустоеЗначение(ВремТЗ.Значение) = 0) Тогда
							тзОтбор.УстановитьЗначение(Поз, "Пометка", ВремТЗ.Пометка);
							тзОтбор.УстановитьЗначение(Поз, "Значение", ВремТЗ.Значение);
						КонецЕсли;
					ИначеЕсли (ПустоеЗначение(ВремТЗ.Значение) = 0) Тогда
						тзОтбор.УстановитьЗначение(Поз, "Значение", ВремТЗ.Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
	КонецЕсли;       
	
	тпОтбор=ГМ.СоздатьТабличноеПоле(Контекст, "тпОтбор", тзОтбор, 1);
	
	// Площадки
	ВидСтравочника = Метаданные.Справочник("ВСД_Площадка").Реквизит("Контрагент").Вид;
	
	тзПлощадки= СоздатьОбъект("ТаблицаЗначений");
	тзПлощадки.НоваяКолонка("Наименование",,,,"Наименование",10);
	тзПлощадки.НоваяКолонка("Грузополучатель","Справочник."+ВидСтравочника,,,"Грузополучатель",20); 
	тзПлощадки.НоваяКолонка("GUID",36,,,"GUID",15); 
	тзПлощадки.НоваяКолонка("Адрес",,,,"Адрес",30); 
	тзПлощадки.НоваяКолонка("Площадка");

	тпПлощадки=ГМ.СоздатьТабличноеПоле(Контекст, "тпПлощадки", тзПлощадки, 0);
	
	УстановитьОтборПоЗакладкам();
	ПриВыбореОбъектаЗакладки();	

КонецПроцедуры

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии()
	ЗначениеВФайл(КаталогПользователя()+"ОтборХозСубъектов.txt",тзОтбор);
КонецПроцедуры // ПриЗакрытии()
	
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры
