////////////////////////////////////////////////////////////////////////////////
// ѕ≈–≈ћ≈ЌЌџ≈ ћќƒ”Ћя
// 
ѕерем ƒокумент”дЋичность, ёрјдрес, ‘актјдрес; // ƒокумент физ. лица, адреса юр/физ. лица.
ѕерем ¬ирт–еквизитыѕлательщика»лиѕолучател€;

////////////////////////////////////////////////////////////////////////////////
// ѕ–ќ÷≈ƒ”–џ » ‘”Ќ ÷»» ћќƒ”Ћя
// 
//******************************************************************************
// —формировать–еквизит(–еквизит‘ормы, Ёлементƒиалога)
//
// ѕараметры:
//  –еквизит‘ормы     - строка Ц значение реквизита в диалоге формы.
//  Ёлементƒиалога    - строка Ц идентификатор редактируемго элемента диалога.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ѕроцедура устанавливает доступность редактировани€ реквизита 
// "ѕолучатель". ≈сли реквизит недоступен, данные  
// пол€ заполн€ютс€ стандартным представлением.
//
ѕроцедура —формировать–еквизит(–еквизит‘ормы, Ёлементƒиалога)
	
	≈сли ѕуста€—трока(¬ирт–еквизитыѕлательщика»лиѕолучател€) = 1 “огда

		//заполн€ем стандартным представлением		
		–еквизит‘ормы = "";
		ѕараметры = —оздатьќбъект("—писок«начений");
		
		¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());

		≈сли ¬идёр‘изЋица <> "‘изЋица" “огда
			ѕараметры.ƒобавить«начение(—окрЋѕ(»ЌЌёрЋица),"»ЌЌ");
			ѕараметры.ƒобавить«начение(?(ѕуста€—трока(ѕолнЌаименованиеёрЋица)=1,ЌаименованиеёрЋица,ѕолнЌаименованиеёрЋица),"Ќаименование онтрагента");

		»наче
			ѕараметры.ƒобавить«начение(—окрЋѕ(»ЌЌ‘изЋица),"»ЌЌ");
			ѕараметры.ƒобавить«начение(?(ѕуста€—трока(ѕолнЌаименование‘изЋица)=1,Ќаименование‘изЋица,ѕолнЌаименование‘изЋица),"Ќаименование онтрагента");
			
		 онец≈сли;
		
		ѕараметры.ƒобавить«начение(—окрЋѕ(Ќомер—чета),"Ќомер—чета");
		ѕараметры.ƒобавить«начение(Ѕанк,"Ѕанк");
		ѕараметры.ƒобавить«начение(Ѕанкƒл€–асчетов,"Ѕанкƒл€–асчетов");

		гл–еквизитыѕлательщикаѕолучател€(ѕараметры);

		–еквизит‘ормы = ѕараметры.ѕолучить("–езультат");
		
		‘орма.ѕолучитьјтрибут(Ёлементƒиалога).ƒоступность(0);

	»наче
		
		–еквизит‘ормы = ¬ирт–еквизитыѕлательщика»лиѕолучател€;
		‘орма.ѕолучитьјтрибут(Ёлементƒиалога).ƒоступность(1);
		
	 онец≈сли;
	
 онецѕроцедуры // —формировать–еквизит()

//******************************************************************************
// ѕри»змененииќсн—чета()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ќбновл€ет реквизиты диалога при изменении основного счета.
//
ѕроцедура ѕри»змененииќсн—чета()
	
	// ѕроверка соответсви€ основного счета юр. / физ. лицу.
	≈сли ќсновной—чет.ёр‘изЋицо <> ёр‘изЋицо “огда
		ќсновной—чет = ѕолучитьѕустое«начение("—правочник.Ѕанковские—чета");
	 онец≈сли;

	// «аполнение реквизитов сло€ "ќсновной—чет".
	Ќаименованиеќсн—чета = ќсновной—чет.Ќаименование;
	Ѕанк                 = ќсновной—чет.Ѕанк;
	Ѕанкƒл€–асчетов      = ќсновной—чет.Ѕанкƒл€–асчетов;
	Ќомер—чета           = ќсновной—чет.Ќомер—чета;
	¬алюта—чета          = ќсновной—чет.¬алюта—чета;
	Ќазначениеѕлатежа    = ќсновной—чет.Ќазначение;
	¬ирт–еквизитыѕлательщика»лиѕолучател€ = ќсновной—чет.–еквизитыѕлательщика»лиѕолучател€;
 	
	—формировать–еквизит(ѕлательщикѕолучатель, "ѕлательщикѕолучатель");
	
 онецѕроцедуры // ѕри»змененииќсн—чета()

//******************************************************************************
// ѕри»змененииёр‘изЋица()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ќбновл€ет реквизиты диалога при изменении юр. / физ. лица.
//
ѕроцедура ѕри»змененииёр‘изЋица()
	
	¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());
	
	// ѕроверка вида юр. / физ. лица.
	≈сли ¬идёр‘изЋица <> ёр‘изЋицо.¬ид() “огда
		ёр‘изЋицо = ѕолучитьѕустое«начение("—правочник."+¬идёр‘изЋица);
	 онец≈сли;
	
	// —троки неограниченной длины надо очищать тщательнее!
	
	≈сли ¬идёр‘изЋица <> "‘изЋица" “огда
		// «аполнение реквизитов сло€ "ёрЋицо".
		ЌаименованиеёрЋица      = ёр‘изЋицо.Ќаименование;
		ѕолнЌаименованиеёрЋица  = ёр‘изЋицо.“екущийЁлемент().ѕолнЌаименование;
		»ЌЌёрЋица               = ёр‘изЋицо.»ЌЌ;
		“елефоныёрЋица          = ёр‘изЋицо.“екущийЁлемент().“елефоны;
		ќ ѕќ                    = ёр‘изЋицо.ќ ѕќ;
		
	»наче
		// «аполнение реквизитов сло€ "‘изЋицо".
		Ќаименование‘изЋица     = ёр‘изЋицо.Ќаименование;
		ѕолнЌаименование‘изЋица = ёр‘изЋицо.“екущийЁлемент().ѕолнЌаименование;
		»ЌЌ‘изЋица              = ёр‘изЋицо.»ЌЌ;
		“елефоны‘изЋица         = ёр‘изЋицо.“екущийЁлемент().“елефоны;
		ƒокумент”дЋичность      = ёр‘изЋицо.“екущийЁлемент().ƒокумент”дЋичность;
	 онец≈сли;
	
	ёрјдрес                     = ёр‘изЋицо.“екущийЁлемент().ёрјдрес;
	‘актјдрес                   = ёр‘изЋицо.“екущийЁлемент().‘актјдрес;
	
	// ѕроверка соответсви€ основного счета юр. / физ. лицу.
	≈сли ќсновной—чет.ёр‘изЋицо <> ёр‘изЋицо “огда
		ѕри»змененииќсн—чета();
	 онец≈сли;

 онецѕроцедуры // ѕри»змененииёр‘изЋица()

//******************************************************************************
// ѕри»зменении¬ида онтрагента()
//
// ѕараметры:
//  
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//  ¬ид онтрагента.
//
// ќписание:
//  ќтрабатывает действи€, необходимые при смене вида контрагента.
//
ѕроцедура ѕри»зменении¬ида онтрагента()
	
	¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());
	
	// ѕроверка вида юр. / физ. лица.
	≈сли ¬идёр‘изЋица <> ёр‘изЋицо.¬ид() “огда
		ѕри»змененииёр‘изЋица();
	 онец≈сли;
	
	// ”правление видимостью слоев.
	≈сли ¬идёр‘изЋица <> "‘изЋица" “огда
		‘орма.«акладки.”становить«начение(1, " онтрагент,  нопки, ёрЋицо", "ќсновные");
	»наче
		‘орма.«акладки.”становить«начение(1, " онтрагент,  нопки, ‘изЋицо", "ќсновные");
	 онец≈сли;
	
	≈сли ‘орма.«акладки.“екуща€—трока() = 1 “огда
		‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(1), 2);
	 онец≈сли;
	
 онецѕроцедуры // ѕри»зменении¬ида онтрагента()

//******************************************************************************
// ѕри»зменении онтрол€ редита()
//
// ѕараметры:
//  Ќет
//
// ¬озвращаемое значение:
//  Ќет
//
// ќписание:
//
ѕроцедура ѕри»зменении онтрол€ редита()
	
	‘орма.√лубина редита.ƒоступность(1-Ќе онтролировать редит);
	‘орма.—умма редита.ƒоступность(1-Ќе онтролировать редит);
	
 онецѕроцедуры // ѕри»зменении онтрол€ редита()

//******************************************************************************
// ѕри»змененииќснƒоговора()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ќбновл€ет реквизиты диалога при изменении основного договора.
//
ѕроцедура ѕри»змененииќснƒоговора()
	
	// ѕроверка соответсви€ договора контрагенту.
	≈сли ќсновнойƒоговор.¬ладелец <> “екущийЁлемент() “огда
		ќсновнойƒоговор = ѕолучитьѕустое«начение("—правочник.ƒоговоры");
	 онец≈сли;

	// «аполнение реквизитов сло€ "ќсновнойƒоговор".
	Ќаименованиеќснƒоговора      = ќсновнойƒоговор.Ќаименование;
	¬алюта¬заиморасчетов         = ќсновнойƒоговор.¬алюта¬заиморасчетов;
	“ип÷ен                       = ќсновнойƒоговор.“ип÷ен;
	—кидка                       = ќсновнойƒоговор.—кидка;
	√лубина редита               = ќсновнойƒоговор.√лубина редита;
	—умма редита                 = ќсновнойƒоговор.—умма редита;
	Ќе онтролировать редит       = ќсновнойƒоговор.Ќе онтролировать редит;
	‘иксировать урс«адолжностей  = ќсновнойƒоговор.‘иксировать урс«адолжностей;
	
	ѕри»зменении онтрол€ редита();
	
 онецѕроцедуры // ѕри»змененииќснƒоговора()

//******************************************************************************
// ѕри»змененииќсн—войства()
//
// ѕараметры: 
//
// ¬озвращаемое значение:
//  Ќет
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ќбновл€ет реквизит справочника при изменении реквизита формы
//
ѕроцедура ѕри»змененииќсн—войства()
	
	// ѕроверка соответстви€ выбранного значени€
	≈сли —войство.¬ладелец <>  онстанта.¬ид—войства онтрагентов “огда 
		—войство = ѕолучитьѕустое«начение("—правочник.«начени€—войств");
	 онец≈сли;
	
 онецѕроцедуры // ѕри»змененииќсн—войства()

//******************************************************************************
// Ќужно«аписатьЁлемент(ќбъект)
//
// ѕараметры:
//  ќбъект - объект, созданный методом "—оздатьќбъект()".
//
// ¬озвращаемое значение:
//  1 - объект нужно записывать.
//  0 - объект не нужно записывать.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ѕровер€ет необходимость записи объекта.
//
‘ункци€ Ќужно«аписатьЁлемент(ќбъект)
	
	// ќбъект может записыватьс€ впервые.
	≈сли ѕустое«начение(ќбъект.“екущийЁлемент()) = 1 “огда
		¬озврат 1;
	 онец≈сли;
	
	// “екущее значение атрибута может отличаеттс€ от записанного.
	≈сли ќбъект.Ќаименование <> ќбъект.“екущийЁлемент().Ќаименование “огда
		¬озврат 1;
	 онец≈сли;
	
	// ѕроверка значений реквизитов объекта.
	мд—правочник = ћетаданные.—правочник(ќбъект.¬ид());
	ƒл€ Ќомер = 1 ѕо мд—правочник.–еквизит() ÷икл
		
		// ѕериодические реквизиты не сравниваютс€.
		≈сли мд—правочник.–еквизит(Ќомер).ѕериодический = 1 “огда
			ѕродолжить;
		 онец≈сли;
		
		»д = мд—правочник.–еквизит(Ќомер).»дентификатор;
		// “екущее значение атрибута может отличаеттс€ от записанного.
		≈сли ќбъект.ѕолучитьјтрибут(»д) <> ќбъект.“екущийЁлемент().ѕолучитьјтрибут(»д) “огда
			¬озврат 1;
		 онец≈сли;
	 онец÷икла;
	
	¬озврат 0;
	
 онец‘ункции // Ќужно«аписатьЁлемент()

//******************************************************************************
// ћожно«аписатьЁлемент(ќбъект)
//
// ѕараметры:
//  ќбъект - объект, созданный методом "—оздатьќбъект()".
//
// ¬озвращаемое значение:
//  1 - объект можно записывать.
//  0 - объект нельз€ записывать.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ѕровер€ет возможность записи объекта.
//
‘ункци€ ћожно«аписатьЁлемент(ќбъект)
	
	≈сли      ќбъект.¬ыбран() = 0 “огда
		¬озврат 1;

	»наче≈сли ќбъект.Ѕлокировка(1) = 1 “огда
		¬озврат 1;
	
	»наче
		Ёлемент = ќбъект.“екущийЁлемент();

		—тр = 
		"Ёлемент справочника """+Ёлемент.ѕредставление¬ида()+""": ("+
		Ёлемент. од+") """+Ёлемент.Ќаименование+""" заблокирован!";
		ѕредупреждение(—тр, 60);
		
		¬озврат 0;
	 онец≈сли;
	
 онец‘ункции // ћожно«аписатьЁлемент()

//******************************************************************************
// «аписьёр‘изЋица()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  1 - запись произведена.
//  0 - запись не произведена.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ќсуществл€ет запись юр/физ. лица.
//
‘ункци€ «аписьёр‘изЋица()
	
	¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());
	
	// ќбъект дл€ записи юр/физ. лица.
	ќбъект = —оздатьќбъект("—правочник."+¬идёр‘изЋица);
	≈сли ќбъект.ЌайтиЁлемент(ёр‘изЋицо) = 0 “огда
		ќбъект.Ќовый();
	 онец≈сли;
	
	≈сли ¬идёр‘изЋица <> "‘изЋица" “огда
		// «аполнение реквизитов сло€ "ёрЋицо".
		ќбъект.Ќаименование       = ЌаименованиеёрЋица;
		ќбъект.ѕолнЌаименование   = ѕолнЌаименованиеёрЋица;
		ќбъект.»ЌЌ                = »ЌЌёрЋица;
		ќбъект.“елефоны           = “елефоныёрЋица;
		ќбъект.ќ ѕќ               = ќ ѕќ;
	»наче
		// «аполнение реквизитов сло€ "‘изЋицо".
		ќбъект.Ќаименование       = Ќаименование‘изЋица;
		ќбъект.ѕолнЌаименование   = ѕолнЌаименование‘изЋица;
		ќбъект.»ЌЌ                = »ЌЌ‘изЋица;
		ќбъект.“елефоны           = “елефоны‘изЋица;
		ќбъект.ƒокумент”дЋичность = ƒокумент”дЋичность;
	 онец≈сли;
	
	ќбъект.ёрјдрес                = ёрјдрес;
	ќбъект.‘актјдрес              = ‘актјдрес;  
	                                          
	ќбъект.»спользоватьƒату('01.01.1980');
	≈сли ¬идёр‘изЋица = "—воиёрЋица" тогда
		≈сли ќбъект.ћетод”чета–озницы.¬ыбран() = 0 “огда
		    ќбъект.ћетод”чета–озницы = ѕеречисление.ћетоды”чета–озницы.ѕоѕродажным÷енам;
		 онец≈сли;
		
		≈сли ќбъект.ћетод–асчета—ебестоимости.¬ыбран() = 0 “огда
		    ќбъект.ћетод–асчета—ебестоимости = ѕеречисление.ћетоды–асчета—ебестоимости.FIFO;
		 онец≈сли;
	
		≈сли ќбъект.ћетодќпределени€¬ыручки.¬ыбран() = 0 “огда
		    ќбъект.ћетодќпределени€¬ыручки = ѕеречисление.ћетодыќпределени€¬ыручки.ѕоќтгрузке;
		 онец≈сли;                   
	 онец≈сли;

	// ѕроверка необходимости и возможности записи.
	≈сли      Ќужно«аписатьЁлемент(ќбъект) = 0 “огда
		¬озврат 1;
	»наче≈сли ћожно«аписатьЁлемент(ќбъект) = 0 “огда
		¬озврат 0;
	 онец≈сли;
	
	ќбъект.«аписать();
	
	// ”становка юридического / физичского лица контрагента.
	ёр‘изЋицо = ќбъект.“екущийЁлемент();
	
	¬озврат 1;
	
 онец‘ункции // «аписьёр‘изЋица()

//******************************************************************************
// «аписьќснƒоговора()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  1 - запись произведена.
//  0 - запись не произведена.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ќсуществл€ет запись основного счета.
//
‘ункци€ «аписьќснƒоговора()
	
	// ќбъект дл€ записи основного счета.
	ќбъект = —оздатьќбъект("—правочник.ƒоговоры");
	
	≈сли ќбъект.ЌайтиЁлемент(ќсновнойƒоговор) = 0 “огда
		ќбъект.Ќовый();
		ќбъект.¬ладелец = “екущийЁлемент();
	 онец≈сли;
		
	// «аполнение реквизитов сло€ "ќсновнойƒоговор".
	ќбъект.Ќаименование                = Ќаименованиеќснƒоговора;
	ќбъект.¬алюта¬заиморасчетов        = ¬алюта¬заиморасчетов;
	ќбъект.“ип÷ен                      = “ип÷ен;
	ќбъект.—кидка                      = —кидка;
	ќбъект.√лубина редита              = √лубина редита;
	ќбъект.—умма редита                = —умма редита;
	ќбъект.Ќе онтролировать редит      = Ќе онтролировать редит;
	ќбъект.‘иксировать урс«адолжностей = ‘иксировать урс«адолжностей;
	
	// ѕроверка необходимости и возможности записи.
	≈сли      Ќужно«аписатьЁлемент(ќбъект) = 0 “огда
		¬озврат 1;
	»наче≈сли ћожно«аписатьЁлемент(ќбъект) = 0 “огда
		¬озврат 0;
	 онец≈сли;
	
	ќбъект.«аписать();
	
	// ”становка основного договора.
	ќсновнойƒоговор = ќбъект.“екущийЁлемент();
	
	¬озврат 1;
	
 онец‘ункции // «аписьќснƒоговора()

//******************************************************************************
// «аписьќсн—чета()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  1 - запись произведена.
//  0 - запись не произведена.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ќсуществл€ет запись основного счета.
//
‘ункци€ «аписьќсн—чета()
	
	// —чет записываетс€, если указан номер.
	≈сли (ќсновной—чет.¬ыбран() = 0) » (ѕуста€—трока(Ќомер—чета) = 1) “огда
		¬озврат 1;
	 онец≈сли;
	
	// ќбъект дл€ записи основного счета.
	ќбъект = —оздатьќбъект("—правочник.Ѕанковские—чета");
	
	≈сли ќбъект.ЌайтиЁлемент(ќсновной—чет) = 0 “огда
		ќбъект.Ќовый();
	 онец≈сли;
		
	// «аполнение реквизитов сло€ "ќсновной—чет".
	ќбъект.Ќаименование      = Ќаименованиеќсн—чета;
	ќбъект.ёр‘изЋицо         = ёр‘изЋицо;
	ќбъект.Ѕанк              = Ѕанк;
	ќбъект.Ѕанкƒл€–асчетов   = Ѕанкƒл€–асчетов;
	ќбъект.Ќомер—чета        = Ќомер—чета;
	ќбъект.¬алюта—чета       = ¬алюта—чета;
	ќбъект.Ќазначение        = Ќазначениеѕлатежа;
	ќбъект.–еквизитыѕлательщика»лиѕолучател€ = ¬ирт–еквизитыѕлательщика»лиѕолучател€;
	
	// ѕроверка необходимости и возможности записи.
	≈сли      Ќужно«аписатьЁлемент(ќбъект) = 0 “огда
		¬озврат 1;
	»наче≈сли ћожно«аписатьЁлемент(ќбъект) = 0 “огда
		¬озврат 0;
	 онец≈сли;
	
	ќбъект.«аписать();
	
	// ”становка основного счета.
	ќсновной—чет = ќбъект.“екущийЁлемент();
	
	¬озврат 1;
	
 онец‘ункции // «аписьќсн—чета()

//******************************************************************************
// «аписьќсн—войства()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  1 - запись произведена.
//  0 - запись не произведена.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  ќсуществл€ет запись основного свойства.
//
‘ункци€ «аписьќсн—войства()
	
	// ќбъект дл€ записи основного свойства.
	ќбъект = —оздатьќбъект("—правочник.—войства онтрагентов");
	ќбъект.»спользовать¬ладельца(“екущийЁлемент());
	
	≈сли —войство.¬ыбран() = 0  “огда
		// ≈сли не пустое основное свойство, то надо удалить 
		// соответствующий элемент справочника свойств контрагентов.
		≈сли ќсновное—войство.¬ыбран() = 1 “огда
			≈сли ќбъект.ЌайтиЁлемент(ќсновное—войство) = 1 “огда
				ќбъект.”далить(1);
			 онец≈сли;
			
			ќсновное—войство = ѕолучитьѕустое«начение("—правочник.—войства онтрагентов");
		 онец≈сли;
		
		¬озврат 1;
	 онец≈сли;
	
	≈сли ќбъект.Ќайтиѕо–еквизиту("¬ид—войства",  онстанта.¬ид—войства онтрагентов, 0) = 0 “огда
		ќбъект.Ќовый();
		ќбъект.¬ид—войства =  онстанта.¬ид—войства онтрагентов;
	 онец≈сли;

	ќбъект.«начение—войства = —войство;
	
	// ѕроверка необходимости и возможности записи.
	≈сли      Ќужно«аписатьЁлемент(ќбъект) = 0 “огда
		¬озврат 1;
	»наче≈сли ћожно«аписатьЁлемент(ќбъект) = 0 “огда
		¬озврат 0;
	 онец≈сли;
	
	ќбъект.«аписать();
	
	// ”становка основного свойства контрагента.  
	ќсновное—войство = ќбъект.“екущийЁлемент();
	
	¬озврат 1;
	
 онец‘ункции // «аписьќсн—войства()

//******************************************************************************
// јвтозаполнение()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//  ЌаименованиеёрЋица, Ќаименование‘изЋица, ѕолнЌаименование‘изЋица.
//
// ќписание:
//  јвтозаполнение наименований.
//
ѕроцедура јвтозаполнение()
	
	≈сли ‘орма.јктивныйЁлемент() = "ЌаименованиеёрЋица" “огда
		Ќаименование = —окрЋѕ(ЌаименованиеёрЋица);
		
		≈сли ѕуста€—трока(ѕолнЌаименованиеёрЋица) = 1 “огда
			ѕолнЌаименованиеёрЋица = " """+—окрЋѕ(ЌаименованиеёрЋица)+"""";
		 онец≈сли;
		
	»наче≈сли ‘орма.јктивныйЁлемент() = "Ќаименование‘изЋица" “огда
		Ќаименование = —окрЋѕ(Ќаименование‘изЋица);
		
	»наче≈сли ‘орма.јктивныйЁлемент() = "ѕолнЌаименование‘изЋица" “огда
		≈сли ѕуста€—трока(Ќаименование‘изЋица) = 1 “огда
			Ќаименование‘изЋица = гл‘амили€»м€ќтчество(ѕолнЌаименование‘изЋица);
			Ќаименование        = —окрЋѕ(Ќаименование‘изЋица);
		 онец≈сли;
		
	 онец≈сли;
	
 онецѕроцедуры // јвтозаполнение()

//******************************************************************************
// ѕри»зменении»ЌЌ()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//  »ЌЌёрЋица, »ЌЌ‘изЋица.
//
// ќписание:
//  ѕровер€ет уникальность »ЌЌ в справочнике юр. / физ. лиц.
//
ѕроцедура ѕри»зменении»ЌЌ()
	
	¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());
	
	// »ЌЌ и длина »ЌЌ.
	≈сли ¬идёр‘изЋица <> "‘изЋица" “огда
		»ЌЌ   = »ЌЌёрЋица;
		ƒлина = 20;
	»наче
		»ЌЌ   = »ЌЌ‘изЋица;
		ƒлина = 12;
	 онец≈сли;
	
	// »ЌЌ может быть не указан.	
	ƒлина = ћетаданные.—правочник(¬идёр‘изЋица).–еквизит("»ЌЌ").ƒлина;	
	≈сли —трƒлина(—окрЋѕ(»ЌЌ)) < ƒлина “огда
		¬озврат;
	 онец≈сли;
	
	// —писок найденных элементов с таким же »ЌЌ.
	—писок = —оздатьќбъект("—писок«начений");
	
	ќбъект = —оздатьќбъект("—правочник."+¬идёр‘изЋица);
	ќбъект.¬ыбратьЁлементыѕо–еквизиту("»ЌЌ", »ЌЌ, 0, 1);
	
	// ѕоиск элементов с таким же »ЌЌ.
	ѕока ќбъект.ѕолучитьЁлемент(1) = 1 ÷икл
		≈сли ќбъект.“екущийЁлемент() = ёр‘изЋицо “огда
			¬озврат; // элемент уже был записан
		»наче
			—писок.ƒобавить«начение(ќбъект.“екущийЁлемент());
		 онец≈сли;
	 онец÷икла;
	
	// Ёлементы с таким же »ЌЌ не найдены.
	≈сли —писок.–азмер—писка() = 0 “огда
		¬озврат;
	
	// Ќайден один элемент с таким же »ЌЌ.
	»наче≈сли —писок.–азмер—писка() = 1 “огда
		—тр = "¬ справочнике """+ќбъект.ѕредставление¬ида()+""" уже есть элемент с таким же »ЌЌ!
		      |¬ыбрать существующий элемент справочника?";
		
		≈сли ¬опрос(—тр, "ƒа+Ќет", 60) = "ƒа" “огда
			ёр‘изЋицо = —писок.ѕолучить«начение(1);
			ѕри»змененииёр‘изЋица();
			
			// јвтозаполнение наименовани€ контрагента.
			Ќаименование = ёр‘изЋицо.Ќаименование;
		 онец≈сли;
		
	// Ќайдено несколько элементов с таким же »ЌЌ.
	»наче
		—тр = "¬ справочнике """+ќбъект.ѕредставление¬ида()+""" уже есть элементы с таким же »ЌЌ!
		      |¬ыбрать один из существующих элементов справочника?";
		
		≈сли ¬опрос(—тр, "ƒа+Ќет", 60) = "ƒа" “огда
			≈сли —писок.¬ыбрать«начение(ёр‘изЋицо, "Ёлементы с »ЌЌ "+»ЌЌ, 0, 60, 0) = 1 “огда
				ѕри»змененииёр‘изЋица();
				
				// јвтозаполнение наименовани€ контрагента.
				Ќаименование = ёр‘изЋицо.Ќаименование;
			 онец≈сли;
		 онец≈сли;
		
	 онец≈сли;
	
 онецѕроцедуры // ѕри»зменении»ЌЌ()

//******************************************************************************
// ѕри»змененииЌомера—чета()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//  Ќомер—чета.
//
// ќписание:
//  ѕровер€ет уникальность номера банковского счета.
//
ѕроцедура ѕри»змененииЌомера—чета()
	
	—формировать–еквизит(ѕлательщикѕолучатель, "ѕлательщикѕолучатель");

	// Ќомер счета может быть не указан.	
	≈сли —трƒлина(—окрЋѕ(Ќомер—чета)) < 20 “огда
		¬озврат;
	 онец≈сли;
	
	// —писок найденных элементов с таким же номером счета.
	—писок = —оздатьќбъект("—писок«начений");
	
	ќбъект = —оздатьќбъект("—правочник.Ѕанковские—чета");
	ќбъект.¬ыбратьЁлементыѕо–еквизиту("ёр‘изЋицо", ёр‘изЋицо, 0, 1);
	
	// ѕоиск элементов с таким же номером счета.
	ѕока ќбъект.ѕолучитьЁлемент(1) = 1 ÷икл
		≈сли ќбъект.“екущийЁлемент() = ќсновной—чет “огда
			¬озврат; // элемент уже был записан
		»наче≈сли ќбъект.Ќомер—чета = Ќомер—чета “огда
			—писок.ƒобавить«начение(ќбъект.“екущийЁлемент());
		 онец≈сли;
	 онец÷икла;
	
	// Ёлементы с таким же номером счета не найдены.
	≈сли —писок.–азмер—писка() = 0 “огда
		¬озврат;
	
	// Ќайден один элемент с таким же номером счета.
	»наче≈сли —писок.–азмер—писка() = 1 “огда
		—тр = "¬ справочнике """+ќбъект.ѕредставление¬ида()+
		      """ уже есть элемент с таким же номером счета!
		      |¬ыбрать существующий элемент справочника?";
		
		≈сли ¬опрос(—тр, "ƒа+Ќет", 60) = "ƒа" “огда
			ќсновной—чет = —писок.ѕолучить«начение(1);
			ѕри»змененииќсн—чета();
		 онец≈сли;
		
	// Ќайдено несколько элементов с таким же номером счета.
	»наче
		—тр = "¬ справочнике """+ќбъект.ѕредставление¬ида()+
		      """ уже есть элементы с таким же номером счета!
		      |¬ыбрать один из существующих элементов справочника?";
		
		≈сли ¬опрос(—тр, "ƒа+Ќет", 60) = "ƒа" “огда
			≈сли —писок.¬ыбрать«начение(ќсновной—чет, "Ёлементы с номером счета "+Ќомер—чета, 0, 60, 0) = 1 “огда
				ѕри»змененииќсн—чета();
			 онец≈сли;
		 онец≈сли;
		
	 онец≈сли;
	
 онецѕроцедуры // ѕри»змененииЌомера—чета()

//******************************************************************************
// ѕо нопке«аполнитьќсновной—чет()
//
// ѕараметры:
//  Ќет.
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//   нопка кн«аполнитьќсновной—чет.
//
// ќписание:
//
ѕроцедура ѕо нопке«аполнитьќсновной—чет()

	ѕараметры = —оздатьќбъект("—писок«начений");

	¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());

	≈сли ¬идёр‘изЋица <> "‘изЋица" “огда
		ѕараметры.ƒобавить«начение(—окрЋѕ(»ЌЌёрЋица),"»ЌЌ");
		ѕараметры.ƒобавить«начение(?(ѕуста€—трока(ѕолнЌаименованиеёрЋица)=1,ЌаименованиеёрЋица,ѕолнЌаименованиеёрЋица),"Ќаименование онтрагента");

	»наче
		ѕараметры.ƒобавить«начение(—окрЋѕ(»ЌЌ‘изЋица),"»ЌЌ");
		ѕараметры.ƒобавить«начение(?(ѕуста€—трока(ѕолнЌаименование‘изЋица)=1,Ќаименование‘изЋица,ѕолнЌаименование‘изЋица),"Ќаименование онтрагента");
		
	 онец≈сли;

	ѕараметры.ƒобавить«начение(—окрЋѕ(Ќомер—чета),"Ќомер—чета");
	ѕараметры.ƒобавить«начение(Ѕанк,"Ѕанк");
	ѕараметры.ƒобавить«начение(Ѕанкƒл€–асчетов,"Ѕанкƒл€–асчетов");
	// 1-заполнение плательщика или получател€, 2-заполнение назначени€ платежа
	ѕараметры.ƒобавить«начение(1,"–ежим");
	ќткрыть‘ормућодально("ќбработка.¬водѕлатежных–еквизитов", ѕараметры);
	¬ирт–еквизитыѕлательщика»лиѕолучател€ = ?(ѕараметры.ѕолучить("–езультат")="јвто","",ѕараметры.ѕолучить("–езультат"));

	—формировать–еквизит(ѕлательщикѕолучатель, "ѕлательщикѕолучатель");
	
 онецѕроцедуры // ѕо нопке«аполнитьќсновной—чет()

//******************************************************************************
// ѕо нопкеќчистить()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//  кнќчиститьёрЋицо, кнќчистить‘изЋицо, кнќчиститьќсн—чет, кнќчистить—войство.
//
// ќписание:
//  ќчищает реквизиты контрагента.
//
ѕроцедура ѕо нопкеќчистить()
	
	¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());
	
	≈сли ‘орма.јктивныйЁлемент() = "кнќчиститьёрЋицо" “огда
		ёр‘изЋицо = ѕолучитьѕустое«начение("—правочник."+¬идёр‘изЋица);
		ѕри»змененииёр‘изЋица();
		
		јктивизировать("ЌаименованиеёрЋица");
		
	»наче≈сли ‘орма.јктивныйЁлемент() = "кнќчистить‘изЋицо" “огда
		ёр‘изЋицо = ѕолучитьѕустое«начение("—правочник."+¬идёр‘изЋица);
		ѕри»змененииёр‘изЋица();
		
		јктивизировать("Ќаименование‘изЋица");
		
	»наче≈сли ‘орма.јктивныйЁлемент() = "кнќчиститьќснƒоговор" “огда
		ќсновнойƒоговор = ѕолучитьѕустое«начение("—правочник.ƒоговоры");
		ѕри»змененииќснƒоговора();
		
		јктивизировать("Ќаименованиеќснƒоговора");
		
	»наче≈сли ‘орма.јктивныйЁлемент() = "кнќчиститьќсн—чет" “огда
		ќсновной—чет = ѕолучитьѕустое«начение("—правочник.Ѕанковские—чета");
		ѕри»змененииќсн—чета();
		
		јктивизировать("Ќаименованиеќсн—чета");
		
	»наче≈сли ‘орма.јктивныйЁлемент() = "кнќчистить—войство" “огда
		—войство= ѕолучитьѕустое«начение("—правочник.«начени€—войств");
		ѕри»змененииќсн—войства();
		
		јктивизировать("—войство");
	 онец≈сли;
	
 онецѕроцедуры // ѕо нопкеќчистить()

//******************************************************************************
// ѕо нопке¬вода”достоверени€()
//
// ѕараметры:
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//
// ќписание:
//  «десь описываетс€ процедура.
//
ѕроцедура ѕо нопке¬вода”достоверени€()
	
	ќткрыть‘ормућодально("ќбработка.¬вод”достоверени€", ƒокумент”дЋичность);
	
 онецѕроцедуры // ѕо нопке¬вода”достоверени€()

//******************************************************************************
// ѕо нопке¬водајдреса(јдрес1, јдрес2)
//
// ѕараметры:
//  јдрес1 - реквизит, в который будет введен адрес.
//  јдрес2 - реквизит, в который будет скопирован адрес.
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//   нопки ввода адреса.
//
// ќписание:
//  ¬ызывает обработку дл€ ввода адреса.
//
ѕроцедура ѕо нопке¬водајдреса(јдрес1, јдрес2)

	гл¬водјдреса(јдрес1);
	
	≈сли ѕуста€—трока(глѕредставлениејдреса(јдрес2)) = 1 “огда
		јдрес2 = јдрес1;
	 онец≈сли;
	
 онецѕроцедуры // ѕо нопке¬водајдреса()

//******************************************************************************
// ѕо нопкеќткрыть(ќбъект)
//
// ѕараметры:
//  ќбъект - объект, который необходимо открыть.
//
// ¬озвращаемое значение:
//  Ќет.
//
// ¬ызываетс€ из формул элементов диалога:
//   нопки "ќткрыть".
//
// ќписание:
//  ќткрывает форму объекта.
//
ѕроцедура ѕо нопкеќткрыть(ќбъект, Ёлементƒиалога="")
	
	≈сли ќбъект.¬ыбран() = 1 “огда
		ќткрыть‘ормућодально(ќбъект, , -1);
	»наче
		јктивизировать(Ёлементƒиалога, 1);
	 онец≈сли;
	
 онецѕроцедуры // ѕо нопкеќткрыть()

//******************************************************************************
// ѕо нопкеќткрыть—правочник(—правочник, «нач ѕараметр, «нач ќбъект=0)
//
// ѕараметры:
//  —правочник - "строка" - вид справочника.
//  ѕераметр   - параметр дл€ передачи в форму.
//  ќбъект     - объект, который следует активизировать в форме.
//
// ¬озвращаемое значение:
//  ¬ немодальном режиме - контекст открытой формы.
//
// ¬ызываетс€ из формул элементов диалога:
//   нопки открыти€ подчиненных справочников.
//
// ќписание:
//  ќткрывает форму списка указанного справочника.
//
‘ункци€ ѕо нопкеќткрыть—правочник(—правочник, «нач ѕараметр, «нач ќбъект=0)
	
	≈сли ѕустое«начение(ѕараметр) = 1 “огда
		ѕредупреждение("Ёлемент еще не записан. —правочник не может быть открыт!", 60);
		¬озврат ѕолучитьѕустое«начение();
	»наче≈сли —правочник = "Ћицензииѕоставщиковјлкогольнойѕродукции" “огда
	
		 онтекст‘ормы = "";
		ќткрыть‘орму("—правочник.Ћицензииѕоставщиковјлкогольнойѕродукции",  онтекст‘ормы);
		 онтекст‘ормы.»спользовать¬ладельца(“екущийЁлемент());
		
	»наче
		ќткрыть‘орму("—правочник."+—правочник, ѕараметр); 
	 онец≈сли;
		
	≈сли (“ип«начени€—тр(ѕараметр) = "√рупповой онтекст") » (ѕустое«начение(ќбъект) = 0) “огда
		ѕараметр.јктивизироватьќбъект(ќбъект);
	 онец≈сли;
	
	¬озврат ѕараметр;
	
 онец‘ункции // ѕо нопкеќткрыть—правочник()

////////////////////////////////////////////////////////////////////////////////
// ѕ–≈ƒќѕ–≈ƒ≈Ћ≈ЌЌџ≈ ѕ–ќ÷≈ƒ”–џ
// 
//******************************************************************************
// ѕредопределенна€ процедура.
//
ѕроцедура ¬водЌового(‘лаг опировани€)
	
	—войство = ¬осстановить«начение("ќсновное—войство онтрагентов");

	≈сли ‘лаг опировани€ = 1 “огда
		// Ёти реквизиты контрагента копировать не имеет смысла!
		ёр‘изЋицо       = ѕолучитьѕустое«начение("—правочник");
		ќсновнойƒоговор = ѕолучитьѕустое«начение("—правочник.ƒоговоры");
		ќсновной—чет    = ѕолучитьѕустое«начение("—правочник.Ѕанковские—чета");
		
		≈сли ѕустое«начение(ќсновное—войство) = 0 “огда // скопировали и основное свойство другого элемента
	        —войство         = ќсновное—войство.«начение—войства;
			ќсновное—войство = ѕолучитьѕустое«начение("—правочник.—войства онтрагентов");
		 онец≈сли;
		
	 онец≈сли;
	
	Ќаименованиеќснƒоговора = "ќсновной договор";
	¬алюта¬заиморасчетов    = гл«начениеѕо”молчанию("ќсновна€¬алюта¬заиморасчетов");
	
 онецѕроцедуры // ¬водЌового()

//******************************************************************************
// ѕредопределенна€ процедура.
//
ѕроцедура ѕриќткрытии()
	
	≈сли ‘орма.“олькоѕросмотр() = 1 “огда
		‘орма.кнќчиститьёрЋицо.ƒоступность(0);
		‘орма.кн¬водаёрјдресаёрЋица.ƒоступность(0);
		‘орма.кн¬вода‘актјдресаёрЋица.ƒоступность(0);
		
		‘орма.кнќчистить‘изЋицо.ƒоступность(0);
		‘орма.кн¬вода”достоверени€.ƒоступность(0);
		‘орма.кн¬водаёрјдреса‘изЋица.ƒоступность(0);
		‘орма.кн¬вода‘актјдреса‘изЋица.ƒоступность(0);
		
		‘орма.кнќчиститьќснƒоговор.ƒоступность(0);
		‘орма.кнќчистить—кидку.ƒоступность(0);
		
		‘орма.кнќчиститьќсн—чет.ƒоступность(0);
		‘орма.кнќчиститьЅанкƒл€–асчетов.ƒоступность(0);
		‘орма.кн«аполнитьќсновной—чет.ƒоступность(0);
		
		‘орма.кн«аписать.ƒоступность(0);
		‘орма.кнќ .ƒоступность(0);
		
		‘орма. нопкаѕо”молчанию("кн«акрыть");
	»наче
	    ‘орма. нопкаѕо”молчанию("кнќк");
	 онец≈сли;
	
	// ќпределение вида контрагента.
	Ќомер = ¬ид онтрагента.Ќайти«начение(ёр‘изЋицо.¬ид());
	¬ид онтрагента.“екуща€—трока(ћакс(Ќомер, 1)); 
	ѕри»зменении¬ида онтрагента();
	
	// «аполнение реквизитов диалога.
	// ≈сли реквизиты справочника не заполнены - в диалоге 
	// сохран€тс€ значени€, присвоенные в процедуре ¬водЌового().
	
	≈сли ёр‘изЋицо.¬ыбран() = 1 “огда
		ѕри»змененииёр‘изЋица();
	 онец≈сли;
	
	≈сли ќсновнойƒоговор.¬ыбран() = 1 “огда
		ѕри»змененииќснƒоговора();
	 онец≈сли;
	
	≈сли ќсновной—чет.¬ыбран() = 1 “огда
		ѕри»змененииќсн—чета();
	 онец≈сли;
	
	≈сли ќсновное—войство.¬ыбран() = 1 “огда
		—войство = ќсновное—войство.«начение—войства;
	 онец≈сли;
	
	// 1-й слой переназначаетс€ в ѕри»зменении¬ида онтрагента().
	јктивизировать("¬ид онтрагента");
	
	// ќпределим текущую закладку
	«акладка = 0;
	≈сли ѕустое«начение(‘орма.ѕараметр) = 0  “огда // могли передать нужную закладку
		«акладка = ‘орма.«акладки.ѕолучить(‘орма.ѕараметр);
	 онец≈сли; 
	«акладка = ћакс(1, ‘орма.«акладки.Ќайти«начение(«акладка));
	‘орма.«акладки.“екуща€—трока(«акладка);
	‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(«акладка), 2);
	
	// ѕодпись к основному свойству.
	≈сли ѕустое«начение( онстанта.¬ид—войства онтрагентов) = 0  “огда
		«аголовок = —окрЋѕ(—трока( онстанта.¬ид—войства онтрагентов)) + ":";
		‘орма.“екст—войство.«аголовок(«аголовок);
	 онец≈сли;
	
 онецѕроцедуры // ѕриќткрытии()

//******************************************************************************
// ѕредопределенна€ процедура.
//
ѕроцедура ѕри¬ыборе«акладки(Ќомер«акладки, «начение«акладки)
	
	‘орма.»спользовать—лой(«начение«акладки, 2);
	≈сли Ќайти(«начение«акладки,"ќсновной—чет")<>0 “огда
		—формировать–еквизит(ѕлательщикѕолучатель, "ѕлательщикѕолучатель");
	 онец≈сли;
	
 онецѕроцедуры // ѕри¬ыборе«акладки()

//******************************************************************************
// ѕредопределенна€ процедура.
//
ѕроцедура ѕриЌачале¬ыбора«начени€(Ёлементƒиалога)
	
	¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());
	
	≈сли (Ёлементƒиалога = "ЌаименованиеёрЋица") »Ћ»
	     (Ёлементƒиалога = "Ќаименование‘изЋица") “огда
		 	
		ѕараметр = ѕо нопкеќткрыть—правочник(¬идёр‘изЋица, 1, ёр‘изЋицо);
		≈сли “ип«начени€—тр(ѕараметр) = "—правочник" “огда // модальный режим
			ёр‘изЋицо = ѕараметр;
			ѕри»змененииёр‘изЋица();
		 онец≈сли;
		
	»наче≈сли Ёлементƒиалога = "Ќаименованиеќснƒоговора" “огда
		ѕараметр = ѕо нопкеќткрыть—правочник("ƒоговоры", “екущийЁлемент(), ќсновнойƒоговор);
		≈сли “ип«начени€—тр(ѕараметр) = "—правочник" “огда // модальный режим
			ќсновнойƒоговор = ѕараметр;
			ѕри»змененииќснƒоговора();
		 онец≈сли;

	»наче≈сли Ёлементƒиалога = "¬алюта¬заиморасчетов" “огда
		≈сли ќсновнойƒоговор.¬ыбран() = 1 “огда
			ќбъект = —оздатьќбъект("ƒокумент");
			ќбъект.¬ыбратьѕо«начению(,," онтрагент", “екущийЁлемент());
			
			ѕока ќбъект.ѕолучитьƒокумент() = 1 ÷икл
				≈сли ќбъект.ƒоговор = ќсновнойƒоговор “огда
					ѕредупреждение("ƒоговор """+—окрЋѕ(Ќаименованиеќснƒоговора)+""" используетс€ в документах.
					               |»змен€ть валюту взаиморасчетов нельз€!", 60);
					—татус¬озврата(0); ѕрервать;
				 онец≈сли;
			 онец÷икла;
		 онец≈сли;
	
	»наче≈сли Ёлементƒиалога = "Ќаименованиеќсн—чета" “огда
		ѕараметр = ѕо нопкеќткрыть—правочник("Ѕанковские—чета", ёр‘изЋицо, ќсновной—чет);
		≈сли “ип«начени€—тр(ѕараметр) = "—правочник" “огда // модальный режим
			ќсновной—чет = ѕараметр;
			ѕри»змененииќсн—чета();
		 онец≈сли;

	»наче≈сли Ёлементƒиалога = "¬алюта—чета" “огда
		≈сли ќсновной—чет.¬ыбран() = 1 “огда
			ѕредупреждение("Ќельз€ измен€ть валюту банковского счета.
			               |¬ведите новый счет или скопируйте существующий!", 60);
			—татус¬озврата(0);
		 онец≈сли;
		
	»наче≈сли Ёлементƒиалога = "—войство" “огда
		≈сли  онстанта.¬ид—войства онтрагентов.¬ыбран() = 1 “огда
			—войство.»спользовать¬ладельца( онстанта.¬ид—войства онтрагентов);
		»наче
			ѕредупреждение("ѕеред выбором значени€ основного свойства выберите в настройках 
			               |параметров учета вид свойства дл€ контрагентов", 60);
			—татус¬озврата(0);
		 онец≈сли;	
		
	 онец≈сли;
	
 онецѕроцедуры // ѕриЌачале¬ыбора«начени€()

//******************************************************************************
// ѕредопределенна€ процедура.
//
ѕроцедура ќбработка¬ыбора«начени€(Ќовое«начение, Ёлементƒиалога)
	
	≈сли (Ёлементƒиалога = "ЌаименованиеёрЋица") »Ћ»
	     (Ёлементƒиалога = "Ќаименование‘изЋица") “огда
		 	
		ёр‘изЋицо = Ќовое«начение;
		ѕри»змененииёр‘изЋица();
		
		// јвтозаполнение наименовани€ контрагента.
		Ќаименование = ёр‘изЋицо.Ќаименование;
		
	»наче≈сли Ёлементƒиалога = "Ќаименованиеќснƒоговора" “огда
		ќсновнойƒоговор = Ќовое«начение;
		ѕри»змененииќснƒоговора();
		
	»наче≈сли Ёлементƒиалога = "Ќаименованиеќсн—чета" “огда
		ќсновной—чет = Ќовое«начение;
		ѕри»змененииќсн—чета();
		
	»наче≈сли Ёлементƒиалога = "—войство" “огда
		—войство = Ќовое«начение;
		ѕри»змененииќсн—войства();
	 онец≈сли;
	
 онецѕроцедуры // ќбработка¬ыбора«начени€()

//******************************************************************************
// ѕредопределенна€ процедура.
//
ѕроцедура ѕри«аписи()
	
    //ќбновление текстовых реквизитов
	
	—формировать–еквизит(ѕлательщикѕолучатель, "ѕлательщикѕолучатель");

	// ѕроверка заполненности об€зательных реквизитов.
	
	¬идёр‘изЋица = ¬ид онтрагента.ѕолучить«начение(¬ид онтрагента.“екуща€—трока());
	
	// Ќаименование контрагента.
	≈сли ѕуста€—трока(Ќаименование) = 1 “огда
		ѕредупреждение("Ќе указано наименование контрагента!", 60);
		јктивизировать("Ќаименование");
		—татус¬озврата(0); ¬озврат;
	 онец≈сли;
		
	// Ќаименование юр. / физ. лица.
	≈сли ¬идёр‘изЋица <> "‘изЋица" “огда
		≈сли ѕуста€—трока(ЌаименованиеёрЋица) = 1 “огда
			ѕредупреждение("Ќе указано наименование юридического лица!", 60);
			‘орма.«акладки.“екуща€—трока(1);
			‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(1));
			јктивизировать("ЌаименованиеёрЋица");
			—татус¬озврата(0); ¬озврат;
		 онец≈сли;
	»наче
		≈сли ѕуста€—трока(Ќаименование‘изЋица) = 1 “огда
			ѕредупреждение("Ќе указано наименование физического лица!", 60);
			‘орма.«акладки.“екуща€—трока(1);
			‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(1));
			јктивизировать("Ќаименование‘изЋица");
			—татус¬озврата(0); ¬озврат;
		 онец≈сли;
	 онец≈сли;
	
	// Ќаименование основного договора.
	≈сли ѕуста€—трока(Ќаименованиеќснƒоговора) = 1 “огда
		ѕредупреждение("Ќе указано наименование основного договора!", 60);
		‘орма.«акладки.“екуща€—трока(2);
		‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(2));
		јктивизировать("Ќаименованиеќснƒоговора");
		—татус¬озврата(0); ¬озврат;
		
	// ¬алюта взаиморасчетов по основному договору.
	»наче≈сли ¬алюта¬заиморасчетов.¬ыбран() = 0 “огда
		ѕредупреждение("Ќе выбрана валюта взаиморасчетов по основному договору!", 60);
		‘орма.«акладки.“екуща€—трока(2);
		‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(2));
		јктивизировать("¬алюта¬заиморасчетов");
		—татус¬озврата(0); ¬озврат;
	 онец≈сли;
	
	≈сли (ќсновной—чет.¬ыбран() = 1) »Ћ» 
	     (ѕуста€—трока(Ќомер—чета) = 0) »Ћ» 
		 (ѕуста€—трока(Ќаименованиеќсн—чета) = 0) “огда
		 	
		// Ќаименование основного банковского счета.
		≈сли ѕуста€—трока(Ќаименованиеќсн—чета) = 1 “огда
			ѕредупреждение("Ќе указано наименование основного банковского счета!", 60);
			‘орма.«акладки.“екуща€—трока(3);
			‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(3));
			јктивизировать("Ќаименованиеќсн—чета");
			—татус¬озврата(0); ¬озврат;
		 онец≈сли;

		// ¬алюта основного банковского счета.
		≈сли ¬алюта—чета.¬ыбран() = 0 “огда
			ѕредупреждение("Ќе выбрана валюта основного банковского счета!", 60);
			‘орма.«акладки.“екуща€—трока(3);
			‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(3));
			јктивизировать("¬алюта—чета");
			—татус¬озврата(0); ¬озврат;
		 онец≈сли;
		
		// Ѕанк основного банковского счета.
		≈сли Ѕанк.¬ыбран() = 0 “огда
			ѕредупреждение("Ќе выбран банк основного банковского счета!", 60);
			‘орма.«акладки.“екуща€—трока(3);
			‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(3));
			јктивизировать("Ѕанк");
			—татус¬озврата(0); ¬озврат;
		 онец≈сли;

		// Ќомер банковского счета.
		≈сли глѕроверкаЌомера—чета(Ќомер—чета, Ѕанк. од, Ѕанк. орр—чет) = 0 “огда
			≈сли ¬опрос("¬озможно, номер основного счета указан неверно. ѕродолжить?", "ƒа+Ќет", 60) <> "ƒа" “огда
				‘орма.«акладки.“екуща€—трока(3);
				‘орма.»спользовать—лой(‘орма.«акладки.ѕолучить«начение(3));
				јктивизировать("Ќомер—чета");
				—татус¬озврата(0); ¬озврат;
			 онец≈сли;
		 онец≈сли;
	 онец≈сли;
		
	// «апись всех изменений производитс€ в одной транзакции.
	

	—татус¬озврата(0);
	Ќачать“ранзакцию();

	ѕопытка
		«аписать();

	»сключение
		ќтменить“ранзакцию();
		—ообщить("«апись контрагента: " + ќписаниеќшибки(), "!");
		¬озврат;

	 онецѕопытки;

	ѕопытка
		≈сли «аписьёр‘изЋица() = 0 “огда
			ќтменить“ранзакцию();
			¬озврат;
		 онец≈сли;

	»сключение
		ќтменить“ранзакцию();
		—ообщить("«апись юр.(физ.) лица: " + ќписаниеќшибки(), "!");
		¬озврат;

	 онецѕопытки;

	ѕопытка
		≈сли «аписьќснƒоговора() = 0 “огда
			ќтменить“ранзакцию();
			¬озврат;
		 онец≈сли;

	»сключение
		ќтменить“ранзакцию();
		—ообщить("«апись основного договора: " + ќписаниеќшибки(), "!");
		¬озврат;

	 онецѕопытки;

	ѕопытка
		≈сли «аписьќсн—чета() = 0 “огда
			ќтменить“ранзакцию();
			¬озврат;
		 онец≈сли;

	»сключение
		ќтменить“ранзакцию();
		—ообщить("«апись основного счета: " + ќписаниеќшибки(), "!");
		¬озврат;

	 онецѕопытки;

	ѕопытка
		≈сли «аписьќсн—войства() = 0 “огда
			ќтменить“ранзакцию();
			¬озврат;
		 онец≈сли;

		—охранить«начение("ќсновное—войство онтрагентов", —войство);
		«афиксировать“ранзакцию();
		—татус¬озврата(1);

	»сключение
		ќтменить“ранзакцию();
		—ообщить("«апись основного свойства: " + ќписаниеќшибки(), "!");

	 онецѕопытки;

 онецѕроцедуры // ѕри«аписи()

////////////////////////////////////////////////////////////////////////////////
// ќѕ≈–ј“ќ–џ ќ—Ќќ¬Ќќ… ѕ–ќ√–јћћџ
// 
‘орма.»спользовать«акладки(1);
// 1-й слой переназначаетс€ в ѕри»зменении¬ида онтрагента().
‘орма.«акладки.ƒобавить«начение(" онтрагент,  нопки",                  "ќсновные");
‘орма.«акладки.ƒобавить«начение(" онтрагент,  нопки, ќсновнойƒоговор", "ƒоговор взаиморасчетов");
‘орма.«акладки.ƒобавить«начение(" онтрагент,  нопки, ќсновной—чет",    "Ѕанковский счет");
‘орма.«акладки.ƒобавить«начение(" онтрагент,  нопки, ѕрочее",          "ѕрочее");

¬ид онтрагента.ƒобавить«начение("ёрЋица",     "—тороннее юр. лицо");
¬ид онтрагента.ƒобавить«начение("‘изЋица",    "‘изическое лицо");
¬ид онтрагента.ƒобавить«начение("—воиёрЋица", "—обственное юр. лицо");
