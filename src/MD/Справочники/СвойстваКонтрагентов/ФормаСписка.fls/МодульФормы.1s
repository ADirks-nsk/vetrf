////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура
//
Процедура ПриОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
		Если (Форма.Параметр.Вид() = "Контрагенты") И (Форма.Параметр.ЭтоГруппа() = 0) Тогда
			ИспользоватьВладельца(Форма.Параметр);
			ИерархическийСписок(1, 1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	// ПриОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриПовторномОткрытии()
	
	Если ТипЗначенияСтр(Форма.Параметр) = "Справочник" Тогда
		Если (Форма.Параметр.Вид() = "Контрагенты") И (Форма.Параметр.ЭтоГруппа() = 0) Тогда
			ИспользоватьВладельца(Форма.Параметр);
			ИерархическийСписок(1, 1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриПовторномОткрытии()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеРедактированияСтроки()   
	
	// Свойства вида, выбранного для задания основных свойств контрагентов здесь не редактируем
	Если ВидСвойства =Константа.ВидСвойстваНоменклатуры  Тогда
		Предупреждение("Основное свойство выбирается в карточке контрагента!",60);     
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриНачалеРедактированияСтроки()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаВыбораЗначения(ВыбЗнач, ИдентЭлемДиалога, ФлагСтандОбр)
	
	Если ИдентЭлемДиалога = "ЗначениеСвойства" Тогда
		
		Если ПустоеЗначение(ВидСвойства) = 1 Тогда
			// Если ВидСвойства не заполнен при заполнении ЗначениеСвойства,
			// то установим ВидСвойства, как владелец ЗначениеСвойства
			ВидСвойства	= ВыбЗнач.Владелец;
		КонецЕсли;
		ВыбВидСвойства = ВидСвойства;
		
	ИначеЕсли ИдентЭлемДиалога = "ВидСвойства" Тогда
		
		Если ВыбЗнач <> ЗначениеСвойства.Владелец Тогда
			// владелец значения свойства отличается от выбранного вида свойств
			ЗначениеСвойства	 = 0;
		КонецЕсли;
		ВыбВидСвойства = ВыбЗнач;
		
	КонецЕсли;
	
	//Вид свойства не должен совпадать с константой ВидСвойстваКонтрагентов
	Если ВыбВидСвойства = Константа.ВидСвойстваКонтрагентов Тогда
	    Предупреждение("Вид свойства """+ СокрЛП(Константа.ВидСвойстваКонтрагентов) + 
		                """ выбран в настройке параметров учета для задания основных свойств контрагентов."+ РазделительСтрок + 
						"Основное свойство выбирается в карточке контрагента."+ РазделительСтрок + 
						"В этом диалоге изменять основное свойство не разрешается.",60);
		СтатусВозврата(0);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗаписи()

	Перем Свойства;
	
	// проверка запонение обязательных полей
	Если ПустоеЗначение(ВидСвойства) > 0 Тогда
		Предупреждение("Не заполнено поле ""Вид свойства""!", 60);
		Активизировать("ВидСвойства");
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли ПустаяСтрока(ЗначениеСвойства) > 0 Тогда
		Предупреждение("Не заполнено поле ""Значение свойства""!", 60);
		Активизировать("ЗначениеСвойства");
		СтатусВозврата(0);
		Возврат;
		
	КонецЕсли;
	
	// свойство данного вида может быть у товара только одно
	Свойства	= СоздатьОбъект("Справочник.СвойстваКонтрагентов");
	Свойства.ИспользоватьВладельца(Владелец);
	Свойства.ВыбратьЭлементыПоРеквизиту("ВидСвойства", ВидСвойства, 1, 1);
	
	Пока Свойства.ПолучитьЭлемент() = 1 Цикл
		// найден элемент с таким же ВидомСвойства
		Если Свойства.ТекущийЭлемент() <> ТекущийЭлемент() Тогда
		
			Если ВидСвойства.Множественность = 0 Тогда
				Предупреждение("Свойство вида """ + ВидСвойства + """ не поддерживает множественность значений.
				               |Уже имеется свойство данного вида со значением """ + Свойства.ЗначениеСвойства + """" +
							   ?(Свойства.ПометкаУдаления() = 1, ", помеченное на удаление.", "."), 60);
				СтатусВозврата(0);
				Возврат;
			
			ИначеЕсли Свойства.ЗначениеСвойства = ЗначениеСвойства Тогда
				Предупреждение("Уже имеется свойство вида """ + ВидСвойства + """ со значением """ + ЗначениеСвойства + """" +
							   ?(Свойства.ПометкаУдаления() = 1, ", помеченное на удаление.", "."), 60);
				СтатусВозврата(0);
				Возврат;
			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	// Свойства.ПолучитьЭлемент() = 1
			
КонецПроцедуры // ПриЗаписи()

