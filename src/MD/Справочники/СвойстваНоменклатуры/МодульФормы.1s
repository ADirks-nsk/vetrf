////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ВидПараметра;

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура

Процедура ПриОткрытии()
	
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.кнЗаписать.Доступность(0);
		Форма.кнОК.Доступность(0);
		
		Форма.КнопкаПоУмолчанию("кнЗакрыть");
	Иначе
	    Форма.КнопкаПоУмолчанию("кнОк");
	КонецЕсли;
	
	// Свойства вида, выбранного для задания основных свойств номенклатуры здесь не редактируем
	Если ВидСвойства =Константа.ВидСвойстваНоменклатуры  Тогда
		Предупреждение("Основное свойство выбирается в карточке номенклатурной позиции!",60);     
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры	// ПриОткрытии()

//******************************************************************************
// Предопределенная процедура

Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)
	
	Если ИдентЭлемДиалога = "ВидСвойства" Тогда
		глРасшифровка		= "Свойства Номенклатуры";
		глФлагРасшифровки	= 1;
	КонецЕсли;

КонецПроцедуры	// ПриНачалеВыбораЗначения()

//******************************************************************************
// Предопределенная процедура
//
Процедура ОбработкаВыбораЗначения(ВыбЗнач, ИдентЭлемДиалога, ФлагСтандОбр)
	Если ИдентЭлемДиалога = "ЗначениеСвойства" Тогда
		Если ПустоеЗначение(ВидСвойства) = 1 Тогда
			// Если ВидСвойства не заполнен при заполнении ЗначениеСвойства,
			// то установим ВидСвойства, как владелец ЗначениеСвойства
			ВидСвойства	   = ВыбЗнач.Владелец;
			
		КонецЕсли;
		ВыбВидСвойства = ВидСвойства;
		
	ИначеЕсли ИдентЭлемДиалога = "ВидСвойства" Тогда
		Если ВыбЗнач <> ЗначениеСвойства.Владелец Тогда
			// владелец значения свойства отличается от выбранного вида свойств
			ЗначениеСвойства	 = 0;
		КонецЕсли;
		ВыбВидСвойства = ВыбЗнач;

	КонецЕсли;
	
	//Вид свойства не должен совпадать с константой ВидСвойстваНоменклатуры
	Если ВыбВидСвойства = Константа.ВидСвойстваНоменклатуры  Тогда
	    Предупреждение("Вид свойства """+ СокрЛП(Константа.ВидСвойстваНоменклатуры) + 
		                """ выбран в настройке параметров учета для задания основных свойств номенклатуры."+ РазделительСтрок + 
						"Основное свойство выбирается в карточке номенклатурной позиции."+ РазделительСтрок + 
						"В этом диалоге изменять основное свойство не разрешается.",60);
		СтатусВозврата(0);
	КонецЕсли;
	
КонецПроцедуры	// ОбработкаВыбораЗначения()

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗаписи()

	Перем Свойства;
	
	// проверка запонение обязательных полей
	Если ПустоеЗначение(ВидСвойства) > 0 Тогда
		Предупреждение("Не заполнено поле ""Вид свойства""!", 60);
		Активизировать("ВидСвойства");
		СтатусВозврата(0);
		Возврат;
		
	ИначеЕсли ПустаяСтрока(ЗначениеСвойства) > 0 Тогда
		Предупреждение("Не заполнено поле ""Значение свойства""!", 60);
		Активизировать("ЗначениеСвойства");
		СтатусВозврата(0);
		Возврат;
		
	КонецЕсли;
	
	// свойство данного вида может быть у товара только одно
	Свойства	= СоздатьОбъект("Справочник.СвойстваНоменклатуры");
	Свойства.ИспользоватьВладельца(Владелец);
	Свойства.ВыбратьЭлементыПоРеквизиту("ВидСвойства", ВидСвойства, 1, 1);
	
	Пока Свойства.ПолучитьЭлемент() = 1 Цикл
		// найден элемент с таким же ВидомСвойства
		Если Свойства.ТекущийЭлемент() <> ТекущийЭлемент() Тогда
		
			Если ВидСвойства.Множественность = 0 Тогда
				Предупреждение("Свойство вида """ + ВидСвойства + """ не поддерживает множественность значений.
				               |Уже имеется свойство данного вида со значением """ + Свойства.ЗначениеСвойства + """" +
							   ?(Свойства.ПометкаУдаления() = 1, ", помеченное на удаление.", "."), 60);
				СтатусВозврата(0);
				Возврат;
			
			ИначеЕсли Свойства.ЗначениеСвойства = ЗначениеСвойства Тогда
				Предупреждение("Уже имеется свойство вида """ + ВидСвойства + """ со значением """ + ЗначениеСвойства + """" +
							   ?(Свойства.ПометкаУдаления() = 1, ", помеченное на удаление.", "."), 60);
				СтатусВозврата(0);
				Возврат;
			
			КонецЕсли;
				
		КонецЕсли;
	КонецЦикла;	// Свойства.ПолучитьЭлемент() = 1

КонецПроцедуры // ПриЗаписи()

