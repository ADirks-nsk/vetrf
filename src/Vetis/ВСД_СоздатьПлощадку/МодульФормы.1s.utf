//Перем ГМ;
// вспомогательные переменные, можно хранить в списке значений

Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)

	Если ЭлементДиалога = "ВыбПлощадка" Тогда
		ВремЭлем = ВыбХС;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	ИначеЕсли ЭлементДиалога = "Регион" Тогда
		ВремЭлем = Страна;
		ОткрытьФорму("Справочник.ВСД_Регион",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Район" Тогда
		ВремЭлем = Регион;
		ОткрытьФорму("Справочник.ВСД_Район",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Город" Тогда
		ВремЭлем = Регион;
		ОткрытьФорму("Справочник.ВСД_Город",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Улица" Тогда
		ВремЭлем = Город;
		ОткрытьФорму("Справочник.ВСД_Улица",ВремЭлем);
		ФлагПродолжения = 0;
	КонецЕсли;

КонецПроцедуры

Процедура ПриВыбореПлощадки( Площадка )

	Адрес = Площадка.Адрес;
	ПолноеНаименование = Площадка.Наименование;

КонецПроцедуры

// при открытии формы обработки запоминаем переданные параметры,
// после чего закрываем форму документа (ставится "в очередь")
Процедура ПриОткрытии()
	Причина = "Причина добавления субъекта в реестр.";
	Деятельность = "Продажа продуктов питания";

   	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
  //    ГМ = Форма.Параметр.Получить("ГМ");
	  	ВыбХС = Форма.Параметр.Получить("ХС");
	  	ПриВыбореПлощадки( ВыбПлощадка );
   	Иначе
      //СтатусВозврата(0);

	//  //{ Глобальный модуль плюс несколько базовых функций
	//
	//    ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
		ГМ.Инициализация(Контекст);
	    //ГМ.ЗагрузитьПараметрыВФорму(Контекст);
		////}
   	КонецЕсли;
 	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
КонецПроцедуры // ПриОткрытии



Процедура СоздатьНовуюПлощадку(ВыбХС)

	Если ПустоеЗначение(ВыбХС)=1 Тогда
		Предупреждение("Выберите Хоз субъект");
	КонецЕсли;

	ВидСтравочникаХС = Метаданные.Справочник("ВСД_ХозСубъект").Реквизит("Контрагент").Вид;
	ВидСтравочникаПЛ = Метаданные.Справочник("ВСД_Площадка").Реквизит("Контрагент").Вид;

	Если ВидСтравочникаХС = ВидСтравочникаПЛ Тогда
		СпрПл = СоздатьОбъект("Справочник.ВСД_Площадка");

		СпрПл.Новый();
		СпрПл.Наименование = ВыбХС.Контрагент.Наименование;
		СпрПл.Контрагент = ВыбХС.Контрагент;
		СпрПл.Адрес = ГМ.ПолучитьФактАдрес(ВыбХС.Контрагент);
		СпрПл.GuidХозСубъекта = ВыбХС.GUID;
		СпрПл.Записать();
		Сообщить("Создан ВСД_Площадка "+СпрПл.ТекущийЭлемент());

		ВыбПлощадка = СпрПл.ТекущийЭлемент();
	Иначе
		Если Метаданные.Справочник(ВидСтравочникаПЛ).Владелец.Выбран() = 1 Тогда
			Спр = СоздатьОбъект("Справочник."+ВидСтравочникаПЛ);
			Спр.ИспользоватьВладельца(ВыбХС.Контрагент);
			Если Спр.Выбрать("Выберите грузополучателя",) = 1 Тогда
				СпрПл = СоздатьОбъект("Справочник.ВСД_Площадка");

				СпрПл.Новый();
				СпрПл.Наименование = Спр.Наименование;
				СпрПл.Контрагент = Спр.ТекущийЭлемент();
				СпрПл.Адрес = ГМ.ПолучитьФактАдрес(СпрПл.Контрагент);
				СпрПл.GuidХозСубъекта = ВыбХС.GUID;
				СпрПл.Записать();
				Сообщить("Создан ВСД_Площадка "+СпрПл.ТекущийЭлемент());

				ВыбПлощадка = СпрПл.ТекущийЭлемент();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПолучитьОтветСоздатьСвязьХозсубъектПлощадка( applicationID )

	Если ПустоеЗначение(applicationID)=1 Тогда
		Сообщить("Не указано applicationID");
		Возврат;
	КонецЕсли;

	//ГМ.Пауза();
	//Сообщить(" Запрос CreateActivityLocationsOperationResult [ "+СокрЛП(applicationID)+" ]","i");
	//Результат = ГМ.Компонента.CreateActivityLocationsOperationResult( СокрЛП(applicationID));
	//Отладка();
	Сообщить("Отправляем запрос результата ["+applicationID+"] " );
	//Результат = Компонента.SendRequestResult( applicationID );
	Результат = ГМ.ПолучитьРезультатСервер( applicationID );

	Если ГМ.НайтиОшибки()>0 Тогда
		Возврат;
	КонецЕсли;

    objDom=СоздатьОбъект("MSXML2.DOMDocument");
    objDom.load(ГМ.Компонента.LogFilename);

    businessEntity=objDom.selectSingleNode("//merc:businessEntity") ;
	guid = businessEntity.selectSingleNode("bs:guid").text;
	uuid = businessEntity.selectSingleNode("bs:uuid").text;
	active = businessEntity.selectSingleNode("bs:active").text;
	enterprise = businessEntity.selectSingleNode("ent:activityLocation").selectSingleNode("ent:enterprise").selectSingleNode("bs:guid").text;
	Сообщить("Успешно установлена связь ВСД_Площадка ["+enterprise+"] ВСД_ХозСубъект ["+guid+"]","i");

	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );
КонецПроцедуры

Функция СоздатьСвязь_ЗапросXML(Площадка)
	Запрос = "
	|<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/'
	|                  xmlns:ws='http://api.vetrf.ru/schema/cdm/application/ws-definitions'
	|                  xmlns:app='http://api.vetrf.ru/schema/cdm/application'
	|                  xmlns:merc='http://api.vetrf.ru/schema/cdm/mercury/applications'
	|                  xmlns:base='http://api.vetrf.ru/schema/cdm/base'
	|                  xmlns:com='http://api.vetrf.ru/schema/cdm/argus/common'
	|                  xmlns:ent='http://api.vetrf.ru/schema/cdm/cerberus/enterprise'
	|                  xmlns:ikar='http://api.vetrf.ru/schema/cdm/ikar'>
	|   <soapenv:Header/>
	|   <soapenv:Body>
	|      <ws:submitApplicationRequest>
	|         <ws:apiKey>" + ГМ.ПолучитьКонстанту("param_api_key") + "</ws:apiKey>
	|         <app:application>
	|            <app:serviceId>mercury-g2b.service</app:serviceId>
	|            <app:issuerId>" + ГМ.ПолучитьКонстанту("param_issuer_id") + "</app:issuerId>
	|            <app:issueDate>"+ ГМ.ДатаXML(ТекущаяДата(), "T00:00:00") +"</app:issueDate>
	|            <app:data>
	|               <merc:modifyActivityLocationsRequest>
	|                   <merc:localTransactionId>[GUID]</merc:localTransactionId>
	|                   <merc:initiator>
	|                      <com:login>"+ГМ.СписокКонстант.Получить("param_intiator_login")+"</com:login>
	|                   </merc:initiator>
	|                  <merc:modificationOperation>
	|                      <ent:type>CREATE</ent:type>
	|                      <ent:businessEntity>
	|                          <base:guid>"+ Площадка.GuidХозСубъекта +"</base:guid>
	|                      </ent:businessEntity>
	|                      <ent:enterpriseList count='1' total='1' offset='0'>
	|                          <ent:enterprise>
	|                              <base:guid>"+Площадка.GUID +"</base:guid>
	|                          </ent:enterprise>
	|                     </ent:enterpriseList>
	|                 </merc:modificationOperation>
	|             </merc:modifyActivityLocationsRequest>
	|          </app:data>
	|        </app:application>
	|     </ws:submitApplicationRequest>
	|</soapenv:Body>
	|</soapenv:Envelope>
	|";

	возврат Запрос;
КонецФункции

Процедура СоздатьСвязьХозсубъектПлощадка(Площадка)
	Если ПустоеЗначение(Площадка.GuidХозСубъекта)=1 Тогда
		Сообщить("не указан GUID хоз субъекта");
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Площадка.GUID)=1 Тогда
		Сообщить("Выб площадке не указан GUID");
		Возврат;
	КонецЕсли;

	ГМ.Пауза();
	Сообщить(" Запрос CreateActivityLocationsOperation [ "+СокрЛП(Площадка)+" ]","i");
	//Результат = ГМ.Компонента.CreateActivityLocationsOperation(
	//		СокрЛП(Площадка.GuidХозСубъекта),
	//		СокрЛП(Площадка.GUID)
	//);


	Сообщить(" Запрос CreateEnterprise [ "+СокрЛП(Площадка)+" ]","i");
	ЗапросXML = СоздатьСвязь_ЗапросXML(Площадка);

	метод = ГМ.Компонента.GetMethod();
    метод.Service = "platform/services/ApplicationManagementService";
    метод.Action = "submitApplicationRequest";

	appID = ГМ.ОтправитьЗапросSoap(ЗапросXML, метод);

	//Отладка();
	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );

	ГМ.Пауза();
	ПолучитьОтветСоздатьСвязьХозсубъектПлощадка( appID )

КонецПроцедуры

Процедура ПолучитьОтветПлощадка( applicationID , Площадка)

	Если ПустоеЗначение(applicationID)=1 Тогда
		Сообщить("Не указано applicationID");
		Возврат;
	КонецЕсли;

	ГМ.Пауза();
//
//	Сообщить(" Запрос CreateEnterpriseResult [ "+СокрЛП(applicationID)+" ]","i");
//	Результат = ГМ.Компонента.SendRequestResult(СокрЛП(applicationID));

	Сообщить("Отправляем запрос результата ["+applicationID+"] " );
	//Результат = Компонента.SendRequestResult( applicationID );
	Результат = ГМ.ПолучитьРезультатСервер( applicationID );

   	Сообщить("Загрузка XML-файла: "+ГМ.Компонента.LogFilename);
    objDom=СоздатьОбъект("MSXML2.DOMDocument");
    objDom.load(ГМ.Компонента.LogFilename);

	Если ГМ.НайтиОшибки()>0 Тогда
		Возврат;
	КонецЕсли;

    enterprise=objDom.selectSingleNode("//merc:enterprise") ;
	guid = enterprise.selectSingleNode("bs:guid").text;
	uuid = enterprise.selectSingleNode("bs:uuid").text;
	name = enterprise.selectSingleNode("ent:name").text;
	active = enterprise.selectSingleNode("bs:active").text;

	если ПустоеЗначение(GUID)=0 Тогда
		Спр = СоздатьОбъект("Справочник.ВСД_Площадка");
		Спр.НайтиЭлемент(Площадка);
		спр.GUID = GUID;
		спр.uuid = uuid;
		спр.Записать();
		Сообщить("Успешно записан ВСД_Площадка ["+Спр.ТекущийЭлемент()+"] GUID = "+GUID,"i");

		Площадка = Спр.ТекущийЭлемент();
	Иначе
		Сообщить("Пустой GUID Площадки");
	КонецЕсли;

	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );

	СоздатьСвязьХозсубъектПлощадка(Площадка);

КонецПроцедуры

Функция  СоздатьПлощадку_ЗапросXML(Площадка)

	ЗапросXML = "
	|<soapenv:Envelope
	|     xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/'
	|xmlns:ws='http://api.vetrf.ru/schema/cdm/application/ws-definitions'
	|xmlns:app='http://api.vetrf.ru/schema/cdm/application'
	|xmlns:merc='http://api.vetrf.ru/schema/cdm/mercury/applications'
	|xmlns:base='http://api.vetrf.ru/schema/cdm/base'
	|xmlns:com='http://api.vetrf.ru/schema/cdm/argus/common'
	|xmlns:ent='http://api.vetrf.ru/schema/cdm/cerberus/enterprise'
	|xmlns:ikar='http://api.vetrf.ru/schema/cdm/ikar'>
	|   <soapenv:Header/>
	|   <soapenv:Body>
	|      <ws:submitApplicationRequest>
	|         <ws:apiKey>" + ГМ.ПолучитьКонстанту("param_api_key") + "</ws:apiKey>
	|         <app:application>
	|            <app:serviceId>mercury-g2b.service</app:serviceId>
	|            <app:issuerId>" + ГМ.ПолучитьКонстанту("param_issuer_id") + "</app:issuerId>
	|            <app:issueDate>"+ ГМ.ДатаXML(ТекущаяДата(), "T00:00:00") +"</app:issueDate>
	|            <app:data>
	|                <merc:modifyEnterpriseRequest>
	|                   <merc:localTransactionId>[GUID]</merc:localTransactionId>
	|                   <merc:initiator>
	|                      <com:login>"+ГМ.СписокКонстант.Получить("param_intiator_login")+"</com:login>
	|                   </merc:initiator>
	|                   <merc:modificationOperation>
	|                       <ent:type>CREATE</ent:type>
	|                       <ent:resultingList count='1' total='1' offset='0'>
	|                       <ent:enterprise>
	|                           <ent:name>"+СокрЛП(ПолноеНаименование)+"</ent:name>
	|                           <ent:type>1</ent:type>
	|              <ent:address>
	|                <ikar:country>
	|                  <base:guid>"+СокрЛП(Страна.GUID)+"</base:guid>
	|                </ikar:country>
	|                <ikar:federalDistrict /> ";
	Если ПустоеЗначение(Регион.GUID)=0 Тогда
		ЗапросXML=ЗапросXML+"
		|                <ikar:region>
		|                  <base:guid>"+СокрЛП(Регион.GUID)+"</base:guid>
		|                </ikar:region>
		|";
	Иначе
		ЗапросXML=ЗапросXML+"
		|                <ikar:region> ";
	КонецЕсли;
	Если ПустоеЗначение(Район.GUID)=0 Тогда
		ЗапросXML=ЗапросXML+"
		|                <ikar:district>
		|                  <base:guid>"+СокрЛП(Район.GUID)+"</base:guid>
		|                </ikar:district>
		|";
	Иначе
		ЗапросXML=ЗапросXML+"
		|<ikar:district />
		|";
	КонецЕсли;
	Если ПустоеЗначение(Город.GUID)=0 Тогда
		ЗапросXML=ЗапросXML+"
		|                <ikar:locality>
		|                  <base:guid>"+СокрЛП(Город.GUID)+"</base:guid>
		|                </ikar:locality> ";
	Иначе
		ЗапросXML=ЗапросXML+"
		|                <ikar:locality /> ";
	КонецЕсли;
	ЗапросXML=ЗапросXML+"
	|                <ikar:subLocality /> ";
	Если ПустоеЗначение(Улица.GUID)=0 Тогда
		ЗапросXML=ЗапросXML+"
		|                <ikar:street>
		|                  <base:guid>"+СокрЛП(Улица.GUID)+"</base:guid>
		|                </ikar:street > ";
	Иначе
		ЗапросXML=ЗапросXML+"
		|                <ikar:street /> ";
	КонецЕсли;
	ЗапросXML=ЗапросXML+"
	|                <ikar:addressView>"+СокрЛП(Адрес)+"</ikar:addressView>
	|              </ent:address>
	|                          <ent:activityList count='1' total='1' offset='0'>
	|                             <ent:activity>
	|                                 <ent:name>" + СокрЛП(Деятельность) + "</ent:name>
	|                             </ent:activity>
	|                         </ent:activityList>
	|                         <ent:owner>
	|                            <base:guid>"+СокрЛП(Площадка.GuidХозСубъекта)+"</base:guid>
	|                         </ent:owner>
	|                    </ent:enterprise>
	|              </ent:resultingList>
	|              <ent:reason>"+ Причина +"</ent:reason>
	|           </merc:modificationOperation>
	|        </merc:modifyEnterpriseRequest>
	|      </app:data>
	|    </app:application>
	|   </ws:submitApplicationRequest>
	| </soapenv:Body>
	|</soapenv:Envelope>
	|";

	Возврат ЗапросXML;
КонецФункции

Процедура СоздатьПлощадку(Площадка)

	Если ПустоеЗначение(Площадка.GuidХозСубъекта)=1 Тогда
		Сообщить("Не указан Guid ХозСубъекта");
		Возврат;
	КонецЕсли;

	Если ПустоеЗначение(Страна.GUID)=1 Тогда
		Сообщить("Не указан Страна.GUID");
		Возврат;
	КонецЕсли;

//	Если ПустоеЗначение(Регион.GUID)=1 Тогда
//		Сообщить("Не указан Регион.GUID");
//		Возврат;
//	КонецЕсли;
//
//	Если ПустоеЗначение(Город.GUID)=1 Тогда
//		Сообщить("Не указан Город.GUID");
//		Возврат;
//	КонецЕсли;

	Сообщить(" Запрос CreateEnterprise [ "+СокрЛП(Площадка)+" ]","i");
	ЗапросXML = СоздатьПлощадку_ЗапросXML(Площадка);

	метод = ГМ.Компонента.GetMethod();
    метод.Service = "platform/services/ApplicationManagementService";
    метод.Action = "submitApplicationRequest";

	//appID = ГМ.ОтправитьЗапросXML(ЗапросXML);
	appID = ГМ.ОтправитьЗапросSoap(ЗапросXML, метод);

	Если ПустоеЗначение(appID)=0 Тогда

		ПолучитьОтветПлощадка( appID, Площадка )

	КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура ПоКнопкеЗаписать()
	Если ВыбПлощадка.Выбран() = 1 Тогда
		СпрПл = СоздатьОбъект("Справочник.ВСД_Площадка");
		СпрПл.НайтиЭлемент(ВыбПлощадка);
		СпрПл.Наименование = ПолноеНаименование;
		СпрПл.Адрес = Адрес;
		СпрПл.GuidХозСубъекта = ВыбХС.GUID;
		СпрПл.Страна = Страна;
		СпрПл.Регион = Регион;
		СпрПл.Район= Район;
		СпрПл.Город= Город;
		СпрПл.Улица= Улица;
		СпрПл.Дом= Дом;
		СпрПл.Строение= Строение;
		СпрПл.Помещение= Помещение;
		//СпрПл.Контрагент = Контрагент;
		СпрПл.Записать();
	Иначе
		Предупреждение("Не выбрана площадка!");
	КонецЕсли;
КонецПроцедуры // ПоКнопкеЗаписать