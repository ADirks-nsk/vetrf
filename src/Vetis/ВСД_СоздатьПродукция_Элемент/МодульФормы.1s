Перем спОбязательныеПоля;
Перем ВыбФирма Экспорт; //для выбора площадки
Перем оПривязки; //:Меркурий.Привязки
Перем спТермическиеУсловияПеревозки;

Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	ГМ2.Инициализация(ГМ);
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

Процедура Отправить_в_ГИС( _ВСД_Продукция_Элемент, операция="CREATE" )

	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Предупреждение("Выберите площадку!");
		Возврат;
	КонецЕсли;

	//Если ПустоеЗначение(тзПродукция.GUID)=0 Тогда
	//	Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;

	ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+ _ВСД_Продукция_Элемент);

   	Результат = ГМ2.Изменить_Продукцию( _ВСД_Продукция_Элемент, операция );
   	Сообщить(Результат);

КонецПроцедуры

//Процедура Изменить( _ВСД_Продукция_Элемент )
//
//	//Если ПустоеЗначение( _ВСД_Продукция_Элемент.GUID)=0 Тогда
//	//	Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда
//	//		Возврат;
//	//	КонецЕсли;
//	//КонецЕсли;
//
//	ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+ _ВСД_Продукция_Элемент);
//
//    Результат = ГМ2.Изменить_Продукцию( _ВСД_Продукция_Элемент, "UPDATE");
//   	Сообщить(Результат);
//
//КонецПроцедуры

Функция ПроверитьЗаполнениеРеквизитов( _ТекСтрока )
	Рез = 1;
	Для Н=1 По спОбязательныеПоля.РазмерСписка() Цикл
		НаименованиеРеквизита = спОбязательныеПоля.ПолучитьЗначение(Н);
		ЗначениеРеквизита =  _ТекСтрока.ПолучитьЗначение( _ТекСтрока.НомерСтроки, НаименованиеРеквизита );
		Если ПустоеЗначение(ЗначениеРеквизита)=1 Тогда
			Сообщить(" не заполнен реквизит " + НаименованиеРеквизита +" в строке "+_ТекСтрока.НомерСтроки);
			Рез = 0;
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции

Процедура Создать_ВСД_Продукция_Элемент( _ТекСтрока )


	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	Если ПустоеЗначение( _ТекСтрока.ВСД_Продукция_Элемент)=1 Тогда
		НачатьТранзакцию();
	//Если ПустоеЗначение( ВыбНоменклатура.ВСД_Продукция_Элемент ) Тогда
		Если ПроверитьЗаполнениеРеквизитов( _ТекСтрока )=0 Тогда
			//Сообщить("Не заполнены обязательные реквизиты справочника "+ _ТекСтрока.Номенклатура+". Пропускаем...");
			возврат;
		КонецЕсли;
		// попробуем найти в справочнике по наименованию
		//Если спрВСД_Продукция_Элемент.НайтиПоНаименованию(СокрЛП( ВыбНоменклатура.Наименование ),0,1)=1 Тогда
		//	Если Вопрос("Найден элемент продукции с наименованием номенклатуры 1с ["+СокрЛП( ВыбНоменклатура.Наименование )+"]. Использовать его?","Да+Нет")="Да" Тогда
		//	КонецЕсли;
		//КонецЕсли;
		//Если Операция = "Создать" Тогда
			Объект.Новый();
			Объект.Наименование= _ТекСтрока.Номенклатура.Наименование;
		//КонецЕсли;
	//Иначе
	//	спрВСД_Продукция_Элемент.НайтиЭлемент(ВыбНоменклатура.ВСД_Продукция_Элемент);


		Объект.Площадка 			= Отправитель_Площадка;
		Объект.Продукция 			= _ТекСтрока.Продукция;
		Объект.ВидПродукции 		= _ТекСтрока.ВидПродукции;
		Объект.КоэффициентПересчета = _ТекСтрока.КоэффициентПересчета;
		Объект.ЕдиницаИзмерения 	= _ТекСтрока.ЕдиницаИзмерения;
		Объект.СрокГодности 		= _ТекСтрока.СрокГодности;
		Объект.ТермическоеСостояние = ВыбТермическоеСостояние;

		Объект.Записать();

		спр = СоздатьОбъект("Справочник.Номенклатура");
		спр.НайтиЭлемент( _ТекСтрока.Номенклатура );
		спр.ВСД_Продукция_Элемент = Объект.ТекущийЭлемент();
		спр.Записать();
		_ТекСтрока.ВСД_Продукция_Элемент = Объект.ТекущийЭлемент();

		ЗафиксироватьТранзакцию();

	КонецЕсли;
	//Если ПустаяСтрока(Объект.GUID)=1  Тогда
	//    Создать( Объект.ТекущийЭлемент(), "CREATE");
	////Иначе
	////	Изменить();
	//КонецЕсли;
КонецПроцедуры

Процедура СоздатьЭлементы()

	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если тзПродукция.Пометка=2 Тогда
			Создать_ВСД_Продукция_Элемент( тзПродукция );
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПриВыбореЗакладки(Ном)
	Форма.ИспользоватьСлой(Форма.Закладки.ПолучитьЗначение(Ном)+", Общий",2);
КонецПроцедуры

Процедура ЗаполнитьСтрокуТз(тз1, спрНоменклатура )
	тз1.Пометка=1;
	тз1.Номенклатура = спрНоменклатура;
	
	тзП = ГМ.ПолучитьСписок_ВСДПродукцияЭлемент_По_Номенклатура( тз1.Номенклатура );
	тзП.ВыбратьСтроки();
	Если тзП.ПолучитьСтроку()=1 Тогда 
		ВСД_Продукция_Элемент = тзП.ВСД_Продукция_Элемент;
	КонецЕсли;
	Если ПустоеЗначение(ВСД_Продукция_Элемент)=0 Тогда
		тз1.ВСД_Продукция_Элемент 	= ВСД_Продукция_Элемент;
		тз1.Продукция 				= тз1.ВСД_Продукция_Элемент.Продукция;
		тз1.ВидПродукции 			= тз1.ВСД_Продукция_Элемент.ВидПродукции;
		тз1.GUID 					= тз1.ВСД_Продукция_Элемент.GUID;
		тз1.КоэффициентПересчета 	= тз1.ВСД_Продукция_Элемент.КоэффициентПересчета;
		тз1.ЕдиницаИзмерения 		= тз1.ВСД_Продукция_Элемент.ЕдиницаИзмерения;
		тз1.СрокГодности 			= тз1.ВСД_Продукция_Элемент.СрокГодности;
		Если ПустоеЗначение(тз1.ВСД_Продукция_Элемент.ТермическоеСостояние)=0 Тогда
			тз1.ТермическиеУсловияПеревозки = тз1.ВСД_Продукция_Элемент.ТермическоеСостояние;
		Иначе
			тз1.ТермическиеУсловияПеревозки = ВыбТермическоеСостояние;
		КонецЕсли;

	Иначе
		тз1.Продукция = ?(ВыбПродукция.Выбран()=1,ВыбПродукция, тз1.Продукция);
		тз1.ВидПродукции = ?(ВыбВидПродукции.Выбран()=1,ВыбВидПродукции, тз1.ВидПродукции);
		тз1.ЕдиницаИзмерения = ?(ВыбЕдИзмерения.Выбран()=1,ВыбЕдИзмерения, тз1.ЕдиницаИзмерения);
		тз1.СрокГодности = ?(ВыбСрокГодности>0,ВыбСрокГодности, тз1.СрокГодности);
		тз1.КоэффициентПересчета = ?(ВыбКоэффициентПересчета>0,ВыбКоэффициентПересчета, тз1.КоэффициентПересчета);
		тз1.ТермическиеУсловияПеревозки = ГМ.ПолучитьКонстанту("ТермУсловияПеревозки");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТЗ()

	Форма.Закладки.ТекущаяСтрока(2);
	ПриВыбореЗакладки(2);

	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тзПродукция.УдалитьСтроки();
	тзПродукция.Выгрузить(тз1);

	спрНоменклатура = СоздатьОбъект("Справочник.Номенклатура");
	спрНоменклатура.ИспользоватьРодителя(ВыбГруппа,);
	спрНоменклатура.ВыбратьЭлементы();
	Пока спрНоменклатура.ПолучитьЭлемент()=1 Цикл
		Если (спрНоменклатура.ЭтоГруппа()=1) ИЛИ (спрНоменклатура.ПометкаУдаления()=1) Тогда
			продолжить;
		КонецЕсли;
		тз1.НоваяСтрока();
		ЗаполнитьСтрокуТз(тз1, спрНоменклатура.ТекущийЭлемент());

	КонецЦикла;

	тз1.Выгрузить(тзПродукция);
	тзПродукция.ВыводитьПиктограммы("Пометка");

	тзПродукция.ТекущаяСтрока(1);
КонецПроцедуры

Процедура Клик()
	ТекСтр = тзПродукция.НомерСтроки;
	ТекКолонка =  тзПродукция.ТекущаяКолонка();

	Если ТекКолонка="Пометка" Тогда
		Пометка = тзПродукция.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			тзПродукция.Пометка=1;
		Иначе
			тзПродукция.Пометка=2;
		КонецЕсли;

	//Если ТекКолонка="Создать" Тогда
	//	//Сформировать();
	//	Создать_ВСД_Продукция_Элемент( тзПродукция );
	//	ЗаполнитьТЗ() ;
	//	тзПродукция.ТекущаяКолонка(ТекКолонка);
	//	тзПродукция.ТекущаяСтрока(НомСтр);
	ИначеЕсли ТекКолонка="Номенклатура" Тогда
		Открытьформу(тзПродукция.Номенклатура);
	ИначеЕсли ТекКолонка="ВСД_Продукция_Элемент" Тогда
		Открытьформу(тзПродукция.ВСД_Продукция_Элемент);
	ИначеЕсли ТекКолонка="Продукция" Тогда
		спр = СоздатьОбъект("Справочник.ВСД_Продукция");
		Если спр.Выбрать("Выберите продукцию...",)=1 Тогда
			тзПродукция.УстановитьЗначение(ТекСтр,ТекКолонка,спр.ТекущийЭлемент());
		КонецЕсли;;
	ИначеЕсли ТекКолонка="ВидПродукции" Тогда
		спр = СоздатьОбъект("Справочник.ВСД_ВидПродукции");
		спр.ИспользоватьВладельца(тзПродукция.Продукция);
		Если спр.Выбрать("Выберите вид продукции...",)=1 Тогда
			тзПродукция.УстановитьЗначение(ТекСтр,ТекКолонка,спр.ТекущийЭлемент());
		КонецЕсли;;
	ИначеЕсли ТекКолонка="КоэффициентПересчета" Тогда
		Зн=тзПродукция.КоэффициентПересчета;
		Если ВвестиЧисло(Зн,"Введите коэффициент пересчета...",10,3)=1 Тогда
			тзПродукция.КоэффициентПересчета = Зн;
		КонецЕсли;
	ИначеЕсли ТекКолонка="СрокГодности" Тогда
		Зн=тзПродукция.СрокГодности;
		Если ВвестиЧисло(Зн,"Срок годности...",10,3)=1 Тогда
			тзПродукция.СрокГодности = Зн;
		КонецЕсли;
	ИначеЕсли ТекКолонка="ЕдиницаИзмерения" Тогда
		спр = СоздатьОбъект("Справочник.ВСД_ЕдиницыИзмерения");
		Если спр.Выбрать("Выберите единицу измерения...",)=1 Тогда
			тзПродукция.УстановитьЗначение(ТекСтр,ТекКолонка,спр.ТекущийЭлемент());
		КонецЕсли;;
	ИначеЕсли ТекКолонка="ТермическиеУсловияПеревозки" Тогда
		Зн="";
    	Если спТермическиеУсловияПеревозки.ВыбратьЗначение(Зн,"Выберите термические условия перевозки...",,,1)=1 Тогда
			тзПродукция.ТермическиеУсловияПеревозки = Зн;
        КонецЕсли;

	КонецЕсли;


КонецПроцедуры

Процедура ПриОткрытии()
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("Таблица");
	Форма.Закладки.ТекущаяСтрока(1);
	ПриВыбореЗакладки(1);


   //{Интеграционный модуль для переопределения функций, плюс несколько базовых функций
	ГМ._ПриОткрытии(Контекст);
	ГМ2.Инициализация(ГМ);


	//{ Обработку можно вызвать для заполнения списка -------------------------------
	// для этого в ------------------------------------------------------------------
	//
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда
		ВыбГруппа = Парам.Получить("ГруппаНоменклатуры");
	ИначеЕсли ТипЗначенияСтр(Парам)="ТаблицаЗначений" Тогда
		_тзВход = СоздатьОбъект("ТаблицаЗначений");

		тз1 = СоздатьОбъект("ТаблицаЗначений");
		тзПродукция.УдалитьСтроки();
		тзПродукция.Выгрузить(тз1);

		_тзВход =  Форма.Параметр;
		_тзВход.ВыбратьСтроки();
		Пока _тзВход.ПолучитьСтроку() = 1 Цикл
			тз1.НоваяСтрока();
			ЗаполнитьСтрокуТз(тз1, _тзВход.Номенклатура);			
		КонецЦикла;
		тз1.Выгрузить(тзПродукция);
		тзПродукция.ВыводитьПиктограммы("Пометка");
		тзПродукция.ТекущаяСтрока(1);

	Иначе
		//стандартное заполнение документов
	КонецЕсли;
	//}


	Форма.ВыбГруппа.ВыборГруппы(1);

	//ЗаполнитьТаблицуНоменклатурой();

	Если Форма.МодальныйРежим() = 0 Тогда
		оПривязки.Привязка("тзПродукция", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("кнЗакрыть, кнЗаполнить, Версия","T","Форма");		
	КонецЕсли;

КонецПроцедуры

Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

// установить реквизит ФормаУпаковки в ВСД_Продукция_Элемент
Процедура УстановитьУпаковка2()
	СпрФормаУпаковки = СоздатьОбъект("Справочник.ВСД_ФормыУпаковки");
	Если СпрФормаУпаковки.Выбрать("Форма упаковки для группы",)=0 Тогда
		Возврат;
	КонецЕсли;
	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тзПродукция.Выгрузить(тз1);
	тз1.Свернуть("ВСД_Продукция_Элемент, Пометка","");

	тз1.ВыбратьСтроки();
	Пока тз1.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз1.ВСД_Продукция_Элемент)=1 Тогда
			продолжить;
		КонецЕсли;
		Если тз1.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Сообщить(тз1.ВСД_Продукция_Элемент);
		Объект.НайтиЭлемент(тз1.ВСД_Продукция_Элемент);
		Объект.ФормаУпаковки = СпрФормаУпаковки.ТекущийЭлемент();
		Объект.Записать();
	КонецЦикла;

КонецПроцедуры

// установить реквизит ТипФасовки в ВСД_Продукция_Элемент
Процедура УстановитьУпаковка4()
	СпрФормаУпаковки = СоздатьОбъект("Справочник.ВСД_ФормыУпаковки");
	Если СпрФормаУпаковки.Выбрать("Форма упаковки для группы",)=0 Тогда
		Возврат;
	КонецЕсли;
	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тзПродукция.Выгрузить(тз1);
	тз1.Свернуть("ВСД_Продукция_Элемент,Пометка","");

	тз1.ВыбратьСтроки();
	Пока тз1.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз1.ВСД_Продукция_Элемент)=1 Тогда
			продолжить;
		КонецЕсли;
		Если тз1.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Сообщить(тз1.ВСД_Продукция_Элемент);
		Объект.НайтиЭлемент(тз1.ВСД_Продукция_Элемент);
		Объект.ТипФасовки = СпрФормаУпаковки.ТекущийЭлемент();
		Объект.Записать();
	КонецЦикла;

КонецПроцедуры

// установить реквизит ТипФасовки в ВСД_Продукция_Элемент
Процедура УстановитьТермическиеУсловия()
	//СпрФормаУпаковки = СоздатьОбъект("Справочник.ВСД_ФормыУпаковки");
	//Если СпрФормаУпаковки.Выбрать("Форма упаковки для группы",)=0 Тогда
	//	Возврат;
	//КонецЕсли;
	ВыбЗн="";
	Если спТермическиеУсловияПеревозки.ВыбратьЗначение( ВыбЗн, "Выберите термические условия перевозки...",,,1)<>1 Тогда
		Возврат;
    КонецЕсли;

	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тзПродукция.Выгрузить(тз1);
	тз1.Свернуть("ВСД_Продукция_Элемент,Пометка","");

	тз1.ВыбратьСтроки();
	Пока тз1.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз1.ВСД_Продукция_Элемент)=1 Тогда
			продолжить;
		КонецЕсли;
		Если тз1.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Сообщить(тз1.ВСД_Продукция_Элемент);
		Объект.НайтиЭлемент(тз1.ВСД_Продукция_Элемент);
		Объект.ТермическиеУсловияПеревозки = ВыбЗн;
		Объект.Записать();
	КонецЦикла;

КонецПроцедуры

Процедура ВыделитьВсе()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("ВыделитьВсе", "Выделить все строки");
	спМеню.ДобавитьЗначение("ВыделитьСоздать", "Выделить пустые (не созданные) ВСД_Продукция_Элемент");
	спМеню.ДобавитьЗначение("ВыделитьНеОтправленные", "Выделить НЕ ОТПРАВЛЕННЫЕ ВСД_Продукция_Элемент");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "ВыделитьВсе" Тогда
		тзПродукция.ВыбратьСтроки();
		Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
			//Если СписокДокументов.сЦвет = "" Тогда
				тзПродукция.Пометка=2;
			//КонецЕсли;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьСоздать" Тогда
		тзПродукция.ВыбратьСтроки();
		Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
			Если (ПустоеЗначение(тзПродукция.ВСД_Продукция_Элемент) = 1) Тогда
				тзПродукция.Пометка=2;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьНеОтправленные" Тогда
		тзПродукция.ВыбратьСтроки();
		Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
			Если ( ПустоеЗначение( тзПродукция.GUID) = 1 ) и (ПустоеЗначение(тзПродукция.ВСД_Продукция_Элемент) = 0) Тогда
				//Если ( СокрЛП( тзПродукция.ВСД.Статус) <> "COMPLETED" ) Тогда
					тзПродукция.Пометка=2;
				//КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ОтменитьВсе()

	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		тзПродукция.Пометка=1;
	КонецЦикла;

КонецПроцедуры

Процедура Отправить_Элементы_в_ГИС()

	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если тзПродукция.Пометка=2 Тогда
			Если ПустоеЗначение( тзПродукция.ВСД_Продукция_Элемент.GUID )=1 Тогда
				Отправить_в_ГИС( тзПродукция.ВСД_Продукция_Элемент, "CREATE" );
			Иначе
				Отправить_в_ГИС( тзПродукция.ВСД_Продукция_Элемент, "UPDATE" );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьТЗ();
КонецПроцедуры

Процедура Обновить_Элементы_из_ГИС()

	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если тзПродукция.Пометка=2 Тогда
			Если ПустоеЗначение( тзПродукция.ВСД_Продукция_Элемент.GUID )=0 Тогда				
				ГМ2.Получить_Инфо_Продукции( тзПродукция.ВСД_Продукция_Элемент );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьТЗ();
КонецПроцедуры

Процедура Удалить_Элементы_в_ГИС()

	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если тзПродукция.Пометка=2 Тогда
			Если ПустоеЗначение( тзПродукция.ВСД_Продукция_Элемент.GUID )=0 Тогда				
				ГМ2.Изменить_Продукцию( тзПродукция.ВСД_Продукция_Элемент, "DELETE" );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьТЗ();		
КонецПроцедуры

//{========================= Список изменений =================
Функция ПоказатьИзмененияВерсии()
	
	ЗапуститьПриложение("https://redmine.kb99.pro/issues/1529#note-18");
	
КонецФункции


Процедура ПриНажатииЛевойКнопки(Сост, х, у)
	
	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	Атр = ФормаРасш.ПолучитьАтрибутПоКоординатам(х,у);
	Если ТипЗначенияСтр(Атр) = "АтрибутФормы" Тогда
		Если Атр.Идентификатор = "Версия" Тогда
			ПоказатьИзмененияВерсии();
		КонецЕсли;  
	КонецЕсли;	
	
КонецПроцедуры

//}===========================================================

ВыбФирма = "";

спОбязательныеПоля = СоздатьОбъект("СписокЗначений");
спОбязательныеПоля.ДобавитьЗначение("Продукция");
спОбязательныеПоля.ДобавитьЗначение("ВидПродукции");
спОбязательныеПоля.ДобавитьЗначение("ЕдиницаИзмерения");
спОбязательныеПоля.ДобавитьЗначение("СрокГодности");
спОбязательныеПоля.ДобавитьЗначение("ТермическиеУсловияПеревозки");
спОбязательныеПоля.ДобавитьЗначение("КоэффициентПересчета");

тзПродукция.НоваяКолонка("Пометка",,,,"V",3);
тзПродукция.НоваяКолонка("Номенклатура",,,,);
тзПродукция.НоваяКолонка("ВСД_Продукция_Элемент","Справочник.ВСД_Продукция_Элемент",,,);
тзПродукция.НоваяКолонка("Продукция");
тзПродукция.НоваяКолонка("ВидПродукции");
тзПродукция.НоваяКолонка("GUID","Строка",36);
тзПродукция.НоваяКолонка("КоэффициентПересчета","Число",15,3,"Коэф.пересчета",10);
тзПродукция.НоваяКолонка("ЕдиницаИзмерения",,,,"Ед.изм.",10);
тзПродукция.НоваяКолонка("СрокГодности","Число",4);
тзПродукция.НоваяКолонка("ТермическиеУсловияПеревозки");

тзПродукция.ВыводитьПиктограммы("Пометка");

спТермическиеУсловияПеревозки = СоздатьОбъект("СписокЗначений");
спТермическиеУсловияПеревозки.ДобавитьЗначение( Перечисление.ВСД_ТермическиеУсловияПеревозки.FROZEN);
спТермическиеУсловияПеревозки.ДобавитьЗначение( Перечисление.ВСД_ТермическиеУсловияПеревозки.CHILLED);
спТермическиеУсловияПеревозки.ДобавитьЗначение( Перечисление.ВСД_ТермическиеУсловияПеревозки.COOLED);
спТермическиеУсловияПеревозки.ДобавитьЗначение( Перечисление.ВСД_ТермическиеУсловияПеревозки.VENTILATED);
