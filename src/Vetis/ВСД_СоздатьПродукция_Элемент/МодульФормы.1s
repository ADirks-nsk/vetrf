Перем спОбязательныеПоля;
Перем ВыбФирма Экспорт; //для выбора площадки
Перем оПривязки; //:Меркурий.Привязки
Перем тзПродукция, тпПродукция;

Процедура ЗаполнитьТЗ() Далее

//======================================================================
Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	ГМ2.Инициализация(ГМ);
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

//======================================================================
Процедура ВыделитьВсе()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("ВыделитьВсе", "Выделить все строки");
	спМеню.ДобавитьЗначение("ВыделитьСоздать", "Выделить пустые (не созданные) ВСД_Продукция_Элемент");
	спМеню.ДобавитьЗначение("ВыделитьНеОтправленные", "Выделить НЕ ОТПРАВЛЕННЫЕ ВСД_Продукция_Элемент");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "ВыделитьВсе" Тогда
		тзПродукция.ВыбратьСтроки();
		Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
			тзПродукция.Пометка = 1;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьСоздать" Тогда
		тзПродукция.ВыбратьСтроки();
		Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
			Если (ПустоеЗначение(тзПродукция.ВСД_Продукция_Элемент) = 1) Тогда
				тзПродукция.Пометка = 1;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьНеОтправленные" Тогда
		тзПродукция.ВыбратьСтроки();
		Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
			Если ( ПустоеЗначение( тзПродукция.GUID) = 1 ) и (ПустоеЗначение(тзПродукция.ВСД_Продукция_Элемент) = 0) Тогда
				тзПродукция.Пометка = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	тпПродукция.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура ОтменитьВсе()
	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		тзПродукция.Пометка = 0;
	КонецЦикла;
	тпПродукция.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура тпПродукцияПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");

		Если ПустоеЗначение(ДанныеСтроки.ВСД_Продукция_Элемент.GUID)=0 Тогда 			
			ОформлениеСтроки.ЦветФона = 14680031;	// Светло зеленый (12910532)
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпПродукцияПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзПродукция);
	тзПродукция.Пометка = ?(тзПродукция.Пометка = 1,0,1);
	ТабличноеПоле.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура тпПродукцияВыбор(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	Если ТипРегиона <> 3 Тогда Возврат;
	КонецЕсли;
	
	ГМ.ПриАктивизацииСтрокиТП(тпПродукция, тзПродукция);

	КодКолонки = Колонка.Данные;
	_знач = тзПродукция.ПолучитьЗначение(стр, КодКолонки);
	
	Если КодКолонки = "Пометка" Тогда
		тзПродукция.Пометка = ?(тзПродукция.Пометка = 1,0,1);
		ТабличноеПоле.ОбновитьСтроки();
	ИначеЕсли КодКолонки = "Номенклатура" Тогда
		ОткрытьФорму(тзПродукция.Номенклатура);
	ИначеЕсли КодКолонки = "ВСД_Продукция_Элемент" Тогда
		ОткрытьФорму(тзПродукция.ВСД_Продукция_Элемент);
	Иначе
		тзПродукция.Пометка = 1;
		ТабличноеПоле.ОбновитьСтроки();

		Если КодКолонки = "Продукция" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,15,2, "ВыбЗнач", "0x00000020");
		ИначеЕсли КодКолонки = "ВидПродукции" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,15,2, "ВремВидПродукции", "0x00000020");
		ИначеЕсли КодКолонки = "КоэффициентПересчета" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,15,3, "ВыбЗнач", "0x00000020");
		ИначеЕсли КодКолонки = "СрокГодности" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,4,0, "ВыбЗнач", "0x00000020");
		ИначеЕсли КодКолонки = "ЕдиницаИзмерения" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,4,0, "ВыбЗнач", "0x00000020");
		ИначеЕсли КодКолонки = "ТермическоеСостояние" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,4,0, "ВыбЗнач", "0x00000020");
		ИначеЕсли КодКолонки = "ФормаУпаковки" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,4,0, "ВыбЗнач", "0x00000020");
		ИначеЕсли КодКолонки = "ТипФасовки" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,4,0, "ВыбЗнач", "0x00000020");
		ИначеЕсли КодКолонки = "Площадка" Тогда
			ТабличноеПоле.РедактироватьЗначение(стр, Колонка, ТипРегиона, _знач,4,0, "ВыбЗнач", "0x00000020");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпПродукцияПриРедактированииЗначения(ТабличноеПоле, Стр, Колонка, ТипРегиона, __знач)
	Если ТипРегиона =3 Тогда
		КодКолонки = Колонка.Данные;
		
		Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

		Для СЦ = 1 По тзПродукция.КоличествоСтрок() Цикл
			Если тзПродукция.ПолучитьЗначение(СЦ, "Пометка") = 1 Тогда
				
				ВремПродукцияЭлемент = тзПродукция.ПолучитьЗначение(СЦ, "ВСД_Продукция_Элемент");
				Если ПустоеЗначение(ВремПродукцияЭлемент) = 0 Тогда
					Объект.НайтиЭлемент(ВремПродукцияЭлемент);
				КонецЕсли;
				
				Если КодКолонки = "ВидПродукции" Тогда
					ВремПродукция = тзПродукция.ПолучитьЗначение(СЦ, "Продукция");
					Если ПустоеЗначение(ВремПродукция) = 0 Тогда
						Если __знач.Владелец <> ВремПродукция Тогда Продолжить;
						КонецЕсли;
					Иначе
						тзПродукция.УстановитьЗначение(СЦ, "Продукция", __знач.Владелец);
						Объект.УстановитьАтрибут("Продукция", __знач.Владелец);
					КонецЕсли;
				КонецЕсли;
				
				тзПродукция.УстановитьЗначение(СЦ, КодКолонки, __знач);
				
				Если КодКолонки = "Продукция" Тогда
					ВремВидПродукции = тзПродукция.ПолучитьЗначение(СЦ, "ВидПродукции");
					Если ПустоеЗначение(ВремВидПродукции) = 0 Тогда
						Если ВремВидПродукции.Владелец <> __знач Тогда
							тзПродукция.УстановитьЗначение(СЦ, "ВидПродукции", ПолучитьПустоеЗначение("Справочник.ВСД_ВидПродукции"));
							Объект.УстановитьАтрибут("ВидПродукции", ПолучитьПустоеЗначение("Справочник.ВСД_ВидПродукции"));
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если ПустоеЗначение(ВремПродукцияЭлемент) = 0 Тогда
					Объект.УстановитьАтрибут(Колонка.Данные, __знач);
					Объект.Записать();
					тзПродукция.УстановитьЗначение(СЦ, "ВСД_Продукция_Элемент", Объект.ТекущийЭлемент());
				КонецЕсли;

			КонецЕсли;
		КонецЦикла;

		ТабличноеПоле.ОбновитьСтроки();
	КонецЕсли;	
КонецПроцедуры

//======================================================================
Процедура Отправить_в_ГИС( _ВСД_Продукция_Элемент, операция="CREATE" )

	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Предупреждение("Выберите площадку!");
		Возврат;
	КонецЕсли;

	ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+ _ВСД_Продукция_Элемент);

   	Результат = ГМ2.Изменить_Продукцию( _ВСД_Продукция_Элемент, операция );
   	Сообщить(Результат);

КонецПроцедуры

//======================================================================
Функция ПроверитьЗаполнениеРеквизитов( _ТекСтрока )
	Рез = 1;
	Для Н=1 По спОбязательныеПоля.РазмерСписка() Цикл
		НаименованиеРеквизита = спОбязательныеПоля.ПолучитьЗначение(Н);
		ЗначениеРеквизита =  _ТекСтрока.ПолучитьЗначение( _ТекСтрока.НомерСтроки, НаименованиеРеквизита );
		Если ПустоеЗначение(ЗначениеРеквизита)=1 Тогда
			Сообщить(" не заполнен реквизит " + НаименованиеРеквизита +" в строке "+_ТекСтрока.НомерСтроки);
			Рез = 0;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Рез;
КонецФункции

//======================================================================
Процедура Создать_ВСД_Продукция_Элемент( _ТекСтрока )

	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	Если ПустоеЗначение(_ТекСтрока.ВСД_Продукция_Элемент) = 1 Тогда
		НачатьТранзакцию();

			Если ПроверитьЗаполнениеРеквизитов(_ТекСтрока) = 0 Тогда Возврат;
			КонецЕсли;
			
			Объект.Новый();
			Объект.Наименование = _ТекСтрока.Номенклатура.Наименование;
	
			Объект.Площадка 			= _ТекСтрока.Площадка;
			Объект.Продукция 			= _ТекСтрока.Продукция;
			Объект.ВидПродукции 		= _ТекСтрока.ВидПродукции;
			Объект.КоэффициентПересчета = _ТекСтрока.КоэффициентПересчета;
			Объект.ЕдиницаИзмерения 	= _ТекСтрока.ЕдиницаИзмерения;
			Объект.СрокГодности 		= _ТекСтрока.СрокГодности;
			Объект.ТермическоеСостояние = _ТекСтрока.ТермическоеСостояние;
			Объект.ФормаУпаковки 		= _ТекСтрока.ФормаУпаковки;
			Объект.ТипФасовки 			= _ТекСтрока.ТипФасовки;
	
			Объект.Записать();
	
			ГМ.УстановитьСоответсвие_Номенклатура_Продукция_Элемент(_ТекСтрока.Номенклатура, Объект.ТекущийЭлемент());
			
			_ТекСтрока.ВСД_Продукция_Элемент = Объект.ТекущийЭлемент();

		ЗафиксироватьТранзакцию();
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура СоздатьЭлементы()

	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если тзПродукция.Пометка = 1 Тогда
			Создать_ВСД_Продукция_Элемент( тзПродукция );
		КонецЕсли;
	КонецЦикла;

	тпПродукция.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура Отправить_Элементы_в_ГИС()

	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если тзПродукция.Пометка=1 Тогда
			Если ПустоеЗначение( тзПродукция.ВСД_Продукция_Элемент.GUID )=1 Тогда
				Отправить_в_ГИС( тзПродукция.ВСД_Продукция_Элемент, "CREATE" );
			Иначе
				Отправить_в_ГИС( тзПродукция.ВСД_Продукция_Элемент, "UPDATE" );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьТЗ();
КонецПроцедуры

//======================================================================
Процедура Обновить_Элементы_из_ГИС()

	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если тзПродукция.Пометка=1 Тогда
			Если ПустоеЗначение( тзПродукция.ВСД_Продукция_Элемент.GUID )=0 Тогда				
				ГМ2.Получить_Инфо_Продукции( тзПродукция.ВСД_Продукция_Элемент );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьТЗ();
КонецПроцедуры

//======================================================================
Процедура Удалить_Элементы_в_ГИС()
	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если тзПродукция.Пометка=1 Тогда
			Если ПустоеЗначение( тзПродукция.ВСД_Продукция_Элемент.GUID )=0 Тогда				
				ГМ2.Изменить_Продукцию( тзПродукция.ВСД_Продукция_Элемент, "DELETE" );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьТЗ();		
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьСтрокуТз(тз1, спрНоменклатура )
	тз1.Пометка=0;
	тз1.Номенклатура = спрНоменклатура;
	
	тзП = ГМ.ПолучитьСписок_ВСДПродукцияЭлемент_По_Номенклатура( тз1.Номенклатура );
	тзП.ВыбратьСтроки();
	Если тзП.ПолучитьСтроку() = 1 Тогда 
		ВСД_Продукция_Элемент = тзП.ВСД_Продукция_Элемент;
	КонецЕсли;
	
	Если ПустоеЗначение(ВСД_Продукция_Элемент)=0 Тогда
		тз1.ВСД_Продукция_Элемент 		= ВСД_Продукция_Элемент;
		тз1.Продукция 					= тз1.ВСД_Продукция_Элемент.Продукция;
		тз1.ВидПродукции 				= тз1.ВСД_Продукция_Элемент.ВидПродукции;
		тз1.GUID 						= тз1.ВСД_Продукция_Элемент.GUID;
		тз1.КоэффициентПересчета 		= тз1.ВСД_Продукция_Элемент.КоэффициентПересчета;
		тз1.ЕдиницаИзмерения 			= тз1.ВСД_Продукция_Элемент.ЕдиницаИзмерения;
		тз1.СрокГодности 				= тз1.ВСД_Продукция_Элемент.СрокГодности;
		тз1.ФормаУпаковки				= тз1.ВСД_Продукция_Элемент.ФормаУпаковки;
		тз1.ТипФасовки					= тз1.ВСД_Продукция_Элемент.ТипФасовки;
		тз1.ТермическоеСостояние 		= тз1.ВСД_Продукция_Элемент.ТермическоеСостояние;
		тз1.Площадка 					= тз1.ВСД_Продукция_Элемент.Площадка;
	Иначе
		тз1.Площадка 					= Отправитель_Площадка;
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьТЗ()
	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тзПродукция.УдалитьСтроки();
	тзПродукция.Выгрузить(тз1);

	спрНоменклатура = СоздатьОбъект("Справочник.Номенклатура");
	
	Если ПустоеЗначение(ВыбГруппа) = 1 Тогда
		Если Вопрос("Не выбрана группа номенклатуры!"+РазделительСтрок+"Продолжить?","Да+Нет",30) = "Нет" Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	спрНоменклатура.ИспользоватьРодителя(ВыбГруппа,);
	спрНоменклатура.ВыбратьЭлементы();
	Пока спрНоменклатура.ПолучитьЭлемент()=1 Цикл
		Если (спрНоменклатура.ЭтоГруппа()=1) ИЛИ (спрНоменклатура.ПометкаУдаления()=1) Тогда
			Продолжить;
		КонецЕсли;

		Состояние(спрНоменклатура.Наименование);

		тз1.НоваяСтрока();
		ЗаполнитьСтрокуТз(тз1, спрНоменклатура.ТекущийЭлемент());
	КонецЦикла;

	тз1.Выгрузить(тзПродукция);
	
	тпПродукция.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()

   //Интеграционный модуль для переопределения функций, плюс несколько базовых функций
	ГМ._ПриОткрытии(Контекст);
	ГМ2.Инициализация(ГМ);

	ВыбТермическоеСостояние = ГМ.ПолучитьКонстанту("ТермУсловияПеревозки");

	// Обработку можно вызвать для заполнения списка -------------------------------
	// для этого в ------------------------------------------------------------------
	//
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда
		ВыбГруппа = Парам.Получить("ГруппаНоменклатуры");
	ИначеЕсли ТипЗначенияСтр(Парам)="ТаблицаЗначений" Тогда
		_тзВход = СоздатьОбъект("ТаблицаЗначений");

		тз1 = СоздатьОбъект("ТаблицаЗначений");
		тзПродукция.УдалитьСтроки();
		тзПродукция.Выгрузить(тз1);

		_тзВход =  Форма.Параметр;
		_тзВход.ВыбратьСтроки();
		Пока _тзВход.ПолучитьСтроку() = 1 Цикл
			тз1.НоваяСтрока();
			ЗаполнитьСтрокуТз(тз1, _тзВход.Номенклатура);			
		КонецЦикла;
		тз1.Выгрузить(тзПродукция);
		тзПродукция.ВыводитьПиктограммы("Пометка");
		тзПродукция.ТекущаяСтрока(1);

	Иначе
		//стандартное заполнение документов
	КонецЕсли;

	Форма.ВыбГруппа.ВыборГруппы(1);

	Если Форма.МодальныйРежим() = 0 Тогда
		оПривязки.Привязка("тпПродукция", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("кнЗакрыть, Версия","T","Форма");		
	КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура ПослеСозданияФормы()

	тпПродукция = ГМ.СоздатьТабличноеПоле(Контекст, "тпПродукция", тзПродукция,1,1);
	
КонецПроцедуры

//======================================================================
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//======================================================================
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	ИначеЕсли ЭлементДиалога = "ВремВидПродукции" Тогда
		СуперВладелец = тзПродукция.Продукция;
		Если ПустоеЗначение(СуперВладелец) = 0 Тогда
			Парам = "";
			ОткрытьФорму("Справочник.ВСД_ВидПродукции",Парам);
			Парам.ИспользоватьВладельца(СуперВладелец);
		Иначе
			Сообщить("Выберите продукцию!");
		КонецЕсли;
		ФлагСтандОбр = 0;                    
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//========================= Список изменений ===========================
Процедура ПриНажатииЛевойКнопки(Сост, х, у)
	
	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	Атр = ФормаРасш.ПолучитьАтрибутПоКоординатам(х,у);
	Если ТипЗначенияСтр(Атр) = "АтрибутФормы" Тогда
		Если Атр.Идентификатор = "Версия" Тогда
			ЗапуститьПриложение("https://redmine.kb99.pro/issues/1529#note-18");
		КонецЕсли;  
	КонецЕсли;	
	
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьСрокГодностиПоСвойству()
	СпрСвва = СоздатьОбъект("Справочник.ВидыСвойств");
	Рез = СпрСвва.Выбрать("Выберите свойство = срок годности",);
	Если Рез =0 Тогда
		Возврат;
	КонецЕсли;
	
	СпрЗнСвойств = СоздатьОбъект("Справочник.СвойстваНоменклатуры");	
	СпрПЭ = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
	
	тзПродукция.ВыбратьСтроки();
	Пока тзПродукция.ПолучитьСтроку() = 1 Цикл
		Если ( ПустоеЗначение( тзПродукция.Номенклатура )=0 )
			и ( ПустоеЗначение( тзПродукция.ВСД_Продукция_Элемент )=0 ) Тогда 
			СпрЗнСвойств.ИспользоватьВладельца(тзПродукция.Номенклатура);
			СпрЗнСвойств.ВыбратьЭлементы();
			Пока СпрЗнСвойств.ПолучитьЭлемент() = 1 Цикл
				Если СпрЗнСвойств.ПометкаУдаления()=1 Тогда
					Продолжить;
				КонецЕсли;
				Если СпрЗнСвойств.ВидСвойства <> СпрСвва.ТекущийЭлемент() Тогда
					Продолжить;
				КонецЕсли;
				тзПродукция.СрокГодности = СпрЗнСвойств.ЗначениеСвойства.Наименование;
				
				СпрПЭ.НайтиЭлемент( тзПродукция.ВСД_Продукция_Элемент );
				СпрПЭ.СрокГодности = тзПродукция.СрокГодности;
				СпрПЭ.Записать();
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	тпПродукция.ОбновитьСтроки();
		
КонецПроцедуры

//======================================================================
Процедура МенюЗаполнить()
	
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("СрокГодностиПоСвойству", "Срок годности по свойству Номенклатуры");
	//спМеню.ДобавитьЗначение("СоздатьВСД", "Создать ВСД");
	//спМеню.ДобавитьЗначение("ОтправитьВСД", "Отправить ВСД");
	//спМеню.ДобавитьЗначение("АннулироватьВСД", "Аннулировать ВСД");
	//спМеню.ДобавитьЗначение("ПолучитьУсловияПеревозки", "Получить условия перевозки");
	//спМеню.ДобавитьЗначение("ПолучитьОтветВетис", "Получить ответ ВЕТИС");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	//Если зн = "СоздатьВСД" Тогда
	//	СоздатьВСД();
	Если зн = "СрокГодностиПоСвойству" Тогда
		ЗаполнитьСрокГодностиПоСвойству();
	//ИначеЕсли зн = "ОтправитьВСД" Тогда
	//	ОтправитьВСД();
	//ИначеЕсли зн = "АннулироватьВСД" Тогда
	//	АннулироватьВСД();
	//ИначеЕсли зн = "ПолучитьУсловияПеревозки" Тогда
	//	ПолучитьУсловияПеревозки();
	//ИначеЕсли зн = "ПолучитьОтветВетис" Тогда
	//	ПолучитьОтветВетис();
	КонецЕсли;

КонецПроцедуры

ВыбФирма = "";

спОбязательныеПоля = СоздатьОбъект("СписокЗначений");
спОбязательныеПоля.ДобавитьЗначение("Продукция");
спОбязательныеПоля.ДобавитьЗначение("ВидПродукции");
спОбязательныеПоля.ДобавитьЗначение("ЕдиницаИзмерения");
спОбязательныеПоля.ДобавитьЗначение("СрокГодности");
спОбязательныеПоля.ДобавитьЗначение("ТермическоеСостояние");
спОбязательныеПоля.ДобавитьЗначение("КоэффициентПересчета");

тзПродукция = СоздатьОбъект("ТаблицаЗначений");
тзПродукция.НоваяКолонка("Пометка","Число",,,"V",3);
тзПродукция.НоваяКолонка("Номенклатура","Справочник.Номенклатура",,,,15);
тзПродукция.НоваяКолонка("ВСД_Продукция_Элемент","Справочник.ВСД_Продукция_Элемент",,,"Продукция элемент",10);
тзПродукция.НоваяКолонка("Продукция","Справочник.ВСД_Продукция",,,,10);
тзПродукция.НоваяКолонка("ВидПродукции","Справочник.ВСД_ВидПродукции",,,"Вид продукции",10);
тзПродукция.НоваяКолонка("КоэффициентПересчета","Число",15,3,"Коэф.пересчета",8);
тзПродукция.НоваяКолонка("ЕдиницаИзмерения","Справочник.ВСД_ЕдиницыИзмерения",,,"Ед.изм.",10);
тзПродукция.НоваяКолонка("ФормаУпаковки","Справочник.ВСД_ФормыУпаковки",,,"Форма упаковки",10);
тзПродукция.НоваяКолонка("ТипФасовки","Справочник.ВСД_ФормыУпаковки",,,"Тип фасовки",10);
тзПродукция.НоваяКолонка("СрокГодности","Число",4,,"Срок годности",8);
тзПродукция.НоваяКолонка("ТермическоеСостояние","Перечисление.ВСД_ТермическиеУсловияПеревозки",,,"Термические условия перевозки",15);
тзПродукция.НоваяКолонка("Площадка","Справочник.ВСД_Площадка",,,"Площадка",15);
тзПродукция.НоваяКолонка("GUID","Строка",36,,,10);
