Перем спОбязательныеПоля;
Перем ВыбФирма Экспорт; //для выбора площадки
Перем оПривязки; //:Меркурий.Привязки

Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	ГМ2.Инициализация(ГМ);
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

Процедура Отправить_в_ГИС( _ВСД_Продукция_Элемент, операция="CREATE" )

	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Предупреждение("Выберите площадку!");
		Возврат;
	КонецЕсли;

	//Если ПустоеЗначение(тз.GUID)=0 Тогда
	//	Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;

	ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+ _ВСД_Продукция_Элемент);

   	Результат = ГМ2.Изменить_Продукцию( _ВСД_Продукция_Элемент, операция );
   	Сообщить(Результат);

КонецПроцедуры

//Процедура Изменить( _ВСД_Продукция_Элемент )
//
//	//Если ПустоеЗначение( _ВСД_Продукция_Элемент.GUID)=0 Тогда
//	//	Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда
//	//		Возврат;
//	//	КонецЕсли;
//	//КонецЕсли;
//
//	ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+ _ВСД_Продукция_Элемент);
//
//    Результат = ГМ2.Изменить_Продукцию( _ВСД_Продукция_Элемент, "UPDATE");
//   	Сообщить(Результат);
//
//КонецПроцедуры

Функция ПроверитьЗаполнениеРеквизитов( _ТекСтрока )
	Рез = 1;
	Для Н=1 По спОбязательныеПоля.РазмерСписка() Цикл
		НаименованиеРеквизита = спОбязательныеПоля.ПолучитьЗначение(Н);
		ЗначениеРеквизита =  _ТекСтрока.ПолучитьЗначение( _ТекСтрока.НомерСтроки, НаименованиеРеквизита );
		Если ПустоеЗначение(ЗначениеРеквизита)=1 Тогда
			Сообщить(" не заполнен реквизит " + НаименованиеРеквизита +" в строке "+_ТекСтрока.НомерСтроки);
			Рез = 0;
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции

Процедура Создать_ВСД_Продукция_Элемент( _ТекСтрока )


	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	Если ПустоеЗначение( _ТекСтрока.ВСД_Продукция_Элемент)=1 Тогда
		НачатьТранзакцию();
	//Если ПустоеЗначение( ВыбНоменклатура.ВСД_Продукция_Элемент ) Тогда
		Если ПроверитьЗаполнениеРеквизитов( _ТекСтрока )=0 Тогда
			//Сообщить("Не заполнены обязательные реквизиты справочника "+ _ТекСтрока.Номенклатура+". Пропускаем...");
			возврат;
		КонецЕсли;
		// попробуем найти в справочнике по наименованию
		//Если спрВСД_Продукция_Элемент.НайтиПоНаименованию(СокрЛП( ВыбНоменклатура.Наименование ),0,1)=1 Тогда
		//	Если Вопрос("Найден элемент продукции с наименованием номенклатуры 1с ["+СокрЛП( ВыбНоменклатура.Наименование )+"]. Использовать его?","Да+Нет")="Да" Тогда
		//	КонецЕсли;
		//КонецЕсли;
		//Если Операция = "Создать" Тогда
			Объект.Новый();
			Объект.Наименование= _ТекСтрока.Номенклатура.Наименование;
		//КонецЕсли;
	//Иначе
	//	спрВСД_Продукция_Элемент.НайтиЭлемент(ВыбНоменклатура.ВСД_Продукция_Элемент);


		Объект.Площадка 			= Отправитель_Площадка;
		Объект.Продукция 			= _ТекСтрока.Продукция;
		Объект.ВидПродукции 		= _ТекСтрока.ВидПродукции;
		Объект.КоэффициентПересчета = _ТекСтрока.КоэффициентПересчета;
		Объект.ЕдиницаИзмерения 	= _ТекСтрока.ЕдиницаИзмерения;
		Объект.СрокГодности 		= _ТекСтрока.СрокГодности;
		Объект.ТермическиеУсловияПеревозки = спТермическиеУсловияПеревозки.НайтиЗначение(_ТекСтрока.ТермическиеУсловияПеревозки);

		Объект.Записать();

		спр = СоздатьОбъект("Справочник.Номенклатура");
		спр.НайтиЭлемент( _ТекСтрока.Номенклатура );
		спр.ВСД_Продукция_Элемент = Объект.ТекущийЭлемент();
		спр.Записать();
		_ТекСтрока.ВСД_Продукция_Элемент = Объект.ТекущийЭлемент();

		ЗафиксироватьТранзакцию();

	КонецЕсли;
	//Если ПустаяСтрока(Объект.GUID)=1  Тогда
	//    Создать( Объект.ТекущийЭлемент(), "CREATE");
	////Иначе
	////	Изменить();
	//КонецЕсли;
КонецПроцедуры

Процедура СоздатьЭлементы()

	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если тз.Пометка=2 Тогда
			Создать_ВСД_Продукция_Элемент( тз );
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


////*******************************************
//Процедура Сформировать(ГрупповаяОбработка=0)
//
//	Если ГрупповаяОбработка=0 Тогда
//		СоздатьЭлемент_ВСД_Продукция_Элемент( тз );
//	Иначе
//
//		тз.ВыбратьСтроки();
//		Пока тз.ПолучитьСтроку()=1 Цикл
//			СоздатьЭлемент_ВСД_Продукция_Элемент( тз );
//		КонецЦикла;
//	КонецЕсли;
//
//КонецПроцедуры


Процедура ПриВыбореЗакладки(Ном)
	Форма.ИспользоватьСлой(Форма.Закладки.ПолучитьЗначение(Ном)+", Общий",2);
КонецПроцедуры

Процедура ЗаполнитьТЗ()

	Форма.Закладки.ТекущаяСтрока(2);
	ПриВыбореЗакладки(2);

	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тз.УдалитьСтроки();
	тз.Выгрузить(тз1);
	//Если ВыбГруппа.Выбран()=1 Тогда
		спрНоменклатура = СоздатьОбъект("Справочник.Номенклатура");
		спрНоменклатура.ИспользоватьРодителя(ВыбГруппа,);
		спрНоменклатура.ВыбратьЭлементы();
		Пока спрНоменклатура.ПолучитьЭлемент()=1 Цикл
			Если (спрНоменклатура.ЭтоГруппа()=1) ИЛИ (спрНоменклатура.ПометкаУдаления()=1) Тогда
				продолжить;
			КонецЕсли;
			тз1.НоваяСтрока();
			тз1.Пометка=1;
			тз1.Номенклатура=спрНоменклатура.ТекущийЭлемент();
			Если ПустоеЗначение(спрНоменклатура.ВСД_Продукция_Элемент)=0 Тогда
				тз1.ВСД_Продукция_Элемент 	= спрНоменклатура.ВСД_Продукция_Элемент;
				тз1.Продукция 				= спрНоменклатура.ВСД_Продукция_Элемент.Продукция;
				тз1.ВидПродукции 			= спрНоменклатура.ВСД_Продукция_Элемент.ВидПродукции;
				тз1.GUID 					= спрНоменклатура.ВСД_Продукция_Элемент.GUID;
				тз1.КоэффициентПересчета 	= спрНоменклатура.ВСД_Продукция_Элемент.КоэффициентПересчета;
				тз1.ЕдиницаИзмерения 		= спрНоменклатура.ВСД_Продукция_Элемент.ЕдиницаИзмерения;
				тз1.СрокГодности 			= спрНоменклатура.ВСД_Продукция_Элемент.СрокГодности;
				тз1.ТермическиеУсловияПеревозки = спТермическиеУсловияПеревозки.ПолучитьЗначение( Макс(спрНоменклатура.ВСД_Продукция_Элемент.ТермическиеУсловияПеревозки, 1 ));

			Иначе
				тз1.Продукция = ?(ВыбПродукция.Выбран()=1,ВыбПродукция, тз1.Продукция);
				тз1.ВидПродукции = ?(ВыбВидПродукции.Выбран()=1,ВыбВидПродукции, тз1.ВидПродукции);
				тз1.ЕдиницаИзмерения = ?(ВыбЕдИзмерения.Выбран()=1,ВыбЕдИзмерения, тз1.ЕдиницаИзмерения);
				тз1.СрокГодности = ?(ВыбСрокГодности>0,ВыбСрокГодности, тз1.СрокГодности);
				тз1.КоэффициентПересчета = ?(ВыбКоэффициентПересчета>0,ВыбКоэффициентПересчета, тз1.КоэффициентПересчета);
				тз1.ТермическиеУсловияПеревозки = ?(спТермическиеУсловияПеревозки.ТекущаяСтрока()>0,
								спТермическиеУсловияПеревозки.ПолучитьЗначение(спТермическиеУсловияПеревозки.ТекущаяСтрока()),
								спТермическиеУсловияПеревозки.ПолучитьЗначение(тз1.ТермическиеУсловияПеревозки));
			КонецЕсли;
			//Если ПустаяСтрока(тз.GUID)=0 Тогда
			//	тз.Создать="С";
			//КонецЕсли;

		КонецЦикла;

		тз1.Выгрузить(тз);
		тз.ВыводитьПиктограммы("Пометка");

		тз.ТекущаяСтрока(1);
	//КонецЕсли;
КонецПроцедуры

Процедура Клик()
	ТекСтр = тз.НомерСтроки;
	ТекКолонка =  тз.ТекущаяКолонка();

	Если ТекКолонка="Пометка" Тогда
		Пометка = тз.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			тз.Пометка=1;
		Иначе
			тз.Пометка=2;
		КонецЕсли;

	//Если ТекКолонка="Создать" Тогда
	//	//Сформировать();
	//	Создать_ВСД_Продукция_Элемент( тз );
	//	ЗаполнитьТЗ() ;
	//	тз.ТекущаяКолонка(ТекКолонка);
	//	тз.ТекущаяСтрока(НомСтр);
	ИначеЕсли ТекКолонка="Номенклатура" Тогда
		Открытьформу(тз.Номенклатура);
	ИначеЕсли ТекКолонка="ВСД_Продукция_Элемент" Тогда
		Открытьформу(тз.ВСД_Продукция_Элемент);
	ИначеЕсли ТекКолонка="Продукция" Тогда
		спр = СоздатьОбъект("Справочник.ВСД_Продукция");
		Если спр.Выбрать("Выберите продукцию...",)=1 Тогда
			тз.УстановитьЗначение(ТекСтр,ТекКолонка,спр.ТекущийЭлемент());
		КонецЕсли;;
	ИначеЕсли ТекКолонка="ВидПродукции" Тогда
		спр = СоздатьОбъект("Справочник.ВСД_ВидПродукции");
		спр.ИспользоватьВладельца(тз.Продукция);
		Если спр.Выбрать("Выберите вид продукции...",)=1 Тогда
			тз.УстановитьЗначение(ТекСтр,ТекКолонка,спр.ТекущийЭлемент());
		КонецЕсли;;
	ИначеЕсли ТекКолонка="КоэффициентПересчета" Тогда
		Зн=тз.КоэффициентПересчета;
		Если ВвестиЧисло(Зн,"Введите коэффициент пересчета...",10,3)=1 Тогда
			тз.КоэффициентПересчета = Зн;
		КонецЕсли;
	ИначеЕсли ТекКолонка="СрокГодности" Тогда
		Зн=тз.СрокГодности;
		Если ВвестиЧисло(Зн,"Срок годности...",10,3)=1 Тогда
			тз.СрокГодности = Зн;
		КонецЕсли;
	ИначеЕсли ТекКолонка="ЕдиницаИзмерения" Тогда
		спр = СоздатьОбъект("Справочник.ВСД_ЕдиницыИзмерения");
		Если спр.Выбрать("Выберите единицу измерения...",)=1 Тогда
			тз.УстановитьЗначение(ТекСтр,ТекКолонка,спр.ТекущийЭлемент());
		КонецЕсли;;
	ИначеЕсли ТекКолонка="ТермическиеУсловияПеревозки" Тогда
		Зн="";
    	Если спТермическиеУсловияПеревозки.ВыбратьЗначение(Зн,"Выберите термические условия перевозки...",,,1)=1 Тогда
			тз.ТермическиеУсловияПеревозки = Зн;
        КонецЕсли;

	КонецЕсли;


КонецПроцедуры

Процедура ПриОткрытии()
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("Таблица");
	Форма.Закладки.ТекущаяСтрока(1);
	ПриВыбореЗакладки(1);


   //{Интеграционный модуль для переопределения функций, плюс несколько базовых функций
	ГМ._ПриОткрытии(Контекст);
	ГМ2.Инициализация(ГМ);


	//{ Обработку можно вызвать для заполнения списка -------------------------------
	// для этого в ------------------------------------------------------------------
	//
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда
		ВыбГруппа = Парам.Получить("ГруппаНоменклатуры");

	Иначе
		//стандартное заполнение документов
	КонецЕсли;
	//}


	Форма.ВыбГруппа.ВыборГруппы(1);

	//ЗаполнитьТаблицуНоменклатурой();

	Если Форма.МодальныйРежим() = 0 Тогда
		оПривязки.Привязка("тз", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("кнЗакрыть","T","Форма");
	КонецЕсли;

КонецПроцедуры

Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

// установить реквизит ФормаУпаковки в ВСД_Продукция_Элемент
Процедура УстановитьУпаковка2()
	СпрФормаУпаковки = СоздатьОбъект("Справочник.ВСД_ФормыУпаковки");
	Если СпрФормаУпаковки.Выбрать("Форма упаковки для группы",)=0 Тогда
		Возврат;
	КонецЕсли;
	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тз.Выгрузить(тз1);
	тз1.Свернуть("ВСД_Продукция_Элемент, Пометка","");

	тз1.ВыбратьСтроки();
	Пока тз1.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз1.ВСД_Продукция_Элемент)=1 Тогда
			продолжить;
		КонецЕсли;
		Если тз1.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Сообщить(тз1.ВСД_Продукция_Элемент);
		Объект.НайтиЭлемент(тз1.ВСД_Продукция_Элемент);
		Объект.ФормаУпаковки = СпрФормаУпаковки.ТекущийЭлемент();
		Объект.Записать();
	КонецЦикла;

КонецПроцедуры

// установить реквизит ТипФасовки в ВСД_Продукция_Элемент
Процедура УстановитьУпаковка4()
	СпрФормаУпаковки = СоздатьОбъект("Справочник.ВСД_ФормыУпаковки");
	Если СпрФормаУпаковки.Выбрать("Форма упаковки для группы",)=0 Тогда
		Возврат;
	КонецЕсли;
	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тз.Выгрузить(тз1);
	тз1.Свернуть("ВСД_Продукция_Элемент,Пометка","");

	тз1.ВыбратьСтроки();
	Пока тз1.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз1.ВСД_Продукция_Элемент)=1 Тогда
			продолжить;
		КонецЕсли;
		Если тз1.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Сообщить(тз1.ВСД_Продукция_Элемент);
		Объект.НайтиЭлемент(тз1.ВСД_Продукция_Элемент);
		Объект.ТипФасовки = СпрФормаУпаковки.ТекущийЭлемент();
		Объект.Записать();
	КонецЦикла;

КонецПроцедуры

// установить реквизит ТипФасовки в ВСД_Продукция_Элемент
Процедура УстановитьТермическиеУсловия()
	//СпрФормаУпаковки = СоздатьОбъект("Справочник.ВСД_ФормыУпаковки");
	//Если СпрФормаУпаковки.Выбрать("Форма упаковки для группы",)=0 Тогда
	//	Возврат;
	//КонецЕсли;
	ВыбЗн="";
	Если спТермическиеУсловияПеревозки.ВыбратьЗначение( ВыбЗн, "Выберите термические условия перевозки...",,,1)<>1 Тогда
		Возврат;
    КонецЕсли;

	Объект = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");

	тз1 = СоздатьОбъект("ТаблицаЗначений");
	тз.Выгрузить(тз1);
	тз1.Свернуть("ВСД_Продукция_Элемент,Пометка","");

	тз1.ВыбратьСтроки();
	Пока тз1.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз1.ВСД_Продукция_Элемент)=1 Тогда
			продолжить;
		КонецЕсли;
		Если тз1.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Сообщить(тз1.ВСД_Продукция_Элемент);
		Объект.НайтиЭлемент(тз1.ВСД_Продукция_Элемент);
		Объект.ТермическиеУсловияПеревозки = спТермическиеУсловияПеревозки.НайтиЗначение( ВыбЗн );
		Объект.Записать();
	КонецЦикла;

КонецПроцедуры

Процедура ВыделитьВсе()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("ВыделитьВсе", "Выделить все строки");
	спМеню.ДобавитьЗначение("ВыделитьСоздать", "Выделить пустые (не созданные) ВСД_Продукция_Элемент");
	спМеню.ДобавитьЗначение("ВыделитьНеОтправленные", "Выделить НЕ ОТПРАВЛЕННЫЕ ВСД_Продукция_Элемент");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "ВыделитьВсе" Тогда
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			//Если СписокДокументов.сЦвет = "" Тогда
				тз.Пометка=2;
			//КонецЕсли;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьСоздать" Тогда
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			Если (ПустоеЗначение(тз.ВСД_Продукция_Элемент) = 1) Тогда
				тз.Пометка=2;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьНеОтправленные" Тогда
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			Если ( ПустоеЗначение( тз.GUID) = 1 ) и (ПустоеЗначение(тз.ВСД_Продукция_Элемент) = 0) Тогда
				//Если ( СокрЛП( тз.ВСД.Статус) <> "COMPLETED" ) Тогда
					тз.Пометка=2;
				//КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ОтменитьВсе()

	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		тз.Пометка=1;
	КонецЦикла;

КонецПроцедуры

Процедура Отправить_Элементы_в_ГИС()

	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если тз.Пометка=2 Тогда
			Если ПустоеЗначение( тз.ВСД_Продукция_Элемент.GUID )=1 Тогда
				Отправить_в_ГИС( тз.ВСД_Продукция_Элемент, "CREATE" );
			Иначе
				Отправить_в_ГИС( тз.ВСД_Продукция_Элемент, "UPDATE" );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьТЗ();
КонецПроцедуры

ВыбФирма = "";

спОбязательныеПоля = СоздатьОбъект("СписокЗначений");
спОбязательныеПоля.ДобавитьЗначение("Продукция");
спОбязательныеПоля.ДобавитьЗначение("ВидПродукции");
спОбязательныеПоля.ДобавитьЗначение("ЕдиницаИзмерения");
спОбязательныеПоля.ДобавитьЗначение("СрокГодности");
спОбязательныеПоля.ДобавитьЗначение("ТермическиеУсловияПеревозки");
спОбязательныеПоля.ДобавитьЗначение("КоэффициентПересчета");

тз.НоваяКолонка("Пометка",,,,"V",3);
тз.НоваяКолонка("Номенклатура",,,,);
тз.НоваяКолонка("ВСД_Продукция_Элемент","Справочник.ВСД_Продукция_Элемент",,,);
тз.НоваяКолонка("Продукция");
тз.НоваяКолонка("ВидПродукции");
тз.НоваяКолонка("GUID","Строка",36);
тз.НоваяКолонка("КоэффициентПересчета","Число",15,3,"Коэф.пересчета",10);
тз.НоваяКолонка("ЕдиницаИзмерения",,,,"Ед.изм.",10);
тз.НоваяКолонка("СрокГодности","Число",4);
тз.НоваяКолонка("ТермическиеУсловияПеревозки");

тз.ВыводитьПиктограммы("Пометка");

спТермическиеУсловияПеревозки.ДобавитьЗначение("Замороженный");
спТермическиеУсловияПеревозки.ДобавитьЗначение("Охлажденный");
спТермическиеУсловияПеревозки.ДобавитьЗначение("Охлаждаемый");
спТермическиеУсловияПеревозки.ДобавитьЗначение("Вентилируемый");
