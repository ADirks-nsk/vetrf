// Автор: Синявский Филипп phsin@kb99.pro
// Все права принадлежат ИП Синявский Ф.А.

//Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем ВыбСтрока;
Перем СписокПартий;

Перем оПривязки; //:Меркурий.Привязки
Перем тпДокументов, СписокДокументов;

Перем тпНеобходимыеПартии, тзНеобходимыеПартии;
Перем тпПартииПроизводство, тзПартииПроизводство;

Перем ВыбФирма Экспорт;

//======================================================================
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;		
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//=========================== СЛУЖЕБНЫЕ ФУНКЦИИ ========================

//======================================================================
Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Документов: "+СписокДокументов.КоличествоСтрок()+", количество: "+Окр(СписокДокументов.Итог("Колво"))+" ");
	
	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 1 Тогда 
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;	      
	ВыбКолво = Окр(ВыбКолво);

	Форма.ИнфоВыбор.Заголовок("Выбрано "+ВыбДок+" документов, количество = "+ВыбКолво+" ");
	
КонецПроцедуры

//======================================================================
Процедура ЗаголовокНадпись()
	
	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

//======================================================================
Процедура Клик_партии()
	текСтр = тзНеобходимыеПартии.ТекущаяСтрока();
	текКол = тзНеобходимыеПартии.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			тзНеобходимыеПартии.Пометка=1;
		Иначе
			тзНеобходимыеПартии.Пометка=2;
		КонецЕсли;
	ИначеЕсли (текКол="ВСД_Продукция_Элемент") и (тзНеобходимыеПартии.ВидимостьКолонки("ДокРеализации") > 0) Тогда
		Если (ПустоеЗначение(тзНеобходимыеПартии.ВСД_Продукция_Элемент) = 1) Тогда
			//Выбрать и привязать
			ВыбСтрока = текСтр;
			ТекНоменклатура = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Номенклатура");
			Продукция_элемент = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
			Если Продукция_элемент.Выбрать("Укажите элемент для установки соответствия","ФормаСписка") = 0 Тогда
				Возврат;			    
			КонецЕсли;
			ТВопроса = "Установить соответствие "+ТекНоменклатура+" -> "+ Продукция_элемент.ТекущийЭлемент();
			Если Вопрос(ТВопроса,"Да+Нет") = "Да" Тогда
				СпрНом = СоздатьОбъект("Справочник.Номенклатура");
				СпрНом.НайтиЭлемент(ТекНоменклатура.ТекущийЭлемент());
				СпрНом.ВСД_Продукция_Элемент = Продукция_элемент.ТекущийЭлемент();
				СпрНом.Записать();
				тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"ВСД_Продукция_Элемент", Продукция_элемент.ТекущийЭлемент());
				Предупреждение("Необходимо перезаполнить партии !!!");
			КонецЕсли;
			//ОткрытьПодбор("Справочник.ВСД_Продукция_Элемент", "ФормаСписка");
		Иначе
			Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);	
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

//======================================================================
Процедура Клик_ПартииПроизводства()
	текСтр = тзПартииПроизводство.ТекущаяСтрока();
	текКол = тзПартииПроизводство.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = тзПартииПроизводство.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 1 Тогда
			тзПартииПроизводство.Пометка=0;
		Иначе
			тзПартииПроизводство.Пометка=1;
		КонецЕсли;
	ИначеЕсли (текКол="Продукция_Элемент") Тогда
		Если (ПустоеЗначение( тзПартииПроизводство.Продукция_Элемент) = 1) Тогда
		//	//Выбрать и привязать
		//	ВыбСтрока = текСтр;
		//	ТекНоменклатура = тзПартииПроизводство.ПолучитьЗначение(ТекСтр,"Номенклатура");
		//	Продукция_элемент = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
		//	Если Продукция_элемент.Выбрать("Укажите элемент для установки соответствия","ФормаСписка") = 0 Тогда
		//		Возврат;
		//	КонецЕсли;
		//	ТВопроса = "Установить соответствие "+ТекНоменклатура+" -> "+ Продукция_элемент.ТекущийЭлемент();
		//	Если Вопрос(ТВопроса,"Да+Нет") = "Да" Тогда
		//		СпрНом = СоздатьОбъект("Справочник.Номенклатура");
		//		СпрНом.НайтиЭлемент(ТекНоменклатура.ТекущийЭлемент());
		//		СпрНом.ВСД_Продукция_Элемент = Продукция_элемент.ТекущийЭлемент();
		//		СпрНом.Записать();
		//		тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"ВСД_Продукция_Элемент", Продукция_элемент.ТекущийЭлемент());
		//		Предупреждение("Необходимо перезаполнить партии !!!");
		//	КонецЕсли;
		Иначе
			Эл = тзПартииПроизводство.ПолучитьЗначение(текСтр, текКол);
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзПартииПроизводство.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	КонецЕсли;

	ОбновитьИнф();
КонецПроцедуры

//======================================================================
Процедура ОтменитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=0;		
	КонецЦикла;	 
	Попытка
		ТПДокументов.ОбновитьСтроки();
	Исключение
	КонецПопытки;
	ОбновитьИнф();
КонецПроцедуры

//======================================================================
Процедура ВыделитьВсеДокументы()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("ВыделитьВсе", "Выделить все документы");
	спМеню.ДобавитьЗначение("ВыделитьСоздать", "Выделить пустые ВСД");
	спМеню.ДобавитьЗначение("ВыделитьНеОтправленные", "Выделить НЕ ОТПРАВЛЕННЫЕ");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "ВыделитьВсе" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.Пометка=1;		
		КонецЦикла;	      
	ИначеЕсли зн = "ВыделитьСоздать" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.Пометка=0;
			Если ( ПустоеЗначение(СписокДокументов.ВСД) = 1 ) Тогда 
				Если (ПустоеЗначение(СписокДокументов.Площадка)=0) Тогда 
					СписокДокументов.Пометка=1;		
				КонецЕсли;
			КонецЕсли;
			
			Если СписокДокументов.сЦвет = "" Тогда 
				СписокДокументов.Пометка=1;		
			КонецЕсли;
		КонецЦикла;	      
	ИначеЕсли зн = "ВыделитьНеОтправленные" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.Пометка=0;
			Если ( ПустоеЗначение(СписокДокументов.ВСД) = 0 ) Тогда 
				Если ( СокрЛП(СписокДокументов.ВСД.Статус) <> "COMPLETED" ) Тогда 
					СписокДокументов.Пометка=1;		
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	      
	КонецЕсли;
		
	тзНеобходимыеПартии.УдалитьСтроки();

	Попытка
		ТПДокументов.ОбновитьСтроки();
	Исключение
	КонецПопытки;	
	
	ОбновитьИнф();	
	
КонецПроцедуры

//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕННТОВ =================
//{
//======================================================================
Процедура ТПДокументовПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, СписокДокументов);
	СписокДокументов.Пометка = ?(СписокДокументов.Пометка = 1,0,1);
	ТабличноеПоле.ОбновитьСтроки();
	ОбновитьИнф();

	тзНеобходимыеПартии.УдалитьСтроки();
	СписокПартий.УдалитьСтроки();
КонецПроцедуры

//======================================================================
Процедура ТПДокументовПриАктивизацииСтроки(ТабличноеПоле)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, СписокДокументов);
КонецПроцедуры

Процедура ТПДокументовВыбор()
	ГМ.ПриАктивизацииСтрокиТП(ТПДокументов, СписокДокументов);
	ГМ.ПриАктивизацииКолонкиТП(ТПДокументов, СписокДокументов);
	
	текСтр=СписокДокументов.ТекущаяСтрока();
	Если текСтр=0 Тогда Возврат; КонецЕсли;
	текКол = СписокДокументов.ТекущаяКолонка();
	
	Если текКол="Площадка" Тогда 
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;			
				
		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ТПДокументовПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
		
		Если (ПустоеЗначение(ДанныеСтроки.ВСД)=0) Тогда
			Если СокрЛП(ДанныеСтроки.ВСД.Статус)="COMPLETED" Тогда
				ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ДанныеСтроки.ХозСубъект.GUID)=1 Тогда 			
			ОформлениеСтроки.ЦветФона = 255;	// Красный
//			ОформлениеСтроки.ЦветФона = 8421631;	// Красный
		ИначеЕсли (ПустоеЗначение(ДанныеСтроки.Площадка)=0) Тогда
			Если (ПустоеЗначение(ДанныеСтроки.Площадка.GUID)=0)  Тогда 
				//ДанныеСтроки.сЦвет = "";							
			КонецЕсли;
		Иначе			
			ОформлениеСтроки.ЦветФона = 8454143;	// Желтый
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕНТОВ =================

Процедура тпНеобходимыеПартииПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		//ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
		
		Если (ДанныеСтроки.КолвоНаСкладе > 0 ) и ( ПустоеЗначение(ДанныеСтроки.Партия)=0 ) Тогда 
			ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
		Иначе
 				ОформлениеСтроки.ЦветФона = 255;	// Красный
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура тпНеобходимыеПартииВыбор()
	ГМ.ПриАктивизацииСтрокиТП(тпНеобходимыеПартии, тзНеобходимыеПартии);
	ГМ.ПриАктивизацииКолонкиТП(тпНеобходимыеПартии, тзНеобходимыеПартии);
		
	Клик_партии();
		
КонецПроцедуры
//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕНТОВ =================

Процедура тпПартииПроизводствоПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		//ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
 			
 		Если (ДанныеСтроки.КолвоНаСкладе = 0 ) Тогда
			ОформлениеСтроки.ЦветФона = 255;	// Красный
		ИначеЕсли (ДанныеСтроки.КолвоНаСкладе >= ДанныеСтроки.Количество) Тогда
			ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
		Иначе
			ОформлениеСтроки.ЦветФона = 8454143;	// Желтый
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура тпПартииПроизводствоВыбор()
	ГМ.ПриАктивизацииСтрокиТП(тпПартииПроизводство, тзПартииПроизводство);
	ГМ.ПриАктивизацииКолонкиТП(тпПартииПроизводство, тзПартииПроизводство);	
	
	Клик_ПартииПроизводства();
	
КонецПроцедуры
//}

//=========================== ПЕЧАТНЫЕ ФОРМЫ =============================

Процедура Реестр()
	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка|Осн");
	Если ДобавлятьУпаковки = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ВесМест");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Хвост");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		
		Таб.ВывестиСекцию("Строка|Осн");
		Если ДобавлятьУпаковки = 1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ВесМест");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Хвост");
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");	
КонецПроцедуры
              
Процедура ПечатьСокрВСД()
	
	тз = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если (тз.Пометка<>1) или (Пустоезначение(тз.ВСД)=1) Тогда
			Продолжить;	
		КонецЕсли;
		ГМ.ПечатьСокрВСД(тз.ВСД.ТекущийДокумент());
	КонецЦикла;
КонецПроцедуры

Процедура МенюПечать()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("Реестр", "Реестр");
	спМеню.ДобавитьЗначение("СокрВСД", "Сокращенный ВСД");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Реестр" Тогда 
		Реестр();
	ИначеЕсли зн = "СокрВСД" Тогда 
		ПечатьСокрВСД();
	КонецЕсли;
		
КонецПроцедуры

//=========================== ФУНКЦИИ КНОПОК =============================

Процедура МенюПлощадки()
		
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	СписокДействийВСД.ДобавитьЗначение("ЗагрузитьПоХС","Загрузить площадки по ХС");
	СписокДействийВСД.ДобавитьЗначение("НайтиПоИмени","Найти площадки по названию");
	СписокДействийВСД.ДобавитьЗначение("СоздатьХС","Создать ХозСубъект");
	СписокДействийВСД.ДобавитьЗначение("СоздатьПлощадку","Создать Площадку");
		
	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда	
		
		Если Зн ="ЗагрузитьПоХС"  Тогда 
			ГМ.ЗагрузитьПлощадки(СписокДокументов.ХозСубъект);		
			ТПДокументов.ОбновитьСтроки();
		ИначеЕсли Зн = "НайтиПоИмени" Тогда 
			Попытка				
				ГМ2.НайтиПлощадкиПоНазванию( СписокДокументов.ХозСубъект, Регион, 1);		
			Исключение
				//если нет ГМ2 - вызываем ГМ1
				ГМ.НайтиПлощадкиПоНазванию( СписокДокументов.ХозСубъект, Регион, 1);		
			КонецПопытки;
			ТПДокументов.ОбновитьСтроки();
		ИначеЕсли Зн = "СоздатьХС" Тогда 
			ГМ.СоздатьХС( СписокДокументов );		
			ТПДокументов.ОбновитьСтроки();
		ИначеЕсли Зн = "СоздатьПлощадку" Тогда 
			ГМ.СоздатьПлощадку( СписокДокументов );		
			ТПДокументов.ОбновитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"Реализации");
КонецПроцедуры

//======================================================================
Процедура ЗаполнитьСписокДокументов()
		
	НазваниеВидаСправочникаФирмы	= гм.ПолучитьКонстанту("НазваниеВидаСправочникаФирмы");
	ВидДокументаПеремещениеТМЦ 		= гм.ПолучитьКонстанту("НазваниеВидаДокументаПеремещениеТМЦ"); 
	ПропускатьПустыеСвойства 		= гм.ПолучитьКонстанту("ПропускатьПустыеСвойства"); 
	НазваниеРеквизитаНоменклатура	= гм.ПолучитьКонстанту("НазваниеРеквизитаНоменклатура");
	НазваниеРеквизитаКоличество 	= гм.ПолучитьКонстанту("НазваниеРеквизитаКоличество");

	ФирмаИмяРеквизита = "";
	ФирмаОбщийРеквизит = ГМ.ПолучитьИмяРеквизитаФирма(ВидДокументаПеремещениеТМЦ, ФирмаИмяРеквизита);

	Если ПустаяСтрока(НазваниеВидаСправочникаФирмы) = 1 Тогда
		Сообщить("В Параметрах не указано НазваниеВидаСправочникаФирмы!","!"); //Возврат "";
	КонецЕсли;	
	Если ВидДокументаПеремещениеТМЦ = "" Тогда
		Предупреждение("Не заполнена константа ВидДокументаПеремещениеТМЦ"); Возврат;
	КонецЕсли;

	ВидСправочникаСклады = Метаданные.Справочник("ВСД_Площадка").Реквизит("Склад").Вид;
	Если ПустаяСтрока(ВидСправочникаСклады) = 1 Тогда
		ВидСтравочникаСклады = Метаданные.Справочник("ВСД_СкладыПлощадок").Реквизит("Склад").Вид;
	КонецЕсли;      
	Если ПустаяСтрока(ВидСправочникаСклады) = 1 Тогда
		Предупреждение("Не известен ВидСправочникаСклады"); Возврат;
	КонецЕсли;      

	ФильтрПоСкладу = 0;
	Если флФильтрПоСкладу = 1 Тогда
		Если ПустаяСтрока(ВидСтравочникаСклады) = 0 Тогда
			СписокСкладов = СоздатьОбъект("СписокЗначений");
			Если ПустоеЗначение(Отправитель_Площадка.Склад) = 0 Тогда
				СписокСкладов.ДобавитьЗначение(Отправитель_Площадка.Склад);
			КонецЕсли;
			Спр = СоздатьОбъект("Справочник.ВСД_СкладыПлощадок");
			Спр.ИспользоватьВладельца(Отправитель_Площадка);         
			Спр.ВыбратьЭлементы();
			Пока Спр.ПолучитьЭлемент() = 1 Цикл
				Если ПустоеЗначение(Спр.Склад) = 0 Тогда
					СписокСкладов.ДобавитьЗначение(Спр.Склад);
				КонецЕсли;
			КонецЦикла;
			
			Если СписокСкладов.РазмерСписка() > 0 Тогда
				ФильтрПоСкладу = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ГМ.ЭтоSQL=1 Тогда 	
			
		ТекстЗапроса = "
		|SELECT
		|    Жур.IDDoc as [Док $Документ],
		|    Жур.IDDocDef as Док_вид,
		|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_транзакция],
		|	Жур.DocNo as [НомерДок],
		|	$ДокР.Склад as [Склад $Справочник.Склады], 
		|	$ДокР.СкладПолучатель as [СкладПолучатель $Справочник.Склады],
		|	SUM($ДокСтроки."+ НазваниеРеквизитаКоличество +") [Количество]
		|FROM
		|    _1SJourn Жур
		|INNER JOIN 
		|	$ДокументСтроки."+ВидДокументаПеремещениеТМЦ+" as ДокСтроки 
		|		ON Жур.IDDoc = ДокСтроки.IDDoc
		|		AND $ДокСтроки."+НазваниеРеквизитаКоличество+" > 0
		|LEFT JOIN 
		|	$Документ."+ВидДокументаПеремещениеТМЦ+" as ДокР 
		|		ON Жур.IDDoc = ДокР.IDDoc
		|Left join 
		|	$Документ.ВСД_транзакция as ДокВСД
		|		ON SUBSTRING($ДокВСД.ДокОснование, 5, 9) = Жур.IDDoc
		|";
		Если ПропускатьПустыеСвойства =1 Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|	inner join $Справочник.Номенклатура as Ном 
			|		on $ДокСтроки.Номенклатура= Ном.ID
			|		and $Ном.ВСД_Продукция_Элемент <> $ПустойИД
			|";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|WHERE
		|    Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ 
		|    AND Жур.IDDocDef = $ВидДокумента."+ВидДокументаПеремещениеТМЦ+"
		//|	and (
		//|		$ДокВСД.Статус <> 'Аннулирова' OR
		//|		$ДокВСД.Статус Is Null 
		//|		)
		|	%УсловиеПоФирме%
		|	%УсловиеПоСкладу%
		|
		|GROUP BY
		|	Жур.IDDoc,
		|	Жур.IDDocDef,
		|	ДокВСД.IDDoc,
		|	Жур.DocNo,
		|	$ДокР.Склад,
		|	$ДокР.СкладПолучатель
		|order by Жур.DocNo
		|";
		
		//условие по фирме
		УсловиеПоФирме="";
		Если ПустоеЗначение(ВыбФирма) = 0 Тогда		
			Если ФирмаОбщийРеквизит > 0 Тогда
				Если ФирмаОбщийРеквизит = 1 Тогда
					УсловиеПоФирме = " and Жур.$ОбщийРеквизит."+ФирмаИмяРеквизита+" = :ВыбФирма";
				Иначе
					УсловиеПоФирме = " and $ДокР."+ФирмаИмяРеквизита+" = :ВыбФирма";
				КонецЕсли;
				ГМ.RS.УстановитьТекстовыйПараметр("ВыбФирма", ВыбФирма);
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);
		
		//условие по складу
		УсловиеПоСкладу = "";
		Если ФильтрПоСкладу = 1 Тогда
			Если СписокСкладов.РазмерСписка() = 1 Тогда
				УсловиеПоСкладу = " and $ДокР.Склад = :ВыбСклад";
				ГМ.RS.УстановитьТекстовыйПараметр("ВыбСклад", СписокСкладов.ПолучитьЗначение(1));
			Иначе
				УсловиеПоСкладу = " and $ДокР.Склад IN (SELECT Val FROM #Склады) ";
				ГМ.RS.УложитьСписокОбъектов(СписокСкладов, "#Склады",ВидСтравочникаСклады);
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСкладу%", УсловиеПоСкладу);
		
		ГМ.RS.УстановитьТекстовыйПараметр("НачДата", НачДата);
		ГМ.RS.УстановитьТекстовыйПараметр("КонДата", КонДата);
		     
		
		ГМ.RS.Отладка(0);
		ТЗ = ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса);
		//ТЗ.ВыбратьСтроку();
	  	
	Иначе	
			
		Запрос = ГМ.базаДанных.НовыйЗапрос();
	
		ТекстЗапроса = "
		|SELECT
		|    Жур.IDDoc as [Док :Документ],
		|    Жур.IDDocDef as Док_вид,
		|	Жур.DocNo as [НомерДок],
		|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_транзакция],
		|	ДокР.Склад as [Склад :Справочник."+ВидСправочникаСклады+"],
		|	ДокР.СкладПолучатель as [СкладПолучатель :Справочник."+ВидСправочникаСклады+"],		
		|	SUM(ДокСтроки."+ НазваниеРеквизитаКоличество +") as [Количество]
		|FROM
		|    Журнал Жур
		|INNER JOIN 
		|	[ДокументСтроки."+ВидДокументаПеремещениеТМЦ+"] as ДокСтроки 
		|		ON Жур.IDDoc = ДокСтроки.IDDoc
		|		AND ДокСтроки."+НазваниеРеквизитаКоличество+" > 0";
		Если ПропускатьПустыеСвойства = 1 Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|inner join [Справочник.Номенклатура] as Ном 
			|	on ДокСтроки."+НазваниеРеквизитаНоменклатура+" = Ном.ID
			|	and Ном.ВСД_Продукция_Элемент <> '     0   '
			|";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|INNER JOIN 
		|	[Документ."+ВидДокументаПеремещениеТМЦ+"] as ДокР 
		|		ON Жур.IDDoc = ДокР.IDDoc
		|Left join 
		|	[Документ.ВСД_транзакция] as ДокВСД
		|		ON SUBSTR(ДокВСД.ДокОснование, 5, 9) = Жур.IDDoc
		|WHERE
		|    Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~ 
		|   AND Жур.IDDocDef = :ВидДокумента."+ВидДокументаПеремещениеТМЦ+"
		//| 	AND COALESCE(ДокВСД.Статус,'*') <> 'Аннулирова'
		//|	%УсловиеПоФирме%
		//|	%УсловиеПоСкладу%
		|
		|GROUP BY
		|	Жур.IDDoc,
		|	Жур.IDDocDef,
		|	Жур.DocNo,
		|	ДокР.Склад,
		|	ДокР.СкладПолучатель
		|order by Жур.DocNo
		|";
		
		//условие по фирме
		УсловиеПоФирме="";
		Если ПустоеЗначение(ВыбФирма) = 0 Тогда		
			Если ФирмаОбщийРеквизит > 0 Тогда
				Если ФирмаОбщийРеквизит = 1 Тогда
					УсловиеПоФирме = " and Жур."+ФирмаИмяРеквизита+" = :ВыбФирма";
				ИначеЕсли ФирмаОбщийРеквизит = 2 Тогда
					УсловиеПоФирме = " and ДокР."+ФирмаИмяРеквизита+" = :ВыбФирма";
				КонецЕсли;
				Запрос.Подставлять("ВыбФирма", ВыбФирма);
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);

		//условие по складу
		УсловиеПоСкладу = "";
		Если ФильтрПоСкладу = 1 Тогда
			Если СписокСкладов.РазмерСписка() = 1 Тогда
				УсловиеПоСкладу = " and ДокР.Склад = :ВыбСклад";
				Запрос.Подставлять("ВыбСклад", СписокСкладов.ПолучитьЗначение(1));
			Иначе
				УсловиеПоСкладу = " and ДокР.Склад IN (SELECT Val FROM Склады) ";
				ГМ.базаДанных.УложитьОбъекты(СписокСкладов, "Склады",ВидСтравочникаСклады);
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСкладу%", УсловиеПоСкладу);

		Запрос.Подставлять("НачДата", НачДата);
		Запрос.Подставлять("КонДата", КонДата);
	
		ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		//ТЗ.ВыбратьСтроку();
	КонецЕсли;
		
	СписокДокументов.УдалитьСтроки();
	
	тзДок = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тзДок);
	
	тз.ВыбратьСтроки();
	Ном=0;
	ПредДок="";
	Пока тз.ПолучитьСтроку()=1 Цикл 
		тзДок.НоваяСтрока();
		тзДок.Пометка=1;
		тзДок.Контрагент = тз.Склад;
		тзДок.Грузополучатель = тз.СкладПолучатель;
		тзДок.Док = тз.Док;
		тзДок.Колво = тз.Количество;
		//тзДок.Вес = тз.Количество;
		Попытка			
			тзДок.КолвоМест = тз.КоличествоМест;
		Исключение			
		КонецПопытки;
				
		тзДок.ХозСубъект = Отправитель_ХозСубъект;
		тзДок.Площадка = ГМ.НайтиПлощадкуПоСкладу(тзДок.Грузополучатель);

		Попытка
			Если тз.ДокВСД.ПометкаУдаления()=0 Тогда 
				тзДок.ВСД = тз.ДокВСД;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
	КонецЦикла; 
	
	тзДок.Выгрузить(СписокДокументов);
	
	Попытка
		ТПДокументов.ОбновитьСтроки();
	Исключение
		//Сообщить(ОписаниеОшибки());
	КонецПопытки;
	      
	//РаскраситьСписокДокументов( тзДок, ТекСтрока );
	ОбновитьИнф();
КонецПроцедуры

процедура ВыбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		СписокДокументов.УдалитьСтроки();
		ЗаполнитьСписокДокументов();
	конецесли;
конецпроцедуры

//{ =========================== Создание документов =============================

Процедура СоздатьВСД_ПоТзРаспределения()
	Если тзНеобходимыеПартии.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица с распределенными партиями.","!");
		Возврат;
	КонецЕсли;

	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
	Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert")=1 Тогда
		Сообщить("ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert отключено.
		|Используйте модуль Меркурий_Интеграция.ert для переопределения функций","!");
		Возврат;
	КонецЕсли;
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>1 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		стр = 0;
		Если тзНеобходимыеПартии.НайтиЗначение(СписокДокументов.Док,стр,"ДокРеализации") = 0 тогда
			Сообщить("Для "+СписокДокументов.Док+" нет данных в тз Распределенных партий","i");
			Продолжить;
		КонецЕсли;

		тзНеобходимыеПартии.ПолучитьСтрокуПоНомеру(стр);

		Состояние("Создание ВСД ");
		ДокВСД = СоздатьОбъект("Документ.ВСД_транзакция");
		ДокВСД.Новый();
		Попытка ДокВСД.Фирма = ВыбФирма; Исключение КонецПопытки;
		ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
		ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
		ДокВСД.Получатель_ХозСубъект = СписокДокументов.ХозСубъект;;
		ДокВСД.Получатель_Площадка = СписокДокументов.Площадка;
		ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
		
		// отфильтруем партии в тзНеобходимыеПартии по документу СписокДокументов.Док 
		тзНоваяТЧ = СоздатьОбъект("ТаблицаЗначений");
		тзИндТаблица = СоздатьОбъект("ИндексированнаяТаблица");
		тзИндТаблица.Загрузить(тзНеобходимыеПартии);
		тзИндТаблица.ДобавитьИндекс("ДокРеализации","ДокРеализации");
			
		тзИндТаблица.УстановитьФильтр( СписокДокументов.Док, СписокДокументов.Док, "ДокРеализации");
		тзИндТаблица.Выгрузить( тзНоваяТЧ, "ДокРеализации");
	
		// остальные реквизиты заполним стандартно 
		ГМ.ЗаполнитьВСД_Транзакция( ДокВСД, СписокДокументов.Док, тзНоваяТЧ );
		
		Если ДокВСД.КоличествоСтрок() = 0 Тогда
		    Продолжить;
		КонецЕсли;

		ДокВСД.Записать();
		ДокументСсылка = ДокВСД.ТекущийДокумент();

		СписокДокументов.ВСД = ДокументСсылка;

		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");
	КонецЦикла;
КонецПроцедуры

Процедура Создать_Инвентаризацию()

	Состояние("Создание ВСД_Инвентаризация ");
	ДокВСД = СоздатьОбъект("Документ.ВСД2_Инвентаризация");
	//ДокВСД = СоздатьОбъект("Документ.ВСД_Инвентаризация");
	ДокВСД.Новый();
	ДокВСД.ДатаДок = НачДата;
	ДокВСД.Фирма=ВыбФирма;
	ДокВСД.Владелец_ХозСубъект = Отправитель_ХозСубъект;
	ДокВСД.Владелец_площадка = Отправитель_Площадка;
	ДокВСД.ПричинаРасхождения="Отсутсвие партий";
	ДокВСД.ОписаниеНесоответствия="Отсутсвие партий";
	Попытка	ДокВСД.Автор = ГМ.ПолучитьАвтора();;	Исключение 	КонецПопытки;
	//Попытка	ДокВСД.Филиал = ДокВСД.Автор .Филиал;	Исключение	КонецПопытки;
	Попытка ДокВСД.Фирма = ВыбФирма; Исключение КонецПопытки;

	ВремтзПартии = СоздатьОбъект("ТаблицаЗначений");
	тзПартииПроизводство.Выгрузить(ВремтзПартии);
	ВремтзПартии.ВыбратьСтроки();
	Пока ВремтзПартии.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремтзПартии.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремтзПартии.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремтзПартии.КолвоНаСкладе >= ВремтзПартии.Количество Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремтзПартии.Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;


		разница= ВремтзПартии.Количество - ВремтзПартии.КолвоНаСкладе;
		ДокВСД.НоваяСтрока();

		ДокВСД.Продукция_Элемент 	= ВремтзПартии.Продукция_Элемент;
		ДокВСД.Количество 			= разница;//тзПартии.Количество;
		//Попытка ДокВСД.КоличествоМест 		= тзПартии.КолвоМестСписания;Исключение КонецПопытки;

		ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
		ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
	    ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
		ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
		ДокВСД.ДатаИзготовления1 = ГМ.Преобразовать_Дата_в_Строка(НачДата);
		Если КонДата>НачДата Тогда
			ДокВСД.ДатаИзготовления2 = ГМ.Преобразовать_Дата_в_Строка(КонДата);
		КонецЕсли;
		ДокВСД.ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка(НачДата+ДокВСД.Продукция_Элемент.СрокГодности);
		ДокВСД.Производитель_Страна	=гм.СписокКонстант.Получить("Страна");
		ДокВСД.Производитель_площадка=Отправитель_Площадка;
		ДокВСД.Записать();
		ДокументСсылка = ДокВСД.ТекущийДокумент();

	КонецЦикла;
	Сообщить(" создан документ "+ДокументСсылка,"i");
	ОткрытьФорму( ДокументСсылка);
КонецПроцедуры

Процедура Создать_ВСД_Производство()

	ВремСписокПартий = СоздатьОбъект("ТаблицаЗначений");
	тзПартииПроизводство.Выгрузить(ВремСписокПартий);
	ВремСписокПартий.ВыбратьСтроки();

	Пока ВремСписокПартий.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремСписокПартий.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремСписокПартий.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремСписокПартий.Колво >= ВремСписокПартий.КолвоСписания Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремСписокПартий.ВСД_Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;

		Состояние("Создание ВСД_Производство ");
		
		Если ФС.СуществуетФайл(ГМ.КаталогМодуля+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			//
			
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,				"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,					"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( тзНеобходимыеПартии.КолвоСписания,			"Колво");    
			Попытка СписокПараметров.ДобавитьЗначение( тзНеобходимыеПартии.КолвоМестСписания,		"КолвоМест"); Исключение КонецПопытки;
			СписокПараметров.ДобавитьЗначение( тзНеобходимыеПартии.ВСД_Продукция_Элемент,	"Продукция_Элемент");    
			//
			СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,		"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,	"ВСД_ОсобыеОтметки");    

			СписокПараметров.ДобавитьЗначение( НачДата,				"НачДата");
			СписокПараметров.ДобавитьЗначение( КонДата,				"КонДата");    
			
			ОткрытьФормуМодально("Отчет",СписокПараметров,ГМ.КаталогМодуля+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}
		
		Иначе
			
			ДокВСД = СоздатьОбъект("Документ.ВСД_Производство");
			ДокВСД.Новый();
			ДокВСД.ДатаДок = НачДата;			
			
			ДокВСД.Производитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Производитель_площадка = Отправитель_Площадка;
			
			Автор = ГМ.ПолучитьАвтора();
			Попытка				
				ДокВСД.Автор = Автор;
			Исключение
			КонецПопытки;
			Попытка				
				ДокВСД.Филиал = Автор.Филиал;
			Исключение
			КонецПопытки;
			
			ДокВСД.Экспертиза 		= ВСД_Экспертиза;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
							
			ДокВСД.НоваяСтрока();
			
			ДокВСД.Продукция_Элемент 	= ВремСписокПартий.ВСД_Продукция_Элемент;
			ДокВСД.Количество 			= ВремСписокПартий.КолвоСписания;
			Попытка ДокВСД.КоличествоМест 		= ВремСписокПартий.КолвоМестСписания;Исключение КонецПопытки;					
			ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			ДокВСД.ФормаУпаковки 		= ДокВСД.Продукция_Элемент.ФормаУпаковки;
			ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
			ДокВСД.ВидДвижения 			= 1;
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
			
			ДокВСД.ЗавершитьОперацию = 1;
			ДокВСД.ДатаИзготовления1 = НачДата;
			Если КонДата>НачДата Тогда
				ДокВСД.ДатаИзготовления2 = КонДата;
			КонецЕсли;
			ДокВСД.ДатаСрокГодности1 = ДокВСД.ДатаИзготовления1+ДокВСД.Продукция_Элемент.СрокГодности;
				
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		ВремСписокПартий.ВСД_Производство = ДокументСсылка;
		
		Сообщить(" создан документ "+ВремСписокПартий.ВСД_Производство,"i");		
	КонецЦикла;
	ВремСписокПартий.Выгрузить(тзНеобходимыеПартии);
КонецПроцедуры

Процедура СоздатьПродукцию()
	//+
	//Если Метаданные.Справочник("Номенклатура").Реквизит("ПодконтроленМеркурию").Выбран() = 0 Тогда
	//	Сообщить("Отсутствует реквизит ПодконтроленМеркурию в справочнике Номенклатура. Выполнение невозможно");
	//	Возврат;
	//КонецЕсли;
	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");
		Возврат;
	КонецЕсли;
	//Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
	//	Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");
	//	Возврат;
	//КонецЕсли;
	//+
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Номенклатура");

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>1 Тогда
			Продолжить;
		КонецЕсли;

		//	тз = ГМ.СвернутьТч();
		до=СписокДокументов.Док;
		до.ВыбратьСтроки();
		Пока до.ПолучитьСтроку() = 1 Цикл

			//Если (до.Номенклатура.ПодконтроленМеркурию.Получить(ТекущаяДата()) = 1) И (ПустоеЗначение(до.Номенклатура.ВСД_Продукция_Элемент) = 1) Тогда
			Если (ПустоеЗначение(до.Номенклатура.ВСД_Продукция_Элемент) = 1) Тогда
				ТЗ.НоваяСтрока();
				ТЗ.Номенклатура = до.Номенклатура;
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;

	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
	Если ТЗ.КоличествоСтрок() > 0 Тогда
		ОбработкаСоздатьПродукция_Элемент = КаталогОбработки+"ВСД_СоздатьПродукция_Элемент.ert";
		Если ФС.СуществуетФайл(ОбработкаСоздатьПродукция_Элемент) = 0 Тогда
			Сигнал();
			Предупреждение("Не найдена обработка " + ОбработкаСоздатьПродукция_Элемент, 6 );
		Иначе
			Конт="";
			ОткрытьФормуМодально("Отчет",ТЗ,ОбработкаСоздатьПродукция_Элемент);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
//}

//======================================================================
Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);        
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);

	СписокДокументов.УдалитьСтроки();
	СписокПартий.УдалитьСтроки();
	ЗаполнитьСписокДокументов();	
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ


Процедура ЗаполнитьПартии()
	
	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Основной, Партии");

	//ВывестиТЗПартийВариант2();
	тз = ГМ.РаспределитьДокументыПоПартиям( СписокДокументов, ДетальнаяИнформация );
	тзНеобходимыеПартии.Загрузить(тз);
	тпНеобходимыеПартии.ОбновитьСтроки();
	
КонецПроцедуры

Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
КонецФункции


Процедура ОтправитьВСД()
	
	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 1 Тогда 		
			Если ПроверитьВСД(СписокДокументов.ВСД)=1 Тогда 
				СписокВСД.ДобавитьЗначение(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ.ОтправитьВсе_ВСД_Транзакция(СписокВСД, НачДата, КонДата);

	ТПДокументов.ОбновитьСтроки();
	ОбновитьИнф();	
	
КонецПроцедуры

Процедура АннулироватьВСД()
	Если Вопрос("Вы уверены, что хотите аннулировать выбранные ВСД?",4,30)=6 Тогда 
		Сообщить("Выполняется аннулирование ВСД");
		
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка = 1 Тогда 
				ГМ.Аннулировать_ВСД_транзакция(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЦикла;
		
		ЗаполнитьСписокДокументов();
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьПартии()
	ЗаписьЖурналаРегистрации("Меркурий получение партий ");
	
	ГМ.ПолучитьПартии(Отправитель_Площадка);
	
КонецПроцедуры

//=========================== ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ =============================

//======================================================================
Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Площадка");
		
		Если СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Площадка")= СтараяПлощадка Тогда 
			КонтФормы.Форма.Закрыть();    
			Возврат;
		КонецЕсли;
		
		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если ПустоеЗначение(СтараяПлощадка)=0 Тогда 
			Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Склад",СтараяПлощадка.Склад,0,0)=1 Тогда
				Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
					//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
					СпрПлощадка.Склад = "";
					СпрПлощадка.Записать();				
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		СпрПлощадка.НайтиЭлемент(Элемент);
		СпрПлощадка.Склад = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
		СпрПлощадка.Записать();
		КонтФормы.Форма.Закрыть();    
		
		СписокДокументов.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());

		ТПДокументов.ОбновитьСтроки();
		
	ИначеЕсли Элемент.Вид()="ВСД_Партия" Тогда
		КонтФормы.Форма.Закрыть();    
		
		тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		Попытка тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест); Исключение КонецПопытки;				
		
		//РаскраситьтзНеобходимыеПартии();				
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

Процедура Привязки_Инит()

	оПривязки.УстановитьФорму(Форма);
	оПривязки.Привязка("ТПДокументов", "H", "Форма", "W", "Форма");
	оПривязки.Привязка("тпНеобходимыеПартии", "H", "Форма", "W", "Форма");
	оПривязки.Привязка("тпПартииПроизводство", "H", "Форма", "W", "Форма");

КонецПроцедуры


//======================================================================
Процедура ПриОткрытии()

	ВыбФирма = "";
      
	ГМ._ПриОткрытии(Контекст);
	
	ЗаголовокНадпись();   
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Перемещения");
	Форма.Закладки.ДобавитьЗначение("Партии");
	Форма.Закладки.ДобавитьЗначение("Производство");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, СписокДокументов, Перемещения");
	
	Партия = "";
	
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
		
		Если ПустоеЗначение(Парам)=0 тогда 
			Для Д=1 По Парам.РазмерСписка() Цикл
				Док = Парам.ПолучитьЗначение(Д);
				СписокДокументов.НоваяСтрока();
				СписокДокументов.Пометка= 1;
				СписокДокументов.Док = Док;
				СписокДокументов.Колво = Док.ВесДокумента;
				СписокДокументов.Вес = Док.ВесДокумента;
				СписокДокументов.КолвоМест = Док.КоличествоМестДокумента;
				СписокДокументов.Контрагент = Док.Контрагент;
				СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(СписокДокументов.Контрагент);
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту(СписокДокументов.Грузополучатель);
			КонецЦикла;

			ТПДокументов.ОбновитьСтроки();
			
			ВыделитьВсеДокументы();	
		КонецЕсли;
	Иначе
		//стандартное заполнение документов
		ЗаполнитьСписокДокументов();
	КонецЕсли;   
	
	флФильтрПоСкладу = ВосстановитьЗначение("ФильтрПоСкладу");

	ГМ.СписокФирм.Выгрузить(СписокФирм);
	Если СписокФирм.РазмерСписка() = 0 Тогда
		Предупреждение("Нет сохраненных настроек, обмен невозможен!");
		Возврат; СтатусВозврата(0);
	Иначе
		Поз = СписокФирм.НайтиЗначение(ВыбФирма);
		Если Поз <> 0 Тогда
			СписокФирм.ТекущаяСтрока(Поз);
		КонецЕсли;
		ПриИзмененииФирмы();
	КонецЕсли;

	Привязки_Инит(); 
КонецПроцедуры

//======================================================================
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

//======================================================================
Процедура ПослеСозданияФормы()
	тпДокументов = ГМ.СоздатьТабличноеПоле(Контекст, "тпДокументов", СписокДокументов,,1);
	тпНеобходимыеПартии = ГМ.СоздатьТабличноеПоле(Контекст, "тпНеобходимыеПартии", тзНеобходимыеПартии,0,1);
	тпПартииПроизводство = ГМ.СоздатьТабличноеПоле(Контекст, "тпПартииПроизводство", тзПартииПроизводство,0,1);	
КонецПроцедуры

//******************************************************************************
 // предопределенная процедура
 //
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
 	ТекСтрока = СписокДокументов.ТекущаяСтрока();
 	
 	Если ЗначениеЗакладки="Перемещения" Тогда
		Форма.ИспользоватьСлой("Основной, СписокДокументов");
	ИначеЕсли ЗначениеЗакладки="Партии" Тогда
		Форма.ИспользоватьСлой("Основной, Партии");
	ИначеЕсли ЗначениеЗакладки="Производство" Тогда
		Форма.ИспользоватьСлой("Основной, Производство");
		тз = ГМ.ЗаполнитьПартииПроизводства( СписокДокументов );
		тзПартииПроизводство.Загрузить( тз );
		тпПартииПроизводство.ОбновитьСтроки();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;     
	
КонецПроцедуры 

Процедура ПриИзмененииПлощадки()
	//Обновить список документов 
	ГМ.СписокКонстант.Установить("Отправитель_Площадка",Отправитель_Площадка);	
	
	СписокДокументов.УдалитьСтроки();
	тзНеобходимыеПартии.УдалитьСтроки();		
	ЗаполнитьСписокДокументов();
КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("ФильтрПоСкладу", флФильтрПоСкладу);
КонецПроцедуры // ПриЗакрытии

Процедура Очистить_Партию()
	тзПартииПроизводство.ВСД_Производство="";
КонецПроцедуры


Функция ПроверитьВСД_Производство(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	//Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
	//	Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
	//	Возврат 0;
	//КонецЕсли;

	Возврат 1;
КонецФункции

Процедура Отправить_ВСД_Производство()
	СписокВСД = СоздатьОбъект("СписокЗначений");
	тзПартииПроизводство.ВыбратьСтроки();
	Пока тзПартииПроизводство.ПолучитьСтроку() = 1 Цикл
		Если ПроверитьВСД_Производство( тзПартииПроизводство.ВСД_Производство)=1 Тогда
			СписокВСД.ДобавитьЗначение( тзПартииПроизводство.ВСД_Производство);
		КонецЕсли;
	КонецЦикла;

	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД Производство");

	ГМ.ОтправитьВсе_ВСД_Производство(СписокВСД, НачДата, КонДата);
    //ВывестиТзПартийВариант2();

КонецПроцедуры

//{=============== МЕНЮ ===========================================

Процедура МенюВСД()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("СоздатьВСД", "Создать ВСД");
	спМеню.ДобавитьЗначение("ОтправитьВСД", "Отправить ВСД");
	спМеню.ДобавитьЗначение("АннулироватьВСД", "Аннулировать ВСД");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "СоздатьВСД" Тогда 
		//СоздатьВСД();
		СоздатьВСД_ПоТзРаспределения();		
	ИначеЕсли зн = "ОтправитьВСД" Тогда 
		ОтправитьВСД();
	ИначеЕсли зн = "АннулироватьВСД" Тогда 
		АннулироватьВСД();
	КонецЕсли;
		
КонецПроцедуры


Процедура МенюПроизводство()
	спМеню = СоздатьОбъект("СписокЗначений");
//	спМеню.ДобавитьЗначение("Очистить_Партию", "Очистить выбранную партию");
	спМеню.ДобавитьЗначение("Создать_ВСД_Производство", "Создать ВСД Производство");
	спМеню.ДобавитьЗначение("Отправить_ВСД_Производство", "Отправить ВСД Производство");
	спМеню.ДобавитьЗначение("Создать_Продукцию", "Создать Продукцию");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Очистить_Партию" Тогда
		Очистить_Партию();
	ИначеЕсли зн = "Создать_ВСД_Производство" Тогда
		Создать_ВСД_Производство();
	ИначеЕсли зн = "Отправить_ВСД_Производство" Тогда
		Отправить_ВСД_Производство();
	ИначеЕсли зн = "Создать_Продукцию" Тогда
		СоздатьПродукцию();
	КонецЕсли;

КонецПроцедуры
//}

//{========================= Список изменений =================
Функция ПоказатьИзмененияВерсии()
	
	ЗапуститьПриложение("https://redmine.kb99.pro/issues/1529#note-16");
	
КонецФункции


Процедура ПриНажатииЛевойКнопки(Сост, х, у, ФСО)
	
	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	Атр = ФормаРасш.ПолучитьАтрибутПоКоординатам(х,у);
	Если ТипЗначенияСтр(Атр) = "АтрибутФормы" Тогда
		Если Атр.Идентификатор = "Версия" Тогда
			ПоказатьИзмененияВерсии();
		КонецЕсли;  
	КонецЕсли;	
	
КонецПроцедуры

//}===========================================================

тпДокументов = "";
НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов = СоздатьОбъект("ТаблицаЗначений");
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("Грузополучатель",,,,,20,);
СписокДокументов.НоваяКолонка("Площадка",,,,,20,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Отправлен",,,,,7,);
СписокДокументов.НоваяКолонка("Статус",,,,,10,);
СписокДокументов.НоваяКолонка("Колво","Число",10,3,,10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,,10,);
СписокДокументов.НоваяКолонка("Док",,,,,30,);
СписокДокументов.НоваяКолонка("Склад",,,,,10,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,10,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,10,);
СписокДокументов.НоваяКолонка("НомерАвто",,,,,10,);//+

СписокПартий = СоздатьОбъект("Таблицазначений");
СписокПартий.НоваяКолонка("ДокРеализации",,,,,20,);
СписокПартий.НоваяКолонка("Номенклатура",,,,,20,);
СписокПартий.НоваяКолонка("ВСД_Продукция_Элемент",,,,,20,);
СписокПартий.НоваяКолонка("Партия",,,,,15,);
СписокПартий.НоваяКолонка("ПолеСортировки",,,,,10,);
СписокПартий.НоваяКолонка("Колво","Число",,,,5,);
СписокПартий.НоваяКолонка("КолвоСписания","Число",,,,5,);

ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

ПартияИнфо = "<<выберите партию>>";

тзПартииПроизводство = СоздатьОбъект("Таблицазначений");
тзПартииПроизводство.НоваяКолонка("сЦвет",1,,,,1,);
тзПартииПроизводство.ВидимостьКолонки("сЦвет",0);//Скроем раскраску
тзПартииПроизводство.НоваяКолонка("Продукция_Элемент",,,,,20,);
тзПартииПроизводство.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
тзПартииПроизводство.НоваяКолонка("Количество","Число",,,,10,);
тзПартииПроизводство.НоваяКолонка("ВСД_Производство",,,,,3,);

тзНеобходимыеПартии = СоздатьОбъект("ТаблицаЗначений");
тзНеобходимыеПартии.НоваяКолонка("ДокРеализации",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Номенклатура",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Продукция_Элемент",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Партия",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
тзНеобходимыеПартии.НоваяКолонка("Количество","Число",,,,10,);
тзНеобходимыеПартии.НоваяКолонка("ПолеСортировки",,,,,10,);

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(0);