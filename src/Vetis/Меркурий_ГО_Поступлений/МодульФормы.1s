Перем ГМ;
Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем КаталогОбработки;
Перем ВыбСтрока;
Перем Филиал;  
Перем флаг1, флаг2, парам, ти_п,тзпартий;

Перем ТекСтрока; //курсор в таблице СписокДокументов

//=========================== СЛУЖЕБНЫЕ ФУНКЦИИ =============================

Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Документов всего: "+СписокДокументов.КоличествоСтрок());
	
	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;	      
	ВыбКолво = Окр(ВыбКолво);

	Форма.ИнфоВыбор.Заголовок("Выбрано "+ВыбДок+" документов");
	
КонецПроцедуры

Процедура ЗаголовокНадпись()
	
	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

Процедура РаскраситьСписокДокументов(тзДок="")
	
	Если ПустоеЗначение(тзДок)=1 Тогда 
		тз = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тз);
	Иначе
		тз = тзДок;
	КонецЕсли;	
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл		

		Если (ПустоеЗначение(тз.ВСД)=0) Тогда
				тдок=тз.всд;
			Если СокрЛП(тдок.Статус)="COMPLETED" Тогда
				тз.сЦвет = цвЗеленый; 
			КонецЕсли;  
		ИначеЕсли сокрлп(тз.док.статус)="UTILIZED" Тогда
			тз.сЦвет = цвЗеленый; 
		ИначеЕсли ПустоеЗначение(тз.ХозСубъект.GUID)=1 Тогда 			
			тз.сЦвет = цвКрасный;
		ИначеЕсли ПустоеЗначение(тз.ХозСубъект)=1 Тогда 			
			тз.сЦвет = цвКрасный;
		ИначеЕсли (ПустоеЗначение(тз.Площадка)=0) Тогда
			Если (ПустоеЗначение(тз.Площадка.GUID)=0)  Тогда 
				тз.сЦвет = "";							
			КонецЕсли;
		Иначе			
			тз.сЦвет = цвЖелтый;							
		КонецЕсли;
		
	КонецЦикла;
	
	ТекСтрока = СписокДокументов.ТекущаяСтрока();
	
	СписокДокументов.Загрузить(тз);
	
	СписокДокументов.ВыводитьПиктограммы("Пометка");

	Если ПустоеЗначение(ТекСтрока)=1 Тогда 
		СписокДокументов.ТекущаяСтрока(1);
	Иначе
		СписокДокументов.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;
КонецПроцедуры

Процедура РаскраситьСписокПартий()
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл		

		Если (СписокПартий.Колво = 0 )  Тогда      //или (СписокПартий.КолвоМест=0)   //н2017
			СписокПартий.сЦвет = цвКрасный;	
		ИначеЕсли не((СписокПартий.Колво >= СписокПартий.КолвоСписания) и 
			(СписокПартий.КолвоМест >= СписокПартий.КолвоМестСписания)и(СписокПартий.КолвоСписания > 0 )) Тогда
			СписокПартий.сЦвет = цвЖелтый;							
		иначеесли пустоезначение(списокпартий.всд)=0 тогда
			если сокрлп(списокпартий.всд.статус)="COMPLETED" тогда
			СписокПартий.сЦвет = цвЗеленый;
			иначе
			СписокПартий.сЦвет = "";
			конецесли;
		Иначе			
			СписокПартий.сЦвет = "";							
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
        
      


Процедура Клик()
	текСтр = СписокДокументов.ТекущаяСтрока();
	текКол = СписокДокументов.ТекущаяКолонка(); 
	Если текКол="Пометка" Тогда		
		Пометка = СписокДокументов.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокДокументов.Пометка=1;
		Иначе
			СписокДокументов.Пометка=2;
		КонецЕсли;
	//иначеЕсли текКол="Контрагент" Тогда		
	//	контра = СписокДокументов.ПолучитьЗначение(ТекСтр,"Контрагент"); 
	//	если пустоезначение(контра)=1 тогда
	//		спр=создатьобъект("Справочник.Контрагенты");
	//		если спр.выбрать("Выберите поставщика","ФормаСписка")=1 тогда
	//			хс=ГМ.найтиХозСубъект(спр.текущийэлемент());
	//			если ХС<>СписокДокументов.ПолучитьЗначение(ТекСтр,"Хозсубъект") тогда
	//				сообщить("Этот контрагент не соответствует выбранной площадке!"); 
	//			иначе                   
	//				спрХС=создатьобъект("Справочник.ВСД_Хозсубъект");
	//				спрХС.найтиэлемент(хс);
	//				если пустоезначение(спрХС.контрагент)=1 тогда
	//					спрХС.контрагент=спр.текущийэлемент();
	//				конецесли;
	//				если пустоезначение(спрХС.инн)=1 тогда
	//					спрХС.инн=ГМ.получитьИНН(спр.текущийэлемент());
	//				конецесли;
	//				если пустоезначение(спрХС.наименование)=1 тогда
	//					спрХС.наименование=спр.текущийэлемент();
	//				конецесли;
	//				
	//				СписокДокументов.УстановитьЗначение(ТекСтр,"Контрагент",спр.текущийэлемент());
	//				
	//			конецесли;	
	//		конецесли;	
	//	иначе
	//		открытьформу(контра);
	//	конецесли;	
	//	РаскраситьСписокДокументов();
	//иначеЕсли текКол="Грузоотправитель" Тогда		
	//	тк = СписокДокументов.ПолучитьЗначение(ТекСтр,"Контрагент"); 
	//	контра = СписокДокументов.ПолучитьЗначение(ТекСтр,"Грузоотправитель"); 
	//	если пустоезначение(контра)=1 тогда 
	//		если пустоезначение(тк)=1 тогда
	//			сообщить("Сначала выберите поставщика!");
	//			возврат;
	//		конецесли;	
	//		спр=создатьобъект("Справочник.ПодразделенияКлиентов");
	//		спр.использоватьвладельца(тк);
	//		если спр.выбрать("Выберите подразделение","ФормаСписка")=1 тогда  
	//			выб=спр.текущийэлемент();
	//			спрП=создатьобъект("Справочник.ВСД_площадка");
	//			спрП.найтиэлемент(СписокДокументов.ПолучитьЗначение(ТекСтр,"площадка"));
	//			если пустоезначение(спрп.контрагент)=1 тогда
	//				спрП.контрагент=тк;  
	//			конецесли;
	//			если пустоезначение(спрп.подразделение)=1 тогда
	//				спрП.подразделение=выб;   
	//			конецесли;     
	//			если пустоезначение(спрп.GuidХозСубъекта)=1 тогда
	//				спрП.GuidХозСубъекта=СписокДокументов.ПолучитьЗначение(ТекСтр,"Хозсубъект").guid;
	//			конецесли;	
	//			спрП.записать();
	//			СписокДокументов.УстановитьЗначение(ТекСтр,"Грузоотправитель",выб);
	//		конецесли;	
	//	иначе
	//		открытьформу(контра);
	//	конецесли;	
	//	РаскраситьСписокДокументов();
	иначеЕсли текКол="Партия" Тогда		
		врем = СписокДокументов.ПолучитьЗначение(ТекСтр,"Партия");
		если ввестистроку(врем,"Наше наименование партии:",100)=1  тогда
			СписокДокументов.УстановитьЗначение(ТекСтр,"Партия",врем);
		конецесли;	
	иначеЕсли текКол="Причина" Тогда		
		врем = СписокДокументов.ПолучитьЗначение(ТекСтр,"Причина");
		если ввестистроку(врем,"Причина расхождений:",100)=1  тогда
			СписокДокументов.УстановитьЗначение(ТекСтр,"Причина",врем);
		конецесли;	
	иначеЕсли текКол="КолвоПриход" Тогда		
		врем = СписокДокументов.ПолучитьЗначение(ТекСтр,"КолвоПриход");
		если ввестичисло(врем,"Колво прихода по партии",10,3)=1  тогда  
			врем=мин(врем,СписокДокументов.ПолучитьЗначение(ТекСтр,"Колво"));
			СписокДокументов.УстановитьЗначение(ТекСтр,"КолвоПриход",врем);
		конецесли;	
		РаскраситьСписокДокументов();
	иначеЕсли текКол="КолвоМестПриход" Тогда		
		врем = СписокДокументов.ПолучитьЗначение(ТекСтр,"КолвоМестПриход");
		если ввестичисло(врем,"Колво прихода мест по партии",5,0)=1 тогда
			врем=мин(врем,СписокДокументов.ПолучитьЗначение(ТекСтр,"КолвоМест"));
			СписокДокументов.УстановитьЗначение(ТекСтр,"КолвоМестПриход",врем);
		конецесли;
		РаскраситьСписокДокументов();
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);
		если пустоезначение(эл)=0 тогда
		ОткрытьФорму(Эл); 
		конецесли;
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры

Процедура Клик2()
	текСтр = СписокПартий.ТекущаяСтрока();
	текКол = СписокПартий.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = СписокПартий.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокПартий.Пометка=1;
		Иначе
			СписокПартий.Пометка=2;
		КонецЕсли;
	иначеЕсли текКол="КолвоСписания" Тогда		
		врем = СписокПартий.ПолучитьЗначение(ТекСтр,"КолвоСписания");
		если ввестичисло(врем,"Колво списания партии",10,3)=1  тогда
			СписокПартий.УстановитьЗначение(ТекСтр,"КолвоСписания",врем);
		конецесли;	
		РаскраситьСписокПартий();				
	иначеЕсли текКол="КолвоМестСписания" Тогда		
		врем = СписокПартий.ПолучитьЗначение(ТекСтр,"КолвоМестСписания");
		если ввестичисло(врем,"Колво мест списания партии",5,0)=1 тогда
			СписокПартий.УстановитьЗначение(ТекСтр,"КолвоМестСписания",врем);
		конецесли;
		РаскраситьСписокПартий();				
		
	Иначе
		Эл = СписокПартий.ПолучитьЗначение(текСтр, текКол);
		если пустоезначение(эл)=0 тогда
		ОткрытьФорму(Эл); 
		конецесли;
	КонецЕсли;
	
КонецПроцедуры


Функция СвернутьТчПоСвойству(Док)
	тзДок = СоздатьОбъект("ТаблицаЗначений");
	Док.ВыгрузитьТабличнуюЧасть(тзДок);
	
	тзРез = СоздатьОбъект("ТаблицаЗначений");
	тзРез.НоваяКолонка("ВСД_Свойство");
	тзРез.НоваяКолонка("Количество");
	тзРез.НоваяКолонка("КоличествоМест");
	                    
	
	тзДок.ВыбратьСтроки();
	Пока тзДок.ПолучитьСтроку() = 1 Цикл
		если пустоезначение(тзДок.номенклатура)=1 тогда
			продолжить;
		конецесли;
		если тзДок.номенклатура.ветсправка=1 тогда
		
			Если ПропускатьПустыеСвойства=1 Тогда 
				Если ПустоеЗначение(тзДок.Номенклатура.ВСД_связь)=1 Тогда
					Сообщить("["+тзДок.Номенклатура+"] количество = "+тзДок.Количество+" не указано свойство продукции системы Меркурий - пропускаем! Всд отправлен не будет!","!");
					Продолжить;
				КонецЕсли;
			КонецЕсли;			
			
			тзРез.НоваяСтрока();
			тзРез.ВСД_Свойство = тзДок.Номенклатура.ВСД_Связь;
			тзРез.Количество = тзДок.Количество;
			тзРез.КоличествоМест = ?(тзДок.номенклатура.фасовка=0,0,цел(тзДок.количество/тзДок.номенклатура.фасовка));  //н2017
		конецесли;
	КонецЦикла;
		
	тзРез.Свернуть("ВСД_Продукция_Элемент","Количество, КоличествоМест");
	
	Возврат тзРез;
КонецФункции	

//выбираем партию, которая подходит под условия отбора: количество, свойство, площадка
Функция НайтиПервуюПартию(всд_свойство)
	Рез="";
	
	Спр = СоздатьОбъект("Справочник.ВСД_Партия");
	Если Спр.ВыбратьЭлементыПоРеквизиту("Получатель_Площадка",Отправитель_Площадка,1)=1 Тогда 
		Пока Спр.ПолучитьЭлемент()=1 Цикл
			Если Спр.продукция_элемент.всд_связь <> всд_свойство Тогда
				Продолжить;
			КонецЕсли;
			
			Если (Спр.ПометкаУдаления()=0) и (Спр.Количество>0) Тогда 
				возврат Спр.ТекущийЭлемент();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат рез;
КонецФункции


//=========================== ПЕЧАТНЫЕ ФОРМЫ =============================

Процедура Реестр()
	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		
		Таб.ВывестиСекцию("Строка");		
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");	
КонецПроцедуры

//=========================== ФУНКЦИИ КНОПОК =============================

Процедура ЗаполнитьСписокДокументов_Гашения()  

	Попытка
		
		СписокДокументов.УдалитьСтроки();
		
		тзДок = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тзДок);
		
		Ном=0;
		ПредДок="";
		тз=создатьобъект("Документ.ВСД");
		тз.выбратьдокументы(начдата,кондата);
		
		Пока тз.ПолучитьДокумент()=1 Цикл 
			//найдем если есть строка тздок   
			тз_док=тз.текущийдокумент();
            если тз_док.пометкаудаления()=1 тогда
				продолжить;
			конецесли;
			если сокрлп(тз_док.статус)<>"CONFIRMED" тогда
				продолжить;
			конецесли;	
			если тз_док.получатель_хозсубъект<>отправитель_хозсубъект тогда
				продолжить;
			конецесли;	
			если тз_док.фирма<>выбфирма тогда
				продолжить;
			конецесли;	
			тзДок.НоваяСтрока();
			тзДок.Пометка=1;           
			//н2017		
			тзДок.ХозСубъект = тз_док.отправитель_хозсубъект;
			тзДок.Площадка = тз_док.отправитель_площадка;
			
	//		тзДок.Контрагент = ?(пустоезначение(тз_док.отправитель_хозсубъект)=1,"",тз_док.отправитель_хозсубъект.контрагент);
	//		тзДок.грузоотправитель = ?(пустоезначение(тз_док.отправитель_площадка)=1,"",тз_док.отправитель_площадка.подразделение);

			тзДок.Док = тз_Док;
			тзДок.ДатаДок = тз_Док.ДатаДок;
			тзДок.продукция = тз_Док.продукция_элемент;
			тзДок.партия = лев(тз_Док.наименованиепродукции,100);
			
			тзДок.Колво = тз_док.Количество;
			тзДок.КолвоМест = тз_док.КоличествоМест;
			тзДок.КолвоПриход = тз_док.Количество;
			тзДок.КолвоМестПриход = тз_док.КоличествоМест;
			//вдруг есть всд
			докПодч=создатьобъект("Документ");
			докподч.выбратьподчиненныедокументы(,,тз_док);
			пока докподч.получитьдокумент()=1 цикл
				если докподч.пометкаудаления()=0 тогда
					если докподч.вид()="ВСД_входящий" тогда
						тзДок.всд=докподч.текущийдокумент();
					конецесли;
				конецесли;	
			конеццикла;	
			если пустоезначение(тздок.всд)=0 тогда
				тзДок.КолвоПриход = тздок.всд.Количествофакт;
				тзДок.КолвоМестПриход = тздок.всд.КоличествоМестфакт;
			конецесли;	
		КонецЦикла; 
		      
		РаскраситьСписокДокументов( тзДок );
		ОбновитьИнф();
	Исключение
		Сообщить("Не удалось выполнить запрос по документам. Проверьте параметры
		|"+ ОписаниеОшибки());
	КонецПопытки;		
КонецПроцедуры

процедура ВыбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока()));
		СписокДокументов.УдалитьСтроки(); 
		если форма.закладки.текущаястрока()=1 тогда
			ЗаполнитьСписокДокументов_Гашения(); 
		конецесли;	
	конецесли;
конецпроцедуры    


Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;  
	
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
КонецФункции

Процедура ОтправитьВСД()
	
	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда 
			если пустоезначение(СписокДокументов.ВСД)=1 тогда
				продолжить;
			конецесли;
				док_всд=списокдокументов.всд;
			Если ПроверитьВСД(док_всд)=1 Тогда 
				СписокВСД.ДобавитьЗначение(док_всд);
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка входящих ВСД ");

	ГМ.ОтправитьВсе_ВСД_входящие(СписокВСД);
	 
	РаскраситьСписокДокументов( );

КонецПроцедуры  
Процедура ОтправитьВСД2()
	
	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если СписокПартий.Пометка = 2 Тогда 
			если пустоезначение(СписокПартий.ВСД)=1 тогда
				продолжить;
			конецесли;
				док_всд=СписокПартий.всд;
			Если ПроверитьВСД(док_всд)=1 Тогда 
				СписокВСД.ДобавитьЗначение(док_всд);
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ.ОтправитьВсе_ВСД_Транзакция(СписокВСД, датаоф, датаоф);
	раскраситьсписокпартий();
КонецПроцедуры



Процедура СоздатьВСД2()
	//	если флаг2=0 тогда
	//	сообщить("Сначала загрузите актуальные партии из Меркурия!");
	//	возврат;
	//конецесли;	

	Если СписокПартий.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица партий.","!");
		Возврат;
	КонецЕсли;
	Если пустоезначение(фирмаполучатель)=1 Тогда
		Сообщить("Не заполнена Фирма-получатель.","!");
		Возврат;
	КонецЕсли;
	Если пустоезначение(датаоф)=1 Тогда
		Сообщить("Не заполнена дата перемещения.","!");
		Возврат;
	КонецЕсли;
	ХС = фирмаполучатель.меркурийхс;
	Площадка = фирмаполучатель.меркурийПлощадка;
	
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если СписокПартий.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокПартий.ВСД)=0) Тогда       
			//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
			//	Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
			//	Продолжить;
			//КонецЕсли;
			
			Если (ПустоеЗначение(СписокПартий.ВСД.Статус) = 1) Тогда 
			//	Сообщить("Для "+СписокПартий.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		

		Состояние("Заполнение списка партий ВСД ");
				ДокВСД = СоздатьОбъект("Документ.ВСД_транзакция");
				ДокВСД.Новый(); 
				ДокВСД.Фирма=выбфирма;
				ДокВСД.ДокОснование = "";			
				ДокВСД.ДатаДок = датаоф;			
				ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
				ДокВСД.Отправитель_Площадка = Отправитель_Площадка;			
				ДокВСД.Получатель_ХозСубъект = ХС;		
				ДокВСД.Получатель_Площадка = Площадка;					
							
				ДокВСД.ТтнСерия = ""; //ТТН.Серия;
				ДокВСД.ТтнНомер = "б/н";
				ДокВСД.ТтнДата = датаоф;
				ДокВСД.номерАвто ="-"; 
				
				
				Попытка
					ДокВСД.Автор = глПользователь;
				Исключение
				КонецПопытки;
	
				ДокВСД.ФормаВСД = 1;
				
				ДокВСД.Экспертиза 		= ВСД_Экспертиза;
				ДокВСД.Местность 		= ВСД_Местность;
				ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
				ДокВСД.cargoExpertized  = 1;
				ДокВСД.cargoInspected  	= 1;			
			
				
				ДокВСД.НоваяСтрока();
				ДокВСД.Партия = СПИСОКПАРТИЙ.Партия;
				ДокВСД.Количество = СПИСОКПАРТИЙ.КолвоСписания;
				ДокВСД.КоличествоМест = СПИСОКПАРТИЙ.КолвоМестСписания;			
				ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
				ДокВСД.ФормаУпаковки = ДокВСД.Партия.ФормаУпаковки;
				ДокВСД.Продукция = ДокВСД.Партия.Продукция;
				ДокВСД.ВидПродукции = ДокВСД.Партия.ВидПродукции;

				ДокВСД.Продукция_Элемент 	= ДокВСД.Партия.Продукция_Элемент;
				ДокВСД.ТермическоеСостояние = ДокВСД.Партия.Продукция_Элемент.ТермическиеУсловияПеревозки; 
				если пустоезначение(ДокВСД.Продукция_Элемент.экспертиза)=0 тогда
					ДокВСД.cargoExpertized = ДокВСД.Продукция_Элемент.экспертиза; 
				конецесли;	
				ДокВСД.НаименованиеПродукции = ДокВСД.Партия.Продукция_Элемент.полноенаименование;  
				если (пустоезначение(ДокВСД.ФормаУпаковки)=1)или(пустоезначение(ДокВСД.Партия.КоличествоМест)=1 ) тогда 
					ДокВСД.КоличествоМест=0;
				конецесли;	 
				ДокВСД.КоличествоМест=мин(ДокВСД.КоличествоМест,ДокВСД.Партия.КоличествоМест);
				если пустоезначение(ДокВСД.КоличествоМест)=1 тогда
					ДокВСД.ФормаУпаковки="";
				конецесли;	
			
				ДокВСД.Записать();
				ДокументСсылка = ДокВСД.ТекущийДокумент();
				списокпартий.ВСД = ДокументСсылка;
			//	Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+документссылка,"i");
		
	КонецЦикла;
    Отправитьвсд2();
	//РаскраситьСписокДокументов();		
	
КонецПроцедуры


Процедура СоздатьВСД()
	//если флаг1=0 тогда
	//	сообщить("Сначала загрузите актуальные непогашенные ВСД из Меркурия!");
	//	возврат;
	//конецесли;	
		

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
			//	Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
			//	Продолжить;
			//КонецЕсли;
			
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		

		Состояние("Заполнение списка партий ВСД ");
				
		//Если СписокДокументов.Контрагент.Вид()="Склады" Тогда 
		//	ХС = Отправитель_ХозСубъект;
		//Иначе
		//	ХС = ГМ.НайтиХозСубъект( СписокДокументов.Контрагент );		
		//КонецЕсли;
		//Если СписокДокументов.Грузополучатель.Вид()="Склады" Тогда
		//	Площадка = ГМ.НайтиПлощадкуПоСкладу(СписокДокументов.Грузополучатель);
		//Иначе
		//	Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( СписокДокументов.Грузополучатель );
		//КонецЕсли;
		ХС = СписокДокументов.ХозСубъект;
		Площадка = СписокДокументов.Площадка;
		
		если сокрлп(СписокДокументов.Док.статус)<>"CONFIRMED" тогда 
			продолжить;
		конецесли;	
		до=	СписокДокументов.Док;
			
				ДокВСД = СоздатьОбъект("Документ.ВСД_входящий");
				ДокВСД.Новый(); 
				ДокВСД.Фирма=выбфирма;
				ДокВСД.ДокОснование = СписокДокументов.Док;			
				ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок; 
				
				ДокВСД.Отправитель_ХозСубъект=до.Отправитель_ХозСубъект;
				ДокВСД.Отправитель_Площадка=до.Отправитель_Площадка;
				ДокВСД.Получатель_ХозСубъект=до.Получатель_ХозСубъект;
				ДокВСД.Получатель_Площадка=до.Получатель_Площадка;     
				
				ДокВСД.Производитель_ХозСубъект=до.Производитель_ХозСубъект;
				ДокВСД.Производитель_Площадка=до.Производитель_Площадка;
				ДокВСД.Производитель_Площадка3=до.Производитель_Площадка3;
				ДокВСД.Производитель_Площадка4=до.Производитель_Площадка4;
				ДокВСД.Производитель_Площадка1=до.Производитель_Площадка1;
				ДокВСД.Производитель_Площадка2=до.Производитель_Площадка2;
				ДокВСД.Перевозчик_ХозСубъект=до.Перевозчик_ХозСубъект;    
				
				ДокВСД.Продукция=до.Продукция;
				ДокВСД.ВидПродукции=до.ВидПродукции;
				ДокВСД.НаименованиеПродукции=до.НаименованиеПродукции; 
				
				ДокВСД.причина=списокдокументов.причина; 
				ДокВСД.КоличествоФакт=списокдокументов.колвоприход;
				ДокВСД.КоличествоМестФакт=списокдокументов.колвоместприход; 
				ДокВСД.Количество=до.Количество;
				ДокВСД.КоличествоМест=до.КоличествоМест; 
				ДокВСД.ТтнСерия=до.ТтнСерия;
				ДокВСД.ТтнНомер=до.ТтнНомер;
				ДокВСД.ТтнДата=до.ТтнДата;
				ДокВСД.номерАвто=до.номерАвто;
				ДокВСД.номерваг=до.номерваг;
				ДокВСД.ВсдСерия=до.ВсдСерия;
				ДокВСД.ВсдНомер=до.ВсдНомер;
				ДокВСД.ВсдДата=до.ВсдДата;
				ДокВСД.ВсдЭкспертиза=до.Экспертиза; 
				ДокВСД.ВсдМестность=до.Местность;
				ДокВСД.РольПроизводителя=до.РольПроизводителя;
				ДокВСД.РольПроизводителя3=до.РольПроизводителя3;
				ДокВСД.РольПроизводителя4=до.РольПроизводителя4;
				ДокВСД.РольПроизводителя1=до.РольПроизводителя1;
				ДокВСД.РольПроизводителя2=до.РольПроизводителя2;
				ДокВСД.ОсобыеОтметки=до.ОсобыеОтметки;
		//		Производитель_ХозСубъект=до.Производитель_ХозСубъект;
				ДокВСД.ТермическоеСостояние=до.ТермическоеСостояние;
				ДокВСД.UUID=до.UUID;
				ДокВСД.ФормаУпаковки=до.ФормаУпаковки;
				ДокВСД.ЕдиницаИзмерения=до.ЕдиницаИзмерения;
				ДокВСД.ВидВСД=2;
				ДокВСД.ДатаИзготовления1=до.ДатаИзготовления1;
				ДокВСД.ДатаИзготовления2=до.ДатаИзготовления2;
				ДокВСД.ДатаСрокГодности1=до.ДатаСрокГодности1;
				ДокВСД.ДатаСрокГодности2=до.ДатаСрокГодности2;
				ДокВСД.ДатаИзготовлениястрока=до.ДатаИзготовления;
				ДокВСД.ДатаСрокГодностистрока=до.ДатаСрокГодности;
				ДокВСД.Скоропортящийся=до.Скоропортящийся;
				ДокВСД.Некачественный=до.Некачественный;    
				
				ДокВСД.Продукция_Элемент=до.Продукция_Элемент; 
				ДокВСД.нашенаименование=списокдокументов.партия;   
				если пустоезначение(ДокВСД.нашенаименование)=1 тогда
					ДокВСД.нашенаименование=до.наименованиепродукции;
				конецесли;	

				ДокВСД.cargoInspected=до.cargoInspected;
				ДокВСД.cargoExpertized=до.cargoExpertized;
				ДокВСД.автор=глпользователь;
				ДокВСД.страна=до.страна;
				ДокВСД.ф1=до.ф1;
				ДокВСД.ф2=до.ф2;
				ДокВСД.ф3=до.ф3;
				ДокВСД.ф4=до.ф4;
				до.выбратьстроки();
				пока до.получитьстроку()=1 цикл
					ДокВСД.новаястрока();
					ДокВСД.маркировка=до.маркировка;
				конеццикла;	

				ДокВСД.Записать();
					ДокументСсылка = ДокВСД.ТекущийДокумент();
			//	КонецЕсли;                                   
					СписокДокументов.ВСД = ДокументСсылка;
		//		Сообщить("["+СписокДокументов.грузоотправитель+"] создан документ "+документссылка,"i");
		
	КонецЦикла;
    ОтправитьВСД();
//	РаскраситьСписокДокументов();		
	
КонецПроцедуры


Процедура ОтменитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=1;		
	КонецЦикла;	 
	
	ОбновитьИнф();
КонецПроцедуры

Процедура ВыделитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.сЦвет = "" Тогда 
			СписокДокументов.Пометка=2;		
		КонецЕсли;
	КонецЦикла;	      

	ОбновитьИнф();	
КонецПроцедуры

Процедура ОтменитьВсеДокументы2()
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		СписокПартий.Пометка=1;		
	КонецЦикла;	 
	
КонецПроцедуры

Процедура ВыделитьВсеДокументы2()
	СписокПартий.ВыбратьСтроки();
	Пока СписокПартий.ПолучитьСтроку() = 1 Цикл
		Если СписокПартий.сЦвет = "" Тогда 
			СписокПартий.Пометка=2;		
		КонецЕсли;
	КонецЦикла;	      

КонецПроцедуры


Процедура ПолучитьПартии2()
	ЗаписьЖурналаРегистрации("Меркурий получение актуальных партий ");
	смещение=0;
	ГМ.ПолучитьПартии(Отправитель_Площадка);
	флаг2=1;
КонецПроцедуры

Процедура ПолучитьПартии()
	ЗаписьЖурналаРегистрации("Меркурий получение непогашенных партий ");
	смещение=0;           
	//удалим непогашенные входящие документы
	док=создатьобъект("Документ.ВСД");
	док.выбратьдокументы(начдата-30,кондата);
	пока док.получитьдокумент()=1 цикл
		если док.пометкаудаления()=1 тогда
			продолжить;
		конецесли;
		если док.получатель_площадка<>отправитель_площадка тогда
			продолжить;
		конецесли;
		если сокрлп(док.статус)<>"UTILIZED" тогда
			док.удалить(0); 
		конецесли;	
	конеццикла;	
	
	ГМ.ПолучитьСписокВСД( Отправитель_Площадка, 4,2, Смещение);
//	ГМ.ПолучитьСписокВСД( Отправитель_Площадка, 4,4, Смещение);
	флаг1=1;
	ЗаполнитьСписокДокументов_Гашения();
	
КонецПроцедуры

 
Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Партия" Тогда
		//КонтФормы.Форма.Закрыть();
		
		если элемент.получатель_площадка=Отправитель_Площадка тогда   
			ссттрр=0;
			если списокпартий.найтизначение(элемент,ссттрр,"Партия")=0 тогда
			списокпартий.новаястрока();
			списокпартий.партия=элемент;
			СписокПартий.Колво= Элемент.Количество;
			СписокПартий.КолвоМест=Элемент.КоличествоМест;
			СписокПартий.КолвоСписания= 0;
			СписокПартий.КолвоМестСписания=0;
			списокпартий.пометка=1;  
			конецесли;
		иначе
		    сообщить("Партия не принадлежит выбранной фирме!");
		конецесли;
		РаскраситьСписокПартий();				

	КонецЕсли;
	
КонецПроцедуры

//=========================== ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ =============================
 
процедура ДобавитьПартию() 
	//если флаг2=	0 тогда
	//	сообщить("Сначала загрузите актуальные партии!");
	//	возврат;
	//конецесли;	
		ХозСубъект = выбфирма.меркурийхс;
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		КонтекстОтбора = СоздатьОбъект("СписокЗначений");
		КонтекстОтбора.ДобавитьЗначение(Отправитель_Площадка, "Площадка");
				
		ОткрытьПодбор("Справочник.ВСД_Партия", "ФормаСписка",КонтекстОтбора,1);

	
конецпроцедуры	

процедура УбратьПартию()
	текСтр = СписокПартий.ТекущаяСтрока();
     если пустоезначение(текстр)=0 тогда
	 	списокпартий.удалитьстроку(текстр);
	 конецесли;	
конецпроцедуры	
                

             
процедура ВыборФирмы() //н2017
	если пустоезначение(выбфирма)=1 тогда
		возврат;
	конецесли;
	Отправитель_ХозСубъект=выбфирма.меркурийхс;
	param_issuer_id=сокрлп(отправитель_хозсубъект.guid);
//	Перевозчик_ХозСубъект=выбфирма.меркурийхс;
	Отправитель_Площадка=выбфирма.меркурийплощадка; 
	ГМ.рабочаяфирма=выбфирма;
	ГМ.СписокКонстант.удалитьвсе();
//	СписокКонстант=СоздатьОбъект("СписокЗначений");
	ГМ.СписокКонстант.ДобавитьЗначение(param_username, "param_username");
	ГМ.списокконстант.ДобавитьЗначение(param_password ,"param_password");
	ГМ.списокконстант.ДобавитьЗначение(param_issuer_id, "param_issuer_id");
	ГМ.списокконстант.ДобавитьЗначение(param_service_id, "param_service_id");
	ГМ.списокконстант.ДобавитьЗначение(param_api_key, "param_api_key");
	ГМ.списокконстант.ДобавитьЗначение(param_intiator_login, "param_intiator_login");
	ГМ.списокконстант.ДобавитьЗначение(param_vetdoctor_login, "param_vetdoctor_login");
	ГМ.списокконстант.ДобавитьЗначение(param_vetdoctor_fio, "param_vetdoctor_fio");	
	ГМ.списокконстант.ДобавитьЗначение(param_vetdoctor_post, "param_vetdoctor_post");	
	
	ГМ.списокконстант.ДобавитьЗначение(Отправитель_Площадка, "Отправитель_Площадка");
	ГМ.списокконстант.ДобавитьЗначение(Отправитель_ХозСубъект, "Отправитель_ХозСубъект");
	
	ГМ.списокконстант.ДобавитьЗначение(Страна, "Страна");
	ГМ.списокконстант.ДобавитьЗначение(Регион, "Регион");
	ГМ.списокконстант.ДобавитьЗначение(Город, "Город");
	ГМ.списокконстант.ДобавитьЗначение(ВСД_Экспертиза, "ВСД_Экспертиза");
	ГМ.списокконстант.ДобавитьЗначение(ВСД_Местность, "ВСД_Местность");
	ГМ.списокконстант.ДобавитьЗначение(ВСД_ОсобыеОтметки, "ВСД_ОсобыеОтметки");
	
	ГМ.списокконстант.ДобавитьЗначение(ПаузаСек, "ПаузаСек");	
	ГМ.списокконстант.ДобавитьЗначение(НазваниеРеквизитаГрузополучатель, "НазваниеРеквизитаГрузополучатель");	
			
	ГМ.списокконстант.ДобавитьЗначение(ОтладкаЗапросовXML, "ОтладкаЗапросовXML");	
	
	ГМ.списокконстант.ДобавитьЗначение(Перевозчик_ХозСубъект, "Перевозчик_ХозСубъект");		
	ГМ.списокконстант.ДобавитьЗначение(НазваниеРеквизитаКоличествоМест, "НазваниеРеквизитаКоличествоМест");
	ГМ.списокконстант.ДобавитьЗначение(ПропускатьПустыеСвойства, "ПропускатьПустыеСвойства");		
	ГМ.списокконстант.ДобавитьЗначение(НазваниеВидаДокументаРеализация, "НазваниеВидаДокументаРеализация");		
	ГМ.списокконстант.ДобавитьЗначение(НазваниеРеквизитаКоличество, "НазваниеРеквизитаКоличество");
	
	ГМ.списокконстант.ДобавитьЗначение(КаталогЛогов, "КаталогЛогов");
	ГМ.списокконстант.ДобавитьЗначение(ПаузаСек, "ПаузаСек");
	
	ГМ.списокконстант.ДобавитьЗначение(ОчищатьСправочникВСД_Партии, "ОчищатьСправочникВСД_Партии");
	
	ГМ.списокконстант.ДобавитьЗначение(КаталогМодуля, "КаталогМодуля");		
	ГМ.списокконстант.ДобавитьЗначение(КаталогБиблиотек, "КаталогБиблиотек");		
	ГМ.списокконстант.ДобавитьЗначение(ТестовыйРежим, "ТестовыйРежим");		
	
	ИмяФайла="";
	КаталогОбработки="";
	
	РасположениеФайла(КаталогОбработки, ИмяФайла);
	ИмяФайла = ГМ.ИмяФайлаНастроек();
	ЗначениеВФайл(ИмяФайла,ГМ.списокконстант);
    ГМ.инициализация(); //ЗагрузитьПараметры(Контекст);
	флаг1=0;
	флаг2=0;
	списокпартий.удалитьстроки();
	списокдокументов.удалитьстроки();
конецпроцедуры	       //н2017

Процедура ПриОткрытии()
	
   //{Интеграционный модуль для переопределения функций, плюс несколько базовых функций
    глМеркурийИнтеграция 		= СоздатьОбъект("МеркурийИнтеграция");

    ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
    ГМ.Инициализация();        
	ГМ.ЗагрузитьПараметры();
    ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	
    //Переопределение функций, если они определены в модуле
    глМеркурийИнтеграция.Инициализация(ГМ);    
    //}		
	
	ЗаголовокНадпись();   
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Гашение");
	Форма.Закладки.ДобавитьЗначение("Перемещение");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, СписокДокументов");
	
	флаг1=0;
	флаг2=0;
	Партия = "";
	датаоф=рабочаядата();              
		//н2017  
	спр=создатьобъект("справочник.фирмы");
	спр.выбратьэлементы();
	пока спр.получитьэлемент()=1 цикл
		если Отправитель_ХозСубъект<>спр.меркурийхс тогда
			продолжить;
		иначе
			выбфирма=спр.текущийэлемент();
			ГМ.рабочаяфирма=выбфирма;
		конецесли;	
	конеццикла;	
	
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда 
		тип_п="";
		попытка
			тип_п=парам.получить("тип");
		исключение
		    возврат;
		конецпопытки;
		
		если тип_п="перемещение" тогда
			отправ=парам.получить("отправитель");
			если выбфирма.меркурийплощадка<>отправ тогда
				спр=создатьобъект("справочник.фирмы");
				спр.выбратьэлементы();
				пока спр.получитьэлемент()=1 цикл
					если Отправ<>спр.меркурийплощадка тогда
						продолжить;
					иначе
						выбфирма=спр.текущийэлемент();
						выборфирмы();
					конецесли;	
				конеццикла;	
            конецесли;
			
			фирмаполучатель=парам.получить("получатель");
			тзпарт=парам.получить("партии");
			
			
			тзпарт.выбратьстроки();
			пока тзпарт.получитьстроку()=1 цикл
				списокпартий.новаястрока();
				списокпартий.партия=тзпарт.партия;
				списокпартий.колво=тзпарт.партия.количество;
				списокпартий.колвомест=тзпарт.партия.количествомест;
				списокпартий.колвосписания=тзпарт.колво;
				списокпартий.колвоместсписания=тзпарт.колвомест;
				списокпартий.пометка=2;
			конеццикла;	
			Форма.ИспользоватьСлой("Основной, Перемещение");
			форма.закладки.текущаястрока(2);

		КонецЕсли; 
		
	КонецЕсли;  

	
КонецПроцедуры   

Процедура ПриПовторномОткрытии()
	
	
	ЗаголовокНадпись();   
	
	флаг1=0;
	флаг2=0;
	Партия = "";
	датаоф=рабочаядата();              
		//н2017  
	
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда 
		тип_п="";
		попытка
			тип_п=парам.получить("тип");
		исключение
		    возврат;
		конецпопытки;
		
		если тип_п="перемещение" тогда
			отправ=парам.получить("отправитель");
			если выбфирма.меркурийплощадка<>отправ тогда
				спр=создатьобъект("справочник.фирмы");
				спр.выбратьэлементы();
				пока спр.получитьэлемент()=1 цикл
					если Отправ<>спр.меркурийплощадка тогда
						продолжить;
					иначе
						выбфирма=спр.текущийэлемент();
						выборфирмы();
					конецесли;	
				конеццикла;	
			конецесли;         
			списокпартий.удалитьстроки();
			списокдокументов.удалитьстроки();
			
			фирмаполучатель=парам.получить("получатель");
			тзпарт=парам.получить("партии");
			
			
			тзпарт.выбратьстроки();
			пока тзпарт.получитьстроку()=1 цикл
				списокпартий.новаястрока();
				списокпартий.партия=тзпарт.партия;
				списокпартий.колво=тзпарт.партия.количество;
				списокпартий.колвомест=тзпарт.партия.количествомест;
				списокпартий.колвосписания=тзпарт.колво;
				списокпартий.колвоместсписания=тзпарт.колвомест;
				списокпартий.пометка=2;
			конеццикла;	
			Форма.ИспользоватьСлой("Основной, Перемещение");
			форма.закладки.текущаястрока(2);

		КонецЕсли; 
		
	КонецЕсли;   
	
КонецПроцедуры   

процедура приЗакрытии()
	
конецпроцедуры	

 // предопределенная процедура
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
 	ТекСтрока = СписокДокументов.ТекущаяСтрока();
 	
 	Если ЗначениеЗакладки="Гашение" Тогда
		Форма.ИспользоватьСлой("Основной, СписокДокументов");
		//СписокДокументов.УдалитьСтроки();
		Если СписокДокументов.КоличествоСтрок()=0 Тогда
			ЗаполнитьСписокДокументов_Гашения();
		КонецЕсли;		   
		
	ИначеЕсли ЗначениеЗакладки="Перемещение" Тогда
		Форма.ИспользоватьСлой("Основной, Перемещение");
		//ЗаполнитьПартии();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;     
		
КонецПроцедуры     

процедура перейтиКгашению()    
	площадкаО=выбфирма.меркурийплощадка;
	
	резервпартий=создатьобъект("таблицазначений");
	списокпартий.выгрузить(резервпартий);
	
    форма.закладки.текущаястрока(1);
	ПриВыбореЗакладки(1, "Гашение");
	выбфирма=фирмаполучатель;
	выборфирмы();
	сообщить("Загружаем входящие ВСД..."+ текущеевремя());
	ПолучитьПартии();
	списокдокументов.выбратьстроки();
	пока списокдокументов.получитьстроку()=1 цикл
		если (списокдокументов.площадка=площадкаО)и(списокдокументов.датадок=датаоф) тогда
			списокдокументов.пометка=2;
			//сопоставляем  названия партий   если найдем исходную 
		//	попытка
		    для пп=1 по резервпартий.количествострок() цикл
				резервпартий.получитьстрокупономеру(пп); 
				если (резервпартий.пометка=2) тогда 
				если (списокдокументов.продукция=резервпартий.партия.продукция_элемент)и(списокдокументов.колво=резервпартий.колвосписания)
				и(списокдокументов.колвомест=резервпартий.колвоместсписания) тогда
					 списокдокументов.партия=резервпартий.партия.наименование;
					 резервпартий.пометка=1;
					 прервать;
				конецесли;	
		        конецесли;
			конеццикла;	
//		исключение
			
	//		конецпопытки;
		конецесли;	
	конеццикла;	 
	
	сообщить("Создаем ВСД гашения..."+ текущеевремя()); 
	создатьВСД();
	сообщить("Отправляем ВСД гашения..."+ текущеевремя()); 
	отправитьВСД(); 
	сообщить("Проверьте, если все нужные партии погашены, то закройте эту форму!");
	Сообщить("В групп.обработке документов реализации выберите полученные партии ВСД в строках ФИОЛЕТОВОГО цвета!");
	
	форма.обновить();
	
	
конецпроцедуры  

Процедура УдалитьВСД()
	
	текстрока= СписокДокументов.текущаястрока();
	доктр=создатьобъект("Документ");
	если текстрока>0 тогда
		всде=списокДокументов.получитьзначение(текстрока,"ВСД");

		доктр.найтидокумент(всде);
		доктр.удалить(0);
		списокДокументов.установитьзначение(текстрока,"ВСД","")
	Конецесли;

	РаскраситьСписокДокументов();		
	
КонецПроцедуры



НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов.НоваяКолонка("сЦвет",,,,,1,);
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,20,);
СписокДокументов.НоваяКолонка("Площадка",,,,,20,);
СписокДокументов.НоваяКолонка("Док",,,,,20,);
СписокДокументов.НоваяКолонка("ДатаДок",,,,,10,);
СписокДокументов.НоваяКолонка("Партия",,,,,15,);
СписокДокументов.НоваяКолонка("Колво",,,,"Кол-во ВСД",10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,"Мест ВСД",10,);
СписокДокументов.НоваяКолонка("КолвоПриход",,,,"Кол-во приход",12,);
СписокДокументов.НоваяКолонка("КолвоМестПриход",,,,"Мест приход",12,);
СписокДокументов.НоваяКолонка("Причина",,,,,10,);
СписокДокументов.НоваяКолонка("ВСД",,,,,15,);
СписокДокументов.НоваяКолонка("Продукция",,,,,15,);
СписокДокументов.ВыводитьПиктограммы("Пометка");  

СписокПартий.НоваяКолонка("сЦвет",,,,,1,);
СписокПартий.НоваяКолонка("Пометка",,,,,5,);
СписокПартий.НоваяКолонка("Партия",,,,,20,);
СписокПартий.НоваяКолонка("Колво","Число",,,,10,);
СписокПартий.НоваяКолонка("КолвоМест","Число",,,,10,);
СписокПартий.НоваяКолонка("КолвоСписания","Число",,,"Списать",15,);
СписокПартий.НоваяКолонка("КолвоМестСписания","Число",,,"Мест списать",15,);
СписокПартий.НоваяКолонка("ВСД",,,,,20,);
СписокПартий.ВыводитьПиктограммы("Пометка");
ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

НазваниеВидаДокументаРеализация = "Реализация";
НазваниеРеквизитаКоличество = "Количество";

Попытка
	ЗагрузитьВнешнююКомпоненту("1cpp.dll");
Исключение
	Сообщить("Ошибка при загрузке 1cpp.dll");
	Сообщить(ОписаниеОшибки());
КонецПопытки;

Попытка
	ЗагрузитьВнешнююКомпоненту("formex.dll");
Исключение
	Сообщить("Ошибка при загрузке formex.dll");
	Сообщить(ОписаниеОшибки());
КонецПопытки;

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();

попытка
	Филиал = глПользователь.Филиал;
Исключение
	Филиал="";
КонецПопытки;