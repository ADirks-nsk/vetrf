Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем ВыбСтрока;
//Перем тзПартии;

Перем оПривязки; //:Меркурий.Привязки
Перем тпДокументов, СписокДокументов;
Перем тпНеобходимыеПартии, тзНеобходимыеПартии;
Перем тпПартииПроизводство, тзПартииПроизводство;

Перем ВыбФирма Экспорт;
Перем НачДата, КонДата;

Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;		
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//=========================== СЛУЖЕБНЫЕ ФУНКЦИИ =============================

Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Документов: "+СписокДокументов.КоличествоСтрок()+", количество: "+Окр(СписокДокументов.Итог("Колво"))+" ");
	
	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 1 Тогда 
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;	      
	ВыбКолво = Окр(ВыбКолво);

	Форма.ИнфоВыбор.Заголовок("Выбрано "+ВыбДок+" документов, количество = "+ВыбКолво+" ");
	
КонецПроцедуры

Процедура ЗаголовокНадпись()
	
	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

Процедура Клик_ПартииПроизводства()
	текСтр = тзПартииПроизводство.ТекущаяСтрока();
	текКол = тзПартииПроизводство.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = тзПартииПроизводство.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 1 Тогда
			тзПартииПроизводство.Пометка=0;
		Иначе
			тзПартииПроизводство.Пометка=1;
		КонецЕсли;
	ИначеЕсли (текКол="Продукция_Элемент") Тогда
		Если (ПустоеЗначение( тзПартииПроизводство.Продукция_Элемент) = 0) Тогда
			Эл = тзПартииПроизводство.ПолучитьЗначение(текСтр, текКол);
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзПартииПроизводство.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	КонецЕсли;

	ОбновитьИнф();
КонецПроцедуры


Процедура Клик_партии()
	текСтр = тзНеобходимыеПартии.ТекущаяСтрока();
	текКол = тзНеобходимыеПартии.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			тзНеобходимыеПартии.Пометка=1;
		Иначе
			тзНеобходимыеПартии.Пометка=2;
		КонецЕсли;
	ИначеЕсли (текКол="Продукция_Элемент") и (тзНеобходимыеПартии.ВидимостьКолонки("ДокРеализации") > 0) Тогда
		Если (ПустоеЗначение(тзНеобходимыеПартии.Продукция_Элемент) = 1) Тогда
			//Выбрать и привязать
			ВыбСтрока = текСтр;
			ТекНоменклатура = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Номенклатура");
			Продукция_элемент = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
			Если Продукция_элемент.Выбрать("Укажите элемент для установки соответствия","ФормаСписка") = 0 Тогда
				Возврат;			    
			КонецЕсли;
			ТВопроса = "Установить соответствие "+ТекНоменклатура+" -> "+ Продукция_элемент.ТекущийЭлемент();
			Если Вопрос(ТВопроса,"Да+Нет") = "Да" Тогда
				СпрНом = СоздатьОбъект("Справочник.Номенклатура");
				СпрНом.НайтиЭлемент(ТекНоменклатура.ТекущийЭлемент());
				СпрНом.ВСД_Продукция_Элемент = Продукция_элемент.ТекущийЭлемент();
				СпрНом.Записать();
				тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"ВСД_Продукция_Элемент", Продукция_элемент.ТекущийЭлемент());
				Предупреждение("Необходимо перезаполнить партии !!!");
			КонецЕсли;
			//ОткрытьПодбор("Справочник.ВСД_Продукция_Элемент", "ФормаСписка");
		Иначе
			Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);	
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры


//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕНТОВ =================

//======================================================================
Процедура тпДокументовПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, СписокДокументов);
	СписокДокументов.Пометка = ?(СписокДокументов.Пометка = 1,0,1);
	ТабличноеПоле.ОбновитьСтроки();
	ОбновитьИнф();

	тзНеобходимыеПартии.УдалитьСтроки();
	//тзПартии.УдалитьСтроки();
КонецПроцедуры

//======================================================================
Процедура тпДокументовПриАктивизацииСтроки(ТабличноеПоле)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, СписокДокументов);
КонецПроцедуры

Процедура тпДокументовВыбор()
	ГМ.ПриАктивизацииСтрокиТП(тпДокументов, СписокДокументов);
	ГМ.ПриАктивизацииКолонкиТП(тпДокументов, СписокДокументов);
	
	текСтр=СписокДокументов.ТекущаяСтрока();
	Если текСтр=0 Тогда Возврат; КонецЕсли;
	текКол = СписокДокументов.ТекущаяКолонка();
	
	Если текКол="Площадка" Тогда 
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;
		//ЖД - нет по ХС площадок - открывались все
		Если СписокОтбора.размерСписка() = 0 Тогда
			СписокОтбора.ДобавитьЗначение("***");
			//или написать что нет площадок и выйти отсюда 
		КонецЕсли;
		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпДокументовПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
		
		Если (ПустоеЗначение(ДанныеСтроки.ВСД)=0) Тогда
			Если СокрЛП(ДанныеСтроки.ВСД.Статус)="COMPLETED" Тогда
				ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ДанныеСтроки.ХозСубъект.GUID)=1 Тогда 			
			ОформлениеСтроки.ЦветФона = 255;	// Красный
//			ОформлениеСтроки.ЦветФона = 8421631;	// Красный
		ИначеЕсли (ПустоеЗначение(ДанныеСтроки.Площадка)=0) Тогда
			Если (ПустоеЗначение(ДанныеСтроки.Площадка.GUID)=0)  Тогда 
				//ДанныеСтроки.сЦвет = "";							
			КонецЕсли;
		Иначе			
			ОформлениеСтроки.ЦветФона = 8454143;	// Желтый
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕНТОВ =================

Процедура тпНеобходимыеПартииПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		//ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
		
		Если (ДанныеСтроки.КолвоНаСкладе > 0 ) и ( ПустоеЗначение(ДанныеСтроки.Партия)=0 ) Тогда 
			ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
		Иначе
 				ОформлениеСтроки.ЦветФона = 255;	// Красный
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура тпНеобходимыеПартииВыбор()
	ГМ.ПриАктивизацииСтрокиТП(тпНеобходимыеПартии, тзНеобходимыеПартии);
	ГМ.ПриАктивизацииКолонкиТП(тпНеобходимыеПартии, тзНеобходимыеПартии);
		
	Клик_партии();
		
КонецПроцедуры
//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕНТОВ =================

Процедура тпПартииПроизводствоПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		//ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
 			
 		Если (ДанныеСтроки.КолвоНаСкладе = 0 ) Тогда
			ОформлениеСтроки.ЦветФона = 255;	// Красный
		ИначеЕсли (ДанныеСтроки.КолвоНаСкладе >= ДанныеСтроки.Количество) Тогда
			ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
		Иначе
			ОформлениеСтроки.ЦветФона = 8454143;	// Желтый
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура тпПартииПроизводствоВыбор()
	ГМ.ПриАктивизацииСтрокиТП(тпПартииПроизводство, тзПартииПроизводство);
	ГМ.ПриАктивизацииКолонкиТП(тпПартииПроизводство, тзПартииПроизводство);	
	
	Клик_ПартииПроизводства();
	
КонецПроцедуры

//=========================== ПЕЧАТНЫЕ ФОРМЫ =============================
//{
Процедура Реестр()
	ДобавлятьУпаковки = ГМ.ПолучитьКонстанту("ДобавлятьУпаковки");
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка|Осн");
	Если ДобавлятьУпаковки = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ВесМест");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Хвост");
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		
		Таб.ВывестиСекцию("Строка|Осн");
		Если ДобавлятьУпаковки = 1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ВесМест");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Хвост");
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");	
КонецПроцедуры
              
Процедура ПечатьСокрВСД()
	
	тз = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если (тз.Пометка<>1) или (Пустоезначение(тз.ВСД)=1) Тогда
			Продолжить;	
		КонецЕсли;
		ГМ.ПечатьСокрВСД(тз.ВСД.ТекущийДокумент());
	КонецЦикла;
КонецПроцедуры

Процедура МенюПечать()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("Реестр", "Реестр");
	спМеню.ДобавитьЗначение("СокрВСД", "Сокращенный ВСД");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Реестр" Тогда 
		Реестр();
	ИначеЕсли зн = "СокрВСД" Тогда 
		ПечатьСокрВСД();
	КонецЕсли;
		
КонецПроцедуры
//}

//=========================== ФУНКЦИИ КНОПОК =============================

Процедура ЗаполнитьСписокДокументов_Реализации() 

	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение(НачДата, "НачДата");
	СписокПараметров.ДобавитьЗначение(КонДата, "КонДата");
	СписокПараметров.ДобавитьЗначение(ВыбКонтрагент, "ВыбКонтрагент");
	СписокПараметров.ДобавитьЗначение(ВыбФирма, "ВыбФирма");
	СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,"Площадка"); //ЖД для фильтра по складу	
	Если флФильтрПоСкладу = 1 Тогда
		СписокПараметров.ДобавитьЗначение(флФильтрПоСкладу,"флФильтрПоСкладу"); //ТАС для фильтра по складу	
	КонецЕсли;
	
    Если  ФС.СуществуетФайл(ГМ.КаталогМодуля+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert")=1 Тогда
		//{ переопределение функции заполнения списка документов 
		// интеграция переопределяется в \Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert
		//
		ОткрытьФормуМодально("Отчет",СписокПараметров,ГМ.КаталогМодуля+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert");
		
		тз = "";
		
		Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда				
			тз = СписокПараметров.Получить("ТЗ");				
		Иначе
			Возврат;
		КонецЕсли; 			
		Если ПустоеЗначение(ТЗ)=1 Тогда
			Предупреждение("Отсутствуют документы Реализации за выбранный период","!");
			Возврат;
		КонецЕсли;
		//}
	Иначе // стандартный запрос
		тз = ГМ.ПолучитьТзРеализаций( СписокПараметров ); 
	КонецЕсли;

	ТекСтрока = СписокДокументов.ТекущаяСтрока();
	
	СписокДокументов.УдалитьСтроки();
	
	Если ТипЗначенияСтр(тз) = "ТаблицаЗначений" Тогда
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.НоваяСтрока();
			СписокДокументов.Пометка = 0;
			СписокДокументов.Грузополучатель = тз.Грузополучатель;
			СписокДокументов.ВСД = тз.ДокВСД;
			СписокДокументов.Колво = тз.Количество;
			Попытка СписокДокументов.КолвоМест = тз.КоличествоМест; Исключение КонецПопытки;
			СписокДокументов.Док = тз.Док;
			СписокДокументов.Контрагент = тз.Контрагент;
	
			СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(тз.Контрагент);
			Если ПустоеЗначение(СписокДокументов.ХозСубъект)=0 Тогда
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( СписокДокументов.Грузополучатель);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Попытка
		тпДокументов.ОбновитьСтроки();
	Исключение
	КонецПопытки;
	      
	//РаскраситьСписокДокументов( тзДок, ТекСтрока );
	ОбновитьИнф();
КонецПроцедуры

процедура ВыбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		СписокДокументов.УдалитьСтроки();
		ЗаполнитьСписокДокументов_Реализации();
	конецесли;
конецпроцедуры


Процедура СоздатьВСД_ПоТзРаспределения()

	Если тзНеобходимыеПартии.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица с распределенными партиями.","!");
		Возврат;
	КонецЕсли;
	
	Если ФС.СуществуетФайл(ГМ.КаталогМодуля+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_транзакция.ert")=1 Тогда
		Сообщить("Данная ф-ция временно недоступна при наличии подключаемого модуля Создания ВСД");
		Возврат;
	КонецЕсли;
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>1 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда       
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда 
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		
		
		Состояние("Создание ВСД ");
		ДокВСД = СоздатьОбъект("Документ.ВСД_транзакция");
		ДокВСД.Новый();

		ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
		ДокВСД.Отправитель_Площадка = Отправитель_Площадка;			
		ДокВСД.Получатель_ХозСубъект = СписокДокументов.ХозСубъект;		
		ДокВСД.Получатель_Площадка = СписокДокументов.Площадка;					
		ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;

		// отфильтруем партии в тзНеобходимыеПартии по документу СписокДокументов.Док 
		тзНоваяТЧ = СоздатьОбъект("ТаблицаЗначений");
		тзИндТаблица = СоздатьОбъект("ИндексированнаяТаблица");
		тзИндТаблица.Загрузить(тзНеобходимыеПартии);
		тзИндТаблица.ДобавитьИндекс("ДокРеализации","ДокРеализации");
			
		тзИндТаблица.УстановитьФильтр( СписокДокументов.Док, СписокДокументов.Док, "ДокРеализации");
		тзИндТаблица.Выгрузить( тзНоваяТЧ, "ДокРеализации");

		// остальные реквизиты заполним стандартно 
		ГМ.ЗаполнитьВСД_Транзакция( ДокВСД, СписокДокументов.Док, тзНоваяТЧ );

		Если ДокВСД.КоличествоСтрок() = 0 Тогда
		    Продолжить;
		КонецЕсли;
			
		ДокВСД.Записать();
		ДокументСсылка = ДокВСД.ТекущийДокумент();
		
		СписокДокументов.ВСД = ДокументСсылка;
		
		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");		
	КонецЦикла;
//	тзПартии.УдалитьСтроки();
	тзНеобходимыеПартии.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры


Процедура ОтменитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=0;		
	КонецЦикла;	 
	Попытка
		тпДокументов.ОбновитьСтроки();
	Исключение
	КонецПопытки;
	ОбновитьИнф();
КонецПроцедуры

	
Процедура ВыделитьВсеДокументы()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("ВыделитьВсе", "Выделить все документы");
	спМеню.ДобавитьЗначение("ВыделитьСоздать", "Выделить пустые ВСД");
	спМеню.ДобавитьЗначение("ВыделитьНеОтправленные", "Выделить НЕ ОТПРАВЛЕННЫЕ");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "ВыделитьВсе" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.Пометка=1;		
		КонецЦикла;	      
	ИначеЕсли зн = "ВыделитьСоздать" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.Пометка=0;
			Если ( ПустоеЗначение(СписокДокументов.ВСД) = 1 ) Тогда 
				Если (ПустоеЗначение(СписокДокументов.Площадка)=0) Тогда 
					СписокДокументов.Пометка=1;		
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	      
	ИначеЕсли зн = "ВыделитьНеОтправленные" Тогда 
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.Пометка=0;
			Если ( ПустоеЗначение(СписокДокументов.ВСД) = 0 ) Тогда 
				Если ( СокрЛП(СписокДокументов.ВСД.Статус) <> "COMPLETED" ) Тогда 
					СписокДокументов.Пометка=1;		
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	      
	КонецЕсли;
		
	тзНеобходимыеПартии.УдалитьСтроки();

	Попытка
		тпДокументов.ОбновитьСтроки();
	Исключение
	КонецПопытки;	
	
	ОбновитьИнф();	
	
КонецПроцедуры

Процедура ЗаполнитьПартии()

	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Основной, Партии");

	тз = ГМ.РаспределитьДокументыПоПартиям( СписокДокументов, ДетальнаяИнформация);
	тзНеобходимыеПартии.Загрузить( тз );

	тпНеобходимыеПартии.ОбновитьСтроки();
КонецПроцедуры

Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
КонецФункции

Процедура ОтправитьВСД()
	
	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 1 Тогда 		
			Если ПроверитьВСД(СписокДокументов.ВСД)=1 Тогда 
				СписокВСД.ДобавитьЗначение(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ.ОтправитьВсе_ВСД_Транзакция(СписокВСД, НачДата, КонДата);
	
	тпДокументов.ОбновитьСтроки();
	ОбновитьИнф();	
КонецПроцедуры

Процедура ПолучитьПартии()
	ЗаписьЖурналаРегистрации("Меркурий получение партий ");
	
	ГМ.ПолучитьПартии(Отправитель_Площадка);
	
КонецПроцедуры

Процедура Создать_ВСД_Производство()
	
	ВремПартии = СоздатьОбъект("ТаблицаЗначений");
	тзПартииПроизводство.Выгрузить(ВремПартии);
	ВремПартии.ВыбратьСтроки();

	Пока ВремПартии.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремПартии.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремПартии.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремПартии.КолвоНаСкладе >= ВремПартии.Количество Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремПартии.Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;

		Состояние("Создание ВСД_Производство ");
		
		Если ФС.СуществуетФайл(ГМ.КаталогМодуля+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			//
			
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,				"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,					"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( тзНеобходимыеПартии.Количество,			"Колво");    
			Попытка СписокПараметров.ДобавитьЗначение( тзНеобходимыеПартии.КолвоМестСписания,		"КолвоМест"); Исключение КонецПопытки;
			СписокПараметров.ДобавитьЗначение( тзНеобходимыеПартии.Продукция_Элемент,	"Продукция_Элемент");    
			//
			СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,		"ВСД_Экспертиза");    
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,	"ВСД_ОсобыеОтметки");    

			СписокПараметров.ДобавитьЗначение( НачДата,				"НачДата");
			СписокПараметров.ДобавитьЗначение( КонДата,				"КонДата");    
			
			ОткрытьФормуМодально("Отчет",СписокПараметров,ГМ.КаталогМодуля+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_Производство.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}
		
		Иначе
			
			ДокВСД = СоздатьОбъект("Документ.ВСД_Производство");
			ДокВСД.Новый();
			ДокВСД.ДатаДок = НачДата;			
			
			ДокВСД.Производитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Производитель_площадка = Отправитель_Площадка;
			
			Автор = ГМ.ПолучитьАвтора();
			Попытка				
				ДокВСД.Автор = Автор;
			Исключение
			КонецПопытки;
			//Попытка	ДокВСД.Филиал = Автор.Филиал; Исключение КонецПопытки;
			
			ДокВСД.Экспертиза 		= ВСД_Экспертиза;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
							
			ДокВСД.НоваяСтрока();
			
			ДокВСД.Продукция_Элемент 	= ВремПартии.Продукция_Элемент;
			ДокВСД.Количество 			= ВремПартии.Количество - ВремПартии.КолвоНаСкладе; 
			Попытка ДокВСД.КоличествоМест = ВремПартии.КолвоМестСписания; Исключение КонецПопытки;					
			ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			ДокВСД.ФормаУпаковки 		= ДокВСД.Продукция_Элемент.ФормаУпаковки;
			ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
			ДокВСД.ВидДвижения 			= 1;
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
			
			ДокВСД.ЗавершитьОперацию = 1;
			ДокВСД.ДатаИзготовления1 = ГМ.Преобразовать_Дата_в_Строка(НачДата);
			Если КонДата>НачДата Тогда
				ДокВСД.ДатаИзготовления2 = ГМ.Преобразовать_Дата_в_Строка(КонДата);
			КонецЕсли;
			ДокВСД.ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка(НачДата+ДокВСД.Продукция_Элемент.СрокГодности);
				
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;
		
		ВремПартии.ВСД_Производство = ДокументСсылка;
		
		Сообщить(" создан документ "+ВремПартии.ВСД_Производство,"i");		
	КонецЦикла;
	ВремПартии.Выгрузить(тзПартииПроизводство);
	
	тпПартииПроизводство.ОбновитьСтроки();
КонецПроцедуры


Функция ПроверитьВСД_Производство(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	//Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
	//	Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
	//	Возврат 0;
	//КонецЕсли;
	
	Возврат 1;
КонецФункции


Процедура Отправить_ВСД_Производство()

	СписокВСД = СоздатьОбъект("СписокЗначений");
	тзПартииПроизводство.ВыбратьСтроки();
	Пока тзПартииПроизводство.ПолучитьСтроку() = 1 Цикл
		Если ПроверитьВСД_Производство(тзПартииПроизводство.ВСД_Производство)=1 Тогда 
			СписокВСД.ДобавитьЗначение(тзПартииПроизводство.ВСД_Производство);
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД Производство");
	
	ГМ.ОтправитьВсе_ВСД_Производство(СписокВСД, НачДата, КонДата);
    //ВывестиТзПартийВариант2();
	тз = ГМ.РаспределитьДокументыПоПартиям( СписокДокументов, ДетальнаяИнформация );
	тзНеобходимыеПартии.Загрузить( тз );
	тпНеобходимыеПартии.ОбновитьСтроки();
	//ВыбратьПартию_ВСД_Производство();
КонецПроцедуры

Процедура АннулироватьВСД()
	Если Вопрос("Вы уверены, что хотите аннулировать выбранные ВСД?",4,30)=6 Тогда 
		Сообщить("Выполняется аннулирование ВСД");
		
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка = 1 Тогда 
				ГМ.Аннулировать_ВСД_транзакция(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЦикла;
		
		ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;
КонецПроцедуры

Процедура Создать_Инвентаризацию()
	//Если тзНеобходимыеПартии.ВидимостьКолонки("ВСД_Производство") < 0 Тогда
	//	Сообщить("Отключите режим распределения партий","i");
	//	Возврат;
	//КонецЕсли;   

	Состояние("Создание ВСД2_Инвентаризация ");

	ДокВСД = СоздатьОбъект("Документ.ВСД2_Инвентаризация");
	ДокВСД.Новый();
	ДокВСД.ДатаДок = НачДата;			
	ДокВСД.Владелец_ХозСубъект = Отправитель_ХозСубъект;
	ДокВСД.Владелец_площадка = Отправитель_Площадка;
	
	Попытка	ДокВСД.Автор = ГМ.ПолучитьАвтора();	Исключение 	КонецПопытки;
	//Попытка	ДокВСД.Филиал = ДокВСД.Автор.Филиал;	Исключение	КонецПопытки;			
	Попытка ДокВСД.Фирма 	= ВыбФирма; Исключение КонецПопытки;

	ВремПартии = СоздатьОбъект("ТаблицаЗначений");
	тзПартииПроизводство.Выгрузить(ВремПартии);

	Пишем = 0;
	ВремПартии.ВыбратьСтроки();
	Пока ВремПартии.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремПартии.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремПартии.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремПартии.КолвоНаСкладе >= ВремПартии.Количество Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремПартии.Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;

		разница= ВремПартии.Количество - ВремПартии.КолвоНаСкладе;

		ДокВСД.НоваяСтрока();
		
		ДокВСД.Продукция_Элемент 	= ВремПартии.Продукция_Элемент;
		ДокВСД.Количество 			= разница;
		Попытка ДокВСД.КоличествоМест 		= ВремПартии.КолвоМестСписания;Исключение КонецПопытки;					
	
		ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
		ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
	    ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
		ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
		ДокВСД.ДатаИзготовления1 = ГМ.Преобразовать_Дата_в_Строка(НачДата);
		Если КонДата>НачДата Тогда
			ДокВСД.ДатаИзготовления2 = ГМ.Преобразовать_Дата_в_Строка(КонДата);
		КонецЕсли;
		ДокВСД.ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка(Начдата+ДокВСД.Продукция_Элемент.СрокГодности);
		ДокВСД.Производитель_Страна	= ГМ.СписокКонстант.Получить("Страна");
		ДокВСД.Производитель_площадка=Отправитель_Площадка;
		Пишем = 1;
		
	КонецЦикла; 
	
	Если Пишем = 1 Тогда
		ДокВСД.Записать();
		ДокументСсылка = ДокВСД.ТекущийДокумент();
		Сообщить(" создан документ "+ДокументСсылка,"i");
		ОткрытьФорму( ДокументСсылка);
	КонецЕсли;
	
КонецПроцедуры//+

// ==================== МЕНЮ кнопок ===========================

Процедура МенюПлощадки()
	ГМ.ПриАктивизацииСтрокиТП(тпДокументов, СписокДокументов);
		
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	СписокДействийВСД.ДобавитьЗначение("ЗагрузитьПоХС","Загрузить площадки по ХС");
	СписокДействийВСД.ДобавитьЗначение("НайтиПоИмени","Найти площадки по названию");
	СписокДействийВСД.ДобавитьЗначение("СоздатьХС","Создать ХозСубъект");
	СписокДействийВСД.ДобавитьЗначение("СоздатьПлощадку","Создать Площадку");
		
	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда	
		
		Если Зн ="ЗагрузитьПоХС"  Тогда 
			ГМ.ЗагрузитьПлощадки(СписокДокументов.ХозСубъект);		
			тпДокументов.ОбновитьСтроки();
		ИначеЕсли Зн = "НайтиПоИмени" Тогда 
			Попытка				
				ГМ2.НайтиПлощадкиПоНазванию( СписокДокументов.ХозСубъект, Регион, 1);		
			Исключение
				//если нет ГМ2 - вызываем ГМ1
				ГМ.НайтиПлощадкиПоНазванию( СписокДокументов.ХозСубъект, Регион, 1);		
			КонецПопытки;
			тпДокументов.ОбновитьСтроки();
		ИначеЕсли Зн = "СоздатьХС" Тогда 
			ГМ.СоздатьХС( СписокДокументов );		
			тпДокументов.ОбновитьСтроки();
		ИначеЕсли Зн = "СоздатьПлощадку" Тогда 
			ГМ.СоздатьПлощадку( СписокДокументов );		
			тпДокументов.ОбновитьСтроки();
		КонецЕсли;
	КонецЕсли;
	
	//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"Реализации");
КонецПроцедуры

Процедура МенюВСД()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("СоздатьВСД", "Создать ВСД");
	спМеню.ДобавитьЗначение("ОтправитьВСД", "Отправить ВСД");
	спМеню.ДобавитьЗначение("АннулироватьВСД", "Аннулировать ВСД");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "СоздатьВСД" Тогда 
	//	СоздатьВСД();
		СоздатьВСД_ПоТзРаспределения();
	ИначеЕсли зн = "ОтправитьВСД" Тогда 
		ОтправитьВСД();
	ИначеЕсли зн = "АннулироватьВСД" Тогда 
		АннулироватьВСД();
	КонецЕсли;
		
КонецПроцедуры

Процедура МенюПроизводство()
	спМеню = СоздатьОбъект("СписокЗначений");
	//спМеню.ДобавитьЗначение("Очистить_Партию", "Очистить выбранную партию");
	спМеню.ДобавитьЗначение("Создать_ВСД_Производство", "Создать ВСД Производство");
	спМеню.ДобавитьЗначение("Отправить_ВСД_Производство", "Отправить ВСД Производство");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Создать_ВСД_Производство" Тогда 
		Создать_ВСД_Производство();
	//ИначеЕсли зн = "Очистить_Партию" Тогда 
	//	Очистить_Партию();
	ИначеЕсли зн = "Отправить_ВСД_Производство" Тогда 
		Отправить_ВСД_Производство();
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);        
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);

	СписокДокументов.УдалитьСтроки();
//	тзПартии.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();	
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

//=========================== ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ =============================

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = Элемент.Контрагент;
		
		Если СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель")= СтараяПлощадка Тогда 
			КонтФормы.Форма.Закрыть();    
			Возврат;
		КонецЕсли;
		
		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если (ПустоеЗначение(СтараяПлощадка)=0) И 
			(СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель")<> СтараяПлощадка) Тогда 
			Если Вопрос("Выбранная площадка закреплена за "+Элемент.Контрагент+" Скопировать площадку?",4,30)=6 Тогда 
				СпрПлощадка.Новый();
				СпрПлощадка.Наименование = Элемент.Наименование;
				СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
				СпрПлощадка.GUID = Элемент.GUID;
				СпрПлощадка.UUID = Элемент.UUID;
				СпрПлощадка.Адрес = Элемент.Адрес;
				СпрПлощадка.GuidХозСубъекта = Элемент.GuidХозСубъекта;
				СпрПлощадка.Склад = Элемент.Склад;
				СпрПлощадка.НомерПлощадки = Элемент.НомерПлощадки;
				СпрПлощадка.Записать();
				
			Иначе
				//замена контрагента в площадке			
				
				Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка,0,0)=1 Тогда
					Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
						//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
						СпрПлощадка.Контрагент = "";
						СпрПлощадка.Записать();				
					КонецЦикла;
				КонецЕсли;
				СпрПлощадка.НайтиЭлемент(Элемент);
				СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
				СпрПлощадка.Записать();
				
			КонецЕсли;	
		Иначе
			СпрПлощадка.НайтиЭлемент(Элемент);
			СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
			СпрПлощадка.Записать();			
		КонецЕсли;
		КонтФормы.Форма.Закрыть();    
		
		СписокДокументов.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());
		
		//РаскраситьСписокДокументов( );		
		ЗаполнитьСписокДокументов_Реализации();
		тпДокументов.ОбновитьСтроки();
	ИначеЕсли Элемент.Вид()="ВСД_Партия" Тогда
		//КонтФормы.Форма.Закрыть();    
		//
		//тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		//тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		//Попытка тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест); Исключение КонецПопытки;				
		//
		//РаскраситьтзНеобходимыеПартии();				

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

Процедура ПриОткрытии()

	ВыбФирма = "";
	ГМ._ПриОткрытии(Контекст);
	
	ЗаголовокНадпись();   
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Реализации");
	Форма.Закладки.ДобавитьЗначение("Партии");
	Форма.Закладки.ДобавитьЗначение("Производство");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, СписокДокументов");
	
	Партия = "";
	
	//{ Обработку можно вызвать для заполнения списка реализаций на основании маршрута
	// для этого в Маршрут в печатные формы добавьте ПечФорма_ВСД_ГрупповаяОбработка.ert
	//
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
				
		Если ПустоеЗначение(Парам)=0 тогда 
			Для Д=1 По Парам.РазмерСписка() Цикл
				Док = Парам.ПолучитьЗначение(Д);
				СписокДокументов.НоваяСтрока();
				СписокДокументов.Пометка= 1;
				//СписокДокументов.инфо = ;
				СписокДокументов.Док = Док;
				//СписокДокументов.ВСД = ;
				СписокДокументов.Колво = Док.ВесДокумента;
				Попытка СписокДокументов.КолвоМест = Док.КоличествоМестДокумента; Исключение КонецПопытки;					
				СписокДокументов.Контрагент = Док.Контрагент;
				СписокДокументов.Грузополучатель = Док.ПолучитьАтрибут( ГМ.ПолучитьКонстанту("НазваниеРеквизитаГрузополучатель") );
				СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(СписокДокументов.Контрагент);
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту(СписокДокументов.Грузополучатель);
			КонецЦикла;
			
			тпДокументов.ОбновитьСтроки();
			
			ВыделитьВсеДокументы();	
		КонецЕсли;
	Иначе
		//стандартное заполнение документов
		ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;   
	//}
	
	Если ПустоеЗначение( ГМ.ПолучитьКонстанту("ДобавлятьУпаковки") )=1 Тогда 
		
		СписокДокументов.УдалитьКолонку("КолвоМест");
		//тзНеобходимыеПартии.УдалитьКолонку("КолвоМест");
		//тзНеобходимыеПартии.УдалитьКолонку("КолвоМестСписания");
		
	КонецЕсли;
	
	флФильтрПоСкладу = ВосстановитьЗначение("ФильтрПоСкладу");

	Если Форма.МодальныйРежим() = 0 Тогда
		оПривязки.Привязка("тпДокументов", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("тпНеобходимыеПартии", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("тпПартииПроизводство", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("кнЗакрыть","T","Форма");
	КонецЕсли;
	
КонецПроцедуры

//======================================================================
Процедура ПослеСозданияФормы()

	тпДокументов = ГМ.СоздатьТабличноеПоле(Контекст, "тпДокументов", СписокДокументов,,1);
	тпНеобходимыеПартии = ГМ.СоздатьТабличноеПоле(Контекст, "тпНеобходимыеПартии", тзНеобходимыеПартии,0,1);
	тпПартииПроизводство = ГМ.СоздатьТабличноеПоле(Контекст, "тпПартииПроизводство", тзПартииПроизводство,0,1);
	
КонецПроцедуры

 // предопределенная процедура
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	 	
 	Если ЗначениеЗакладки="Реализации" Тогда
		Форма.ИспользоватьСлой("Основной, СписокДокументов");
		//СписокДокументов.УдалитьСтроки();
		Если СписокДокументов.КоличествоСтрок()=0 Тогда
			ЗаполнитьСписокДокументов_Реализации();
		КонецЕсли;		
	ИначеЕсли ЗначениеЗакладки="Партии" Тогда
		Форма.ИспользоватьСлой("Основной, Партии");
		//ЗаполнитьПартии();
	ИначеЕсли ЗначениеЗакладки="Производство" Тогда
		Форма.ИспользоватьСлой("Основной, Производство");
		//ЗаполнитьПартииПроизводства();
		тз = ГМ.ЗаполнитьПартииПроизводства( СписокДокументов );
		тзПартииПроизводство.Загрузить(тз);
		тпПартииПроизводство.ОбновитьСтроки();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;     
		
КонецПроцедуры 


//ЖД доп
Процедура ПриИзмененииПлощадки()
	//Обновить список документов 
	ГМ.СписокКонстант.Установить("Отправитель_Площадка",Отправитель_Площадка);	
	
	СписокДокументов.УдалитьСтроки();
	тзНеобходимыеПартии.УдалитьСтроки();		
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("ФильтрПоСкладу", флФильтрПоСкладу);
КонецПроцедуры // ПриЗакрытии


тпДокументов = "";
тпНеобходимыеПартии="";

НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов = СоздатьОбъект("ТаблицаЗначений");
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("Грузополучатель",,,,,20,);
СписокДокументов.НоваяКолонка("Площадка",,,,,20,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Колво","Число",10,3,"Количество",10,);
СписокДокументов.НоваяКолонка("КолвоМест","Число",10,3,"Кол-во мест",10,);
СписокДокументов.НоваяКолонка("Док",,,,"Документ",30,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,15,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,15,);

//тзПартии = СоздатьОбъект("Таблицазначений");
////тзПартии.НоваяКолонка("сЦвет",1,,,,1);
//тзПартии.НоваяКолонка("ДокРеализации",,,,,20,);
//тзПартии.НоваяКолонка("Номенклатура",,,,,20,);
//тзПартии.НоваяКолонка("Продукция_Элемент",,,,,20,);
//тзПартии.НоваяКолонка("Партия",,,,,20,);
//тзПартии.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
//тзПартии.НоваяКолонка("Количество","Число",,,,10,);
//тзПартии.НоваяКолонка("ПолеСортировки",,,,,10,);

ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

тзПартииПроизводство = СоздатьОбъект("Таблицазначений");
тзПартииПроизводство.НоваяКолонка("сЦвет",1,,,,1,);
тзПартииПроизводство.НоваяКолонка("Продукция_Элемент",,,,,20,);
тзПартииПроизводство.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
тзПартииПроизводство.НоваяКолонка("Количество","Число",,,,10,);
тзПартииПроизводство.НоваяКолонка("ВСД_Производство",,,,,3,);

тзНеобходимыеПартии = СоздатьОбъект("ТаблицаЗначений");
//тзНеобходимыеПартии.НоваяКолонка("сЦвет",1,,,,1);
тзНеобходимыеПартии.НоваяКолонка("ДокРеализации",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Номенклатура",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Продукция_Элемент",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Партия",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
тзНеобходимыеПартии.НоваяКолонка("Количество","Число",,,,10,);
тзНеобходимыеПартии.НоваяКолонка("ПолеСортировки",,,,,10,);
