// API 2.0

Перем ВыбСтрока;
Перем ВыбФирма Экспорт;
Перем оПривязки; //:Меркурий.Привязки
Перем СписокДокументов, тпДокументов;

Перем тпНеобходимыеПартии, тзНеобходимыеПартии;
Перем тпПартииПроизводство, тзПартииПроизводство;

//======================================================================
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//=========================== СЛУЖЕБНЫЕ ФУНКЦИИ =============================

Процедура ОбновитьИнф()

	Форма.Инфо.Заголовок("Документов: "+СписокДокументов.КоличествоСтрок()+", количество: "+Окр(СписокДокументов.Итог("Колво"))+" ");

	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;
	ВыбКолво = Окр(ВыбКолво);

	Форма.ИнфоВыбор.Заголовок("Выбрано "+ВыбДок+" документов, количество = "+ВыбКолво+" ");

КонецПроцедуры


Процедура ЗаголовокНадпись()

	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

Процедура Клик()
	текСтр = СписокДокументов.ТекущаяСтрока();
	текКол = СписокДокументов.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = СписокДокументов.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокДокументов.Пометка=1;
		Иначе
			СписокДокументов.Пометка=2;
		КонецЕсли;
		тзНеобходимыеПартии.УдалитьСтроки();
		//тзПартии.УдалитьСтроки();
	ИначеЕсли текКол="Площадка" Тогда
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);

		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");

		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);

		СписокОтбора = СоздатьОбъект("СписокЗначений");

		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;

		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);

	ИначеЕсли текКол="ХозСубъект" Тогда

		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
		Если ПустоеЗначение(ХозСубъект)=1 Тогда
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
	   //+
	ИначеЕсли текКол="НомерАвто" Тогда
		текЗн = СписокДокументов.ПолучитьЗначение(ТекСтр, текКол);
		ВвестиЗначение(текЗн, "","Строка",20);
		СписокДокументов.УстановитьЗначение(текСтр, текКол, текЗн);

		//+
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	КонецЕсли;

	ОбновитьИнф();
КонецПроцедуры

Процедура Клик_партии()
	текСтр = тзНеобходимыеПартии.ТекущаяСтрока();
	текКол = тзНеобходимыеПартии.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			тзНеобходимыеПартии.Пометка=1;
		Иначе
			тзНеобходимыеПартии.Пометка=2;
		КонецЕсли;
	ИначеЕсли (текКол="Продукция_Элемент") и (тзНеобходимыеПартии.ВидимостьКолонки("ДокРеализации") > 0) Тогда
		Если (ПустоеЗначение(тзНеобходимыеПартии.Продукция_Элемент) = 1) Тогда
			//Выбрать и привязать
			ВыбСтрока = текСтр;
			ТекНоменклатура = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Номенклатура");
			Продукция_элемент = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
			Если Продукция_элемент.Выбрать("Укажите элемент для установки соответствия","ФормаСписка") = 0 Тогда
				Возврат;
			КонецЕсли;
			ТВопроса = "Установить соответствие "+ТекНоменклатура+" -> "+ Продукция_элемент.ТекущийЭлемент();
			Если Вопрос(ТВопроса,"Да+Нет") = "Да" Тогда
				СпрНом = СоздатьОбъект("Справочник.Номенклатура");
				СпрНом.НайтиЭлемент(ТекНоменклатура.ТекущийЭлемент());
				СпрНом.ВСД_Продукция_Элемент = Продукция_элемент.ТекущийЭлемент();
				СпрНом.Записать();
				тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"Продукция_Элемент", Продукция_элемент.ТекущийЭлемент());
				Предупреждение("Необходимо перезаполнить партии !!!");
			КонецЕсли;
			//ОткрытьПодбор("Справочник.ВСД_Продукция_Элемент", "ФормаСписка");
		Иначе
			Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	КонецЕсли;

	ОбновитьИнф();
КонецПроцедуры


//{=========================== ПЕЧАТНЫЕ ФОРМЫ =============================

Процедура Реестр()
	ДобавлятьУпаковки = ГМ.ПолучитьКонстанту("ДобавлятьУпаковки");

	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка|Осн");
	Если ДобавлятьУпаковки = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ВесМест");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Хвост");

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл

		Таб.ВывестиСекцию("Строка|Осн");
		Если ДобавлятьУпаковки = 1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ВесМест");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Хвост");
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");
КонецПроцедуры

Процедура ПечатьСокрВСД(ВыбПринтер="")

	тз = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если (тз.Пометка<>2) или (Пустоезначение(тз.ВСД)=1) Тогда
			Продолжить;
		КонецЕсли;
		ГМ.ПечатьСокрВСД(тз.ВСД.ТекущийДокумент(), ВыбПринтер );
	КонецЦикла;

КонецПроцедуры


Процедура МенюПечать()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("Реестр", "Реестр");
	спМеню.ДобавитьЗначение("СокрВСД", "Сокращенный ВСД");
	спМеню.ДобавитьЗначение("СокрВСД_печать", "Сокращенный ВСД (сразу печать)");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Реестр" Тогда
		Реестр();
	ИначеЕсли зн = "СокрВСД" Тогда
		ПечатьСокрВСД();
	ИначеЕсли зн = "СокрВСД_печать" Тогда
		ТекущийПринтер="";
		Принтер.ПолучитьЗначение(Принтер.ТекущаяСтрока(),ТекущийПринтер);
		ПечатьСокрВСД( ТекущийПринтер );
	КонецЕсли;

КонецПроцедуры
//}

//=========================== ФУНКЦИИ КНОПОК =============================

Процедура ЗаполнитьСписокДокументов_Реализации()
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение(НачДата, "НачДата");
	СписокПараметров.ДобавитьЗначение(КонДата, "КонДата");
	СписокПараметров.ДобавитьЗначение(ВыбКонтрагент, "ВыбКонтрагент");
	СписокПараметров.ДобавитьЗначение(ВыбФирма, "ВыбФирма");
	СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,"Площадка"); //ЖД для фильтра по складу
	СписокПараметров.ДобавитьЗначение(1,"Версия2");
	Если флФильтрПоСкладу = 1 Тогда
		СписокПараметров.ДобавитьЗначение(флФильтрПоСкладу,"флФильтрПоСкладу"); //ТАС для фильтра по складу
	КонецЕсли;

	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
    Если  ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов2.ert")=1 Тогда
		//{ переопределение функции заполнения списка документов
		// интеграция переопределяется в \Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert
		//
		ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов2.ert");

		тз = "";

		Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
			тз = СписокПараметров.Получить("ТЗ");
		Иначе
			Возврат;
		КонецЕсли;
		Если ПустоеЗначение(ТЗ)=1 Тогда
			Предупреждение("Отсутствуют документы Реализации за выбранный период","!");
			СписокДокументов.УдалитьСтроки();
			Возврат;
		КонецЕсли;
		//}
	Иначе // стандартный запрос
		тз = ГМ.ПолучитьТзРеализаций(СписокПараметров);
	КонецЕсли;

	СписокДокументов.УдалитьСтроки();
	
	ТекСтрока = СписокДокументов.ТекущаяСтрока();

	Если ТипЗначенияСтр(тз) = "ТаблицаЗначений" Тогда
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.НоваяСтрока();
			СписокДокументов.Пометка = 0;
			СписокДокументов.Грузополучатель = тз.Грузополучатель;
			СписокДокументов.ВСД = тз.ДокВСД;
			СписокДокументов.Колво = тз.Количество;
			Попытка СписокДокументов.КолвоМест = тз.КоличествоМест; Исключение КонецПопытки;
			СписокДокументов.Док = тз.Док;
			СписокДокументов.Контрагент = тз.Контрагент;
	
			СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(тз.Контрагент);
			Если ПустоеЗначение(СписокДокументов.ХозСубъект)=0 Тогда
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( СписокДокументов.Грузополучатель);
			КонецЕсли;
			Попытка СписокДокументов.Склад = тз.Склад; Исключение КонецПопытки;
			Попытка СписокДокументов.Статус = тз.Статус; Исключение КонецПопытки;
			Попытка СписокДокументов.Отправлен = тз.Отправлен; Исключение КонецПопытки;
			////+
			//	если ПустоеЗначение(СписокДокументов.ВСД)=0 Тогда
			//		СписокДокументов.Статус = СокрЛП(СписокДокументов.ВСД.Статус);
			//		Если ПустоеЗначение(СписокДокументов.ВСД.ApplicationID) = 0 Тогда
			//			СписокДокументов.Отправлен = "Отправлен";
			//		Иначе
			//			СписокДокументов.Отправлен = "";
			//		КонецЕсли;
			//	КонецЕсли;
			////+			
			//СписокДокументов.НомерАвто=ГМ.ПолучитьНомерАвто(тзДок.док);
			Попытка	СписокДокументов.НомерАвто = тз.НомерАвто; Исключение КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	Попытка ТПДокументов.ОбновитьСтроки(); Исключение КонецПопытки;	
	
	//РаскраситьСписокДокументов( тзДок, ТекСтрока );
	ОбновитьИнф();
КонецПроцедуры

процедура ВыбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока()));
		СписокДокументов.УдалитьСтроки();
		тзНеобходимыеПартии.УдалитьСтроки();
		//тзПартии.УдалитьСтроки();
		ЗаполнитьСписокДокументов_Реализации();
	конецесли;
конецпроцедуры

//{ =========================== Создание документов =============================

Процедура СоздатьВСД_ПоТзРаспределения()
	Если тзНеобходимыеПартии.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица с распределенными партиями.","!");
		Возврат;
	КонецЕсли;

	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
	Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert")=1 Тогда
		Сообщить("ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert отключено.
		|Используйте модуль Меркурий_Интеграция.ert для переопределения функций","!");
		Возврат;
	КонецЕсли;
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>1 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		стр = 0;
		Если тзНеобходимыеПартии.НайтиЗначение(СписокДокументов.Док,стр,"ДокРеализации") = 0 тогда
			Сообщить("Для "+СписокДокументов.Док+" нет данных в тз Распределенных партий","i");
			Продолжить;
		КонецЕсли;

		тзНеобходимыеПартии.ПолучитьСтрокуПоНомеру(стр);

		Состояние("Создание ВСД ");
		ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
		ДокВСД.Новый();
		Попытка ДокВСД.Фирма = ВыбФирма; Исключение КонецПопытки;
		ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
		ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
		ДокВСД.Получатель_ХозСубъект = СписокДокументов.ХозСубъект;;
		ДокВСД.Получатель_Площадка = СписокДокументов.Площадка;
		ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
		
		// отфильтруем партии в тзНеобходимыеПартии по документу СписокДокументов.Док 
		тзНоваяТЧ = СоздатьОбъект("ТаблицаЗначений");
		тзИндТаблица = СоздатьОбъект("ИндексированнаяТаблица");
		тзИндТаблица.Загрузить(тзНеобходимыеПартии);
		тзИндТаблица.ДобавитьИндекс("ДокРеализации","ДокРеализации");
			
		тзИндТаблица.УстановитьФильтр( СписокДокументов.Док, СписокДокументов.Док, "ДокРеализации");
		тзИндТаблица.Выгрузить( тзНоваяТЧ, "ДокРеализации");
	
		// остальные реквизиты заполним стандартно 
		ГМ2.ЗаполнитьВСД2_Транзакция( ДокВСД, СписокДокументов.Док, тзНоваяТЧ );
		
		Если ДокВСД.КоличествоСтрок() = 0 Тогда
		    Продолжить;
		КонецЕсли;

		ДокВСД.Записать();
		ДокументСсылка = ДокВСД.ТекущийДокумент();

		СписокДокументов.ВСД = ДокументСсылка;

		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");
	КонецЦикла;
КонецПроцедуры

Процедура Создать_ВСД_Производство()
	ВремПартии = СоздатьОбъект("ТаблицаЗначений");
	тзПартииПроизводство.Выгрузить(ВремПартии);
	ВремПартии.ВыбратьСтроки();
	Пока ВремПартии.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремПартии.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремПартии.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремПартии.КолвоНаСкладе >= ВремПартии.Количество Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремПартии.Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;

		Состояние("Создание ВСД_Производство ");

		КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_Производство.ert")=1 Тогда

			//{ переопределение функции создания ВСД
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			//

			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(ВыбФирма,				"Фирма");

			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,				"Отправитель_ХозСубъект");
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,					"Отправитель_Площадка");
			СписокПараметров.ДобавитьЗначение( ВремПартии.Количество,			"Колво");
			СписокПараметров.ДобавитьЗначение( ВремПартии.КолвоНаСкладе,			"КолвоВНаличии");
			СписокПараметров.ДобавитьЗначение( ВремПартии.Продукция_Элемент,	"Продукция_Элемент");
			//
			//СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,		"ВСД_Экспертиза");
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,	"ВСД_ОсобыеОтметки");

			СписокПараметров.ДобавитьЗначение( НачДата,				"НачДата");
			СписокПараметров.ДобавитьЗначение( КонДата,				"КонДата");

			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_Производство.ert");

			ДокументСсылка = "";

			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда

				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");

			КонецЕсли;

			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}

		Иначе

			// ТЕСТ
			Если ВремПартии.КолвоНаСкладе  >= ВремПартии.Количество Тогда
			    Продолжить; //
			КонецЕсли;

			ДокВСД = СоздатьОбъект("Документ.ВСД2_Производство");
			ДокВСД.Новый();
			//ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
			ДокВСД.ДатаДок = НачДата;
			ДокВСД.Производитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Производитель_площадка = Отправитель_Площадка;

			Автор = ГМ.ПолучитьАвтора();
			Попытка	ДокВСД.Автор 	= Автор;	Исключение 	КонецПопытки;
			Попытка	ДокВСД.Филиал 	= Автор.Филиал;	Исключение	КонецПопытки;
			Попытка ДокВСД.Фирма 	= ВыбФирма; Исключение КонецПопытки;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
			ДокВСД.cargoInspected  	= 1;
			ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");
		
			ДокВСД.НоваяСтрока();

			ДокВСД.Продукция_Элемент 	= ВремПартии.Продукция_Элемент;
			ДокВСД.Количество 			= ВремПартии.Количество - ВремПартии.КолвоНаСкладе; 
			ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
			ДокВСД.ВидДвижения 			= 1;
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;


			ДокВСД.ЗавершитьОперацию = 1;
			ДокВСД.ДатаИзготовления1 = ГМ.Преобразовать_Дата_в_Строка(НачДата);
			Если КонДата>НачДата Тогда
				ДокВСД.ДатаИзготовления2 = ГМ.Преобразовать_Дата_в_Строка(КонДата);
			КонецЕсли;
			ДокВСД.ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка(НачДата+ДокВСД.Продукция_Элемент.СрокГодности);


			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;

		ВремПартии.ВСД_Производство = ДокументСсылка;

		Сообщить(" создан документ "+ВремПартии.ВСД_Производство,"i");
	КонецЦикла;
	ВремПартии.Выгрузить( тзПартииПроизводство );
	тпПартииПроизводство.ОбновитьСтроки();
КонецПроцедуры

Функция СоздатьВСДПоТзПартий()

	ХС = Поставщик_ХозСубъект;//ГМ.СписокКонстант.Получить("Поставщик_ХозСубъект");
	ВыбПлощадка  = Поставщик_Площадка;//ГМ.СписокКонстант.Получить("Поставщик_Площадка");

	Если ПустоеЗначение(ХС) = 1 Тогда
		СпрВрем = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
		//	 Выберем руками
		Если СпрВрем.Выбрать("Выберите ХС отправителя",) = 0 Тогда
	  	  Сообщить("Невозможно создать документ без ХС");
			Возврат "";
		КонецЕсли;
		ХС = СпрВрем.ТекущийЭлемент();
	КонецЕсли;

	Если ПустоеЗначение(ВыбПлощадка) = 1 Тогда
		СпрВрем = СоздатьОбъект("Справочник.ВСД_Площадка");
		//	 Выберем руками
		Если СпрВрем.Выбрать("Выберите Площадку Отправителя",) = 0 Тогда
	  	  Сообщить("Невозможно создать документ без Площадки");
			Возврат "";
		КонецЕсли;
		ВыбПлощадка = СпрВрем.ТекущийЭлемент();
	КонецЕсли;

		КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
		// создание кастомного ВСД
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакцияПоТзПартий.ert")=1 Тогда

			//{ переопределение функции создания ВСД
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_транзакция.ert
			//
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(ВыбФирма,						"Фирма");
			СписокПараметров.ДобавитьЗначение(ХС,							"Отправитель_ХозСубъект");
			СписокПараметров.ДобавитьЗначение(ВыбПлощадка,					"Отправитель_Площадка");
			СписокПараметров.ДобавитьЗначение( Отправитель_ХозСубъект,		"Получатель_ХозСубъект");
			СписокПараметров.ДобавитьЗначение( Отправитель_Площадка,		"Получатель_Площадка");
			СписокПараметров.ДобавитьЗначение( СписокДокументов.Колво,		"Колво");
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,				"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,			"ВСД_ОсобыеОтметки");
			//СписокПараметров.ДобавитьЗначение( тзПартии,				"тзПартии");

			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакцияПоТзПартий.ert");
			ДокументСсылка = "";

			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
			КонецЕсли;

			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				Возврат "";
			КонецЕсли;
			// }
		Иначе
			// стандартное создание ВСД
			Состояние("Заполнение ВСД2_Транзакция ");

			ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
			ДокВСД.Новый();
			
			//1. заполняем реквизиты 
			ДокВСД.Отправитель_ХозСубъект =  ХС;
			ДокВСД.Отправитель_Площадка = ВыбПлощадка;
			ДокВСД.Получатель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Получатель_Площадка = Отправитель_Площадка;
			ДокВСД.Перевозчик_ХозСубъект = ХС;

			//остальные реквизиты заполним по умолчанию
			ГМ2.ЗаполнитьВСД2_Транзакция( ДокВСД, СписокДокументов.Док);
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();

		КонецЕсли;

		Сообщить("Создан документ " + ДокументСсылка,"i");

		Возврат ДокументСсылка;
КонецФункции

Процедура Создать_Инвентаризацию()
	Состояние("Создание ВСД_Инвентаризация ");
	ДокВСД = СоздатьОбъект("Документ.ВСД2_Инвентаризация");
	ДокВСД.Новый();
	ДокВСД.ДатаДок = НачДата;
	ДокВСД.Фирма=ВыбФирма;
	ДокВСД.Владелец_ХозСубъект = Отправитель_ХозСубъект;
	ДокВСД.Владелец_площадка = Отправитель_Площадка;
	ДокВСД.ПричинаРасхождения="Отсутсвие партий";
	ДокВСД.ОписаниеНесоответствия="Отсутсвие партий";
	Попытка	ДокВСД.Автор = ГМ.ПолучитьАвтора();;	Исключение 	КонецПопытки;
	Попытка	ДокВСД.Филиал = ДокВСД.Автор .Филиал;	Исключение	КонецПопытки;
	Попытка ДокВСД.Фирма = ВыбФирма; Исключение КонецПопытки;

	ВремтзПартии = СоздатьОбъект("ТаблицаЗначений");
	тзПартииПроизводство.Выгрузить(ВремтзПартии);
	ВремтзПартии.ВыбратьСтроки();
	Пока ВремтзПартии.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремтзПартии.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремтзПартии.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремтзПартии.КолвоНаСкладе >= ВремтзПартии.Количество Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремтзПартии.Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;


		разница= ВремтзПартии.Количество - ВремтзПартии.КолвоНаСкладе;
		ДокВСД.НоваяСтрока();

		ДокВСД.Продукция_Элемент 	= ВремтзПартии.Продукция_Элемент;
		ДокВСД.Количество 			= разница;//тзПартии.Количество;
		//Попытка ДокВСД.КоличествоМест 		= тзПартии.КолвоМестСписания;Исключение КонецПопытки;

		ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
		ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
	    ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
		ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
		ДокВСД.ДатаИзготовления1 = ГМ.Преобразовать_Дата_в_Строка(НачДата);
		Если КонДата>НачДата Тогда
			ДокВСД.ДатаИзготовления2 = ГМ.Преобразовать_Дата_в_Строка(КонДата);
		КонецЕсли;
		ДокВСД.ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка(НачДата+ДокВСД.Продукция_Элемент.СрокГодности);
		ДокВСД.Производитель_Страна	=гм.СписокКонстант.Получить("Страна");
		ДокВСД.Производитель_площадка=Отправитель_Площадка;
		ДокВСД.Записать();
		ДокументСсылка = ДокВСД.ТекущийДокумент();

	КонецЦикла;
	Сообщить(" создан документ "+ДокументСсылка,"i");
	ОткрытьФорму( ДокументСсылка);
КонецПроцедуры
	

Процедура СоздатьПродукцию()
	//+
	//Если Метаданные.Справочник("Номенклатура").Реквизит("ПодконтроленМеркурию").Выбран() = 0 Тогда
	//	Сообщить("Отсутствует реквизит ПодконтроленМеркурию в справочнике Номенклатура. Выполнение невозможно");
	//	Возврат;
	//КонецЕсли;
	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");
		Возврат;
	КонецЕсли;
	//Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
	//	Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");
	//	Возврат;
	//КонецЕсли;
	//+
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Номенклатура");

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>1 Тогда
			Продолжить;
		КонецЕсли;

		//	тз = ГМ.СвернутьТч();
		до=СписокДокументов.Док;
		до.ВыбратьСтроки();
		Пока до.ПолучитьСтроку() = 1 Цикл

			//Если (до.Номенклатура.ПодконтроленМеркурию.Получить(ТекущаяДата()) = 1) И (ПустоеЗначение(до.Номенклатура.ВСД_Продукция_Элемент) = 1) Тогда
			Если (ПустоеЗначение(до.Номенклатура.ВСД_Продукция_Элемент) = 1) Тогда
				ТЗ.НоваяСтрока();
				ТЗ.Номенклатура = до.Номенклатура;
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;

	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
	Если ТЗ.КоличествоСтрок() > 0 Тогда
		ОбработкаСоздатьПродукция_Элемент = КаталогОбработки+"ВСД_СоздатьПродукция_Элемент.ert";
		Если ФС.СуществуетФайл(ОбработкаСоздатьПродукция_Элемент) = 0 Тогда
			Сигнал();
			Предупреждение("Не найдена обработка " + ОбработкаСоздатьПродукция_Элемент, 6 );
		Иначе
			Конт="";
			ОткрытьФормуМодально("Отчет",ТЗ,ОбработкаСоздатьПродукция_Элемент);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

//}

Процедура ОтменитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=0;
	КонецЦикла;

	ТПДокументов.ОбновитьСтроки();
	тзНеобходимыеПартии.УдалитьСтроки();

	ОбновитьИнф();
КонецПроцедуры

Процедура ВыделитьВсеДокументы()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("ВыделитьВсе", "Выделить все документы");
	спМеню.ДобавитьЗначение("ВыделитьСоздать", "Выделить пустые ВСД");
	спМеню.ДобавитьЗначение("ВыделитьНеОтправленные", "Выделить НЕ ОТПРАВЛЕННЫЕ");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "ВыделитьВсе" Тогда
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			СписокДокументов.Пометка=1;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьСоздать" Тогда
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.сЦвет = "" Тогда
				СписокДокументов.Пометка=1;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьНеОтправленные" Тогда
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если ( ПустоеЗначение(СписокДокументов.ВСД) = 0 ) Тогда
				Если ( СокрЛП(СписокДокументов.ВСД.Статус) <> "COMPLETED" ) Тогда
					СписокДокументов.Пометка=1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ТПДокументов.ОбновитьСтроки();
	тзНеобходимыеПартии.УдалитьСтроки();

	ОбновитьИнф();
КонецПроцедуры


Процедура ЗаполнитьПартии()
	
	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Основной, Партии");

	//ВывестиТЗПартийВариант2();
	тз = ГМ.РаспределитьДокументыПоПартиям( СписокДокументов, ДетальнаяИнформация );
	тзНеобходимыеПартии.Загрузить(тз);
	тпНеобходимыеПартии.ОбновитьСтроки();
	
КонецПроцедуры


Процедура Клик_ПартииПроизводства()
	текСтр = тзПартииПроизводство.ТекущаяСтрока();
	текКол = тзПартииПроизводство.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = тзПартииПроизводство.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 1 Тогда
			тзПартииПроизводство.Пометка=0;
		Иначе
			тзПартииПроизводство.Пометка=1;
		КонецЕсли;
	ИначеЕсли (текКол="Продукция_Элемент") Тогда
		Если (ПустоеЗначение( тзПартииПроизводство.Продукция_Элемент) = 1) Тогда
		//	//Выбрать и привязать
		//	ВыбСтрока = текСтр;
		//	ТекНоменклатура = тзПартииПроизводство.ПолучитьЗначение(ТекСтр,"Номенклатура");
		//	Продукция_элемент = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
		//	Если Продукция_элемент.Выбрать("Укажите элемент для установки соответствия","ФормаСписка") = 0 Тогда
		//		Возврат;
		//	КонецЕсли;
		//	ТВопроса = "Установить соответствие "+ТекНоменклатура+" -> "+ Продукция_элемент.ТекущийЭлемент();
		//	Если Вопрос(ТВопроса,"Да+Нет") = "Да" Тогда
		//		СпрНом = СоздатьОбъект("Справочник.Номенклатура");
		//		СпрНом.НайтиЭлемент(ТекНоменклатура.ТекущийЭлемент());
		//		СпрНом.ВСД_Продукция_Элемент = Продукция_элемент.ТекущийЭлемент();
		//		СпрНом.Записать();
		//		тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"ВСД_Продукция_Элемент", Продукция_элемент.ТекущийЭлемент());
		//		Предупреждение("Необходимо перезаполнить партии !!!");
		//	КонецЕсли;
		Иначе
			Эл = тзПартииПроизводство.ПолучитьЗначение(текСтр, текКол);
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзПартииПроизводство.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	КонецЕсли;

	ОбновитьИнф();
КонецПроцедуры

Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;

	Возврат 1;
КонецФункции

Процедура ОтправитьВСД()

	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 1 Тогда
			Если ПроверитьВСД(СписокДокументов.ВСД)=1 Тогда
				СписокВСД.ДобавитьЗначение(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ2.ОтправитьВсе_ВСД2_Транзакция(СписокВСД, НачДата, КонДата);

	ОбновитьИнф();
КонецПроцедуры

Процедура ПолучитьПартии()
	ЗаписьЖурналаРегистрации("Ветис получение партий ");


	// 2.0
	//Состояние("Ветис получение партий 2.0")
	//ГМ2.ПолучитьПартии2(Отправитель_Площадка);

	// 2.1
	ПартииНачало = НачДата-30;
	ПартииОкончание = КонДата;
	Ненулевые = 1;
	ВвестиДату(ПартииНачало,"Загрузить партии, поступившие с :");
	Если ПустоеЗначение(ПартииНачало) = 1 Тогда
		//Все хотят
		ПартииНачало = "";
		ПартииОкончание = "";
		Ненулевые = 0;
		Сообщить("Ветис получение всех партий по площадке "+Отправитель_Площадка);
	Иначе
		Сообщить("Ветис получение ненулевых партий по площадке "+СокрЛП(Отправитель_Площадка.Наименование)+" за период "+ПериодСтр(ПартииНачало,ПартииОкончание));
	КонецЕсли;
	Состояние("Ветис получение партий 2.1");
	ГМ2.ПолучитьПартии2(Отправитель_Площадка, 0, 1,ПартииНачало, ПартииОкончание, Ненулевые);

КонецПроцедуры

Процедура ЗагрузитьПлощадки()

	ГМ.ПриАктивизацииСтрокиТП(тпДокументов, СписокДокументов);
	
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	СписокДействийВСД.ДобавитьЗначение("ЗагрузитьПоХС","Загрузить площадки по ХС");
	СписокДействийВСД.ДобавитьЗначение("НайтиПоИмени","Найти площадки по названию");
	СписокДействийВСД.ДобавитьЗначение("СоздатьХС","Создать ХозСубъект");
	СписокДействийВСД.ДобавитьЗначение("СоздатьПлощадку","Создать Площадку");

	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда

		Если Зн ="ЗагрузитьПоХС"  Тогда
			ГМ.ЗагрузитьПлощадки(СписокДокументов.ХозСубъект);
			//РаскраситьСписокДокументов();
		ИначеЕсли Зн = "НайтиПоИмени" Тогда
			ГМ2.НайтиПлощадкиПоНазванию( СписокДокументов.ХозСубъект, Регион, 1);
			//РаскраситьСписокДокументов();
		ИначеЕсли Зн = "СоздатьХС" Тогда
			ГМ.СоздатьХС( СписокДокументов );
			//РаскраситьСписокДокументов();
		ИначеЕсли Зн = "СоздатьПлощадку" Тогда
			ГМ.СоздатьПлощадку( СписокДокументов );
			//РаскраситьСписокДокументов();
		КонецЕсли;
		тпДокументов.ОбновитьСтроки();
	КонецЕсли;

	//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"Реализации");
КонецПроцедуры


Функция ПроверитьВСД_Производство(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	//Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
	//	Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
	//	Возврат 0;
	//КонецЕсли;

	Возврат 1;
КонецФункции


Процедура Отправить_ВСД_Производство()
	СписокВСД = СоздатьОбъект("СписокЗначений");
	тзПартииПроизводство.ВыбратьСтроки();
	Пока тзПартииПроизводство.ПолучитьСтроку() = 1 Цикл
		Если ПроверитьВСД_Производство( тзПартииПроизводство.ВСД_Производство)=1 Тогда
			СписокВСД.ДобавитьЗначение( тзПартииПроизводство.ВСД_Производство);
		КонецЕсли;
	КонецЦикла;

	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД Производство");

	ГМ2.ОтправитьВсе_ВСД2_Производство(СписокВСД, НачДата, КонДата);
    //ВывестиТзПартийВариант2();

КонецПроцедуры

Процедура Очистить_Партию()
	тзПартииПроизводство.ВСД_Производство="";
КонецПроцедуры

Процедура ПриИзмененииПлощадки()
	ГМ.СписокКонстант.Установить("Отправитель_Площадка",Отправитель_Площадка);
	//Обновить список документов
	СписокДокументов.УдалитьСтроки();
	//тзПартии.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

Процедура АннулироватьВСД()
	Если Вопрос("Вы уверены, что хотите аннулировать выбранные ВСД?",4,30)=6 Тогда
		Сообщить("Выполняется аннулирование ВСД");

		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка = 1 Тогда
				ГМ2.Аннулировать_ВСД2_транзакция(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЦикла;

		ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьУсловияПеревозки()
		Состояние("Получаем условия перевозки");

		ДокОб = создатьОбъект("Документ");

		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка = 1 Тогда
				Рез = ГМ2.ПроверитьВозможностьПеремещения(СписокДокументов.ВСД);
				Если ТипЗначенияСтр(Рез) = "ТаблицаЗначений" Тогда
					ДокОб.НайтиДокумент( СписокДокументов.ВСД );
					Если Рез.КоличествоСтрок() = 0 Тогда
						ДокОб.ИмяФайлаРегионализация ="";
						Сообщить("Перевозка разрешена без условий");
					Иначе
						ДокОб.ИмяФайлаРегионализация = ГМ2.ПолучитьИмяФайлаРегионализация( СписокДокументов.ВСД );
						ЗначениеВФайл(ДокОб.ИмяФайлаРегионализация, Рез);
					КонецЕсли;
					ДокОб.Записать();
				Иначе
					Сообщить("Перевозка разрешена без условий");
				КонецЕсли;

			КонецЕсли;
		КонецЦикла;

		ЗаполнитьСписокДокументов_Реализации();
		Состояние("");
КонецПроцедуры

Процедура ПолучитьОтветВетис()
		Сообщить("Выполняется запрос ответов от ВЕТИС на отправленные документы без ответа");

		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Попытка
				Если (СписокДокументов.Отправлен = "Отправлен") и (НЕ(СписокДокументов.Статус = "COMPLETED") или НЕ(СписокДокументов.Статус = "REJECTED")) Тогда
					ГМ2.ПолучитьРезультат_ВСД_2(СписокДокументов.ВСД.applicationID, СписокДокументов.ВСД.ТекущийДокумент());
				КонецЕсли;
			Исключение
			    Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;

		ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

//{ ==================== МЕНЮ кнопок ===========================

Процедура МенюВСД()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("СоздатьВСД2", "Создать ВСД");
	//спМеню.ДобавитьЗначение("СоздатьВСД", "Создать ВСД");
	спМеню.ДобавитьЗначение("ОтправитьВСД", "Отправить ВСД");
	спМеню.ДобавитьЗначение("АннулироватьВСД", "Аннулировать ВСД");
	спМеню.ДобавитьЗначение("ПолучитьУсловияПеревозки", "Получить условия перевозки");
	спМеню.ДобавитьЗначение("ПолучитьОтветВетис", "Получить ответ ВЕТИС");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	//Если зн = "СоздатьВСД" Тогда
	//	СоздатьВСД();
	Если зн = "СоздатьВСД2" Тогда
		СоздатьВСД_ПоТзРаспределения();
	ИначеЕсли зн = "ОтправитьВСД" Тогда
		ОтправитьВСД();
	ИначеЕсли зн = "АннулироватьВСД" Тогда
		АннулироватьВСД();
	ИначеЕсли зн = "ПолучитьУсловияПеревозки" Тогда
		ПолучитьУсловияПеревозки();
	ИначеЕсли зн = "ПолучитьОтветВетис" Тогда
		ПолучитьОтветВетис();
	КонецЕсли;

КонецПроцедуры

Процедура МенюПроизводство()
	спМеню = СоздатьОбъект("СписокЗначений");
//	спМеню.ДобавитьЗначение("Очистить_Партию", "Очистить выбранную партию");
	спМеню.ДобавитьЗначение("Создать_ВСД_Производство", "Создать ВСД Производство");
	спМеню.ДобавитьЗначение("Отправить_ВСД_Производство", "Отправить ВСД Производство");
	спМеню.ДобавитьЗначение("Создать_Продукцию", "Создать Продукцию");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Очистить_Партию" Тогда
		Очистить_Партию();
	ИначеЕсли зн = "Создать_ВСД_Производство" Тогда
		Создать_ВСД_Производство();
	ИначеЕсли зн = "Отправить_ВСД_Производство" Тогда
		Отправить_ВСД_Производство();
	ИначеЕсли зн = "Создать_Продукцию" Тогда
		СоздатьПродукцию();
	КонецЕсли;

КонецПроцедуры

//}


Процедура ПереместитьВХС()
	// Переместить с 1 ХС на другой и Погасить
	ТВопроса = "Создать ВСД2_Транзакцию по списку партий
	|на перемещение ?";
	Если Вопрос(ТВопроса,"Да+Нет")="Нет" Тогда
	    Возврат;
	КонецЕсли;

	ДокВСД = СоздатьВСДПоТзПартий();

	Если ПустоеЗначение(ДокВСД) = 1 Тогда
	    Сообщить("Документ ВСД2_Транзакция не удалось создать");
		Возврат;
	КонецЕсли;

	ОткрытьФорму(ДокВСД);
	Сообщить("После гашения нажмите Выбрать Партии");
	Возврат;

	// Ниже Удалить после тестов
	ТВопроса = "Отправить и принять "+ДокВСД+" ?";
	Если Вопрос(ТВопроса,"Да+Нет")="Нет" Тогда
	    Возврат;
	КонецЕсли;

	рез = ГМ2.Отправить_ВСД2_Транзакция(ДокВСД);

	ДокОбъект = СоздатьОбъект("Документ");
	ДокОбъект.Найтидокумент(ДокВСД);

	Если НЕ(СокрЛП(ДокОбъект.Статус) = "COMPLETED") Тогда
		Сообщить("Неудача при отправке "+ДокОбъект,"!!");
		Возврат;
	КонецЕсли;
	ИмяОтвета = ГМ.Компонента.LogFilename;
   	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
   	Парам = СоздатьОбъект("СписокЗначений");
   	Парам.Установить("ФайлОтвета",ИмяОтвета);
   	Парам.Установить("Отправитель_ХозСубъект",ДокОбъект.Получатель_Хозсубъект);
   	Парам.Установить("Отправитель_Площадка",ДокОбъект.Получатель_Площадка);
   	Парам.Установить("Фирма",ГМ.ПолучитьФирмуПоХС(ДокОбъект.Получатель_Хозсубъект));
  	ОткрытьФормуМодально("Отчет", Парам, КаталогОбработки+"Меркурий_Гашение_ВСД2.ert");
	ЗаполнитьПартии();
	//Сообщить(ИмяОтвета);
КонецПроцедуры

Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
   	//КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
	СписокДокументов.УдалитьСтроки();

	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ


///******************************** ADirks 25.06.2018 ************
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	оПривязки.ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры
///******************************** ADirks 25.06.2018 ************

///******************************** ADirks 25.06.2018 ************
Процедура Привязки_Инит()
	//оПривязки = СоздатьОбъект("Меркурий.Привязки");
	//оПривязки.Инит(Контекст);

	//оПривязки.Добавить("кнОК, кнЗаписать, кнЗакрыть", "ВН", "Форма");
	//оПривязки.Добавить("текстВерсия", "ВН", "Форма");

	оПривязки.УстановитьФорму(Форма);
	оПривязки.Привязка("ТПДокументов", "H", "Форма", "W", "Форма");
	оПривязки.Привязка("тпНеобходимыеПартии", "H", "Форма", "W", "Форма");
	оПривязки.Привязка("тпПартииПроизводство", "H", "Форма", "W", "Форма");

КонецПроцедуры
///******************************** ADirks 25.06.2018 ************

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	оПривязки.ПослеОткрытия();
КонецПроцедуры

//=========================== ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ =============================

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = Элемент.Контрагент;
		Если СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель")= СтараяПлощадка Тогда
			КонтФормы.Форма.Закрыть();
			Возврат;
		КонецЕсли;

		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если (ПустоеЗначение(СтараяПлощадка)=0) И
			(СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель")<> СтараяПлощадка) Тогда
			Если Вопрос("Выбранная площадка закреплена за "+Элемент.Контрагент+" Скопировать площадку?",4,30)=6 Тогда
				СпрПлощадка.Новый();
				СпрПлощадка.Наименование = Элемент.Наименование;
				СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
				СпрПлощадка.GUID = Элемент.GUID;
				СпрПлощадка.UUID = Элемент.UUID;
				СпрПлощадка.Адрес = Элемент.Адрес;
				СпрПлощадка.GuidХозСубъекта = Элемент.GuidХозСубъекта;
				СпрПлощадка.Склад = Элемент.Склад;
				СпрПлощадка.НомерПлощадки = Элемент.НомерПлощадки;
				СпрПлощадка.Записать();

			Иначе
				//замена контрагента в площадке

				Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка,0,0)=1 Тогда
					Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
						//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
						СпрПлощадка.Контрагент = "";
						СпрПлощадка.Записать();
					КонецЦикла;
				КонецЕсли;
				СпрПлощадка.НайтиЭлемент(Элемент);
				СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
				СпрПлощадка.Записать();

			КонецЕсли;
		Иначе
			СпрПлощадка.НайтиЭлемент(Элемент);
			СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
			СпрПлощадка.Записать();
		КонецЕсли;
		КонтФормы.Форма.Закрыть();

		СписокДокументов.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());

		//РаскраситьСписокДокументов( );
		ЗаполнитьСписокДокументов_Реализации();
	ИначеЕсли Элемент.Вид()="ВСД_Партия" Тогда
//		КонтФормы.Форма.Закрыть();
//
//		тзПартии.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
//		тзПартии.УстановитьЗначение(ВыбСтрока,"КолвоНаСкладе", Элемент.Количество);
//		Попытка тзПартии.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест); Исключение КонецПопытки;
	ИначеЕсли Элемент.Вид()="Продукция_Элемент" Тогда
			Предупреждение("Выбран "+Элемент);
		//КонтФормы.Форма.Закрыть();

		//тзПартии.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		//тзПартии.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		//Попытка тзПартии.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест); Исключение КонецПопытки;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПринтеры()
	Перем Стр;
	//очистим список
	Принтер.УдалитьВсе();

	тзПринтеры = СоздатьОбъект("ТаблицаЗначений");
	тзПринтеры.НоваяКолонка("Имя");
	тзПринтеры.НоваяКолонка("Порт");

	//заполним список доступных принтеров
	Состояние("Заполняем список принтеров...");
    wshNetwork    = createObject("WScript.Network");
	oPrinters        = wshNetwork.EnumPrinterConnections();
	i = 0;
	Пока i < oPrinters.Count() - 1 Цикл
		//Если Найти(oPrinters.Item(i+1),"\\tsclient") > 0 Тогда
		//	i = i + 2;
		//	Продолжить;
		//КонецЕсли;
		тзПринтеры.НоваяСтрока();
		тзПринтеры.Имя = oPrinters.Item(i+1);
		тзПринтеры.Порт = oPrinters.Item(i);

		Принтер.ДобавитьЗначение(oPrinters.Item(i+1),oPrinters.Item(i+1));
		i = i + 2;
	КонецЦикла;

	//Принтер.ДобавитьЗначение("\\TSCLIENT\E","\\TSCLIENT\E"); // печать на принтере терминала по умолчанию

    //    Принтер по умолчанию
    wshPrint = CreateObject("WScript.Shell");
    Prn = СокрЛП(wshPrint.RegRead("HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Device")); //принтер по умолчанию, но вместе с портом
	Сч =  1;
	Пока Сч <= Принтер.РазмерСписка() Цикл
		Принтер.ПолучитьЗначение(Сч,Стр);
		Если Найти(Prn,Стр) > 0 Тогда
			//Это и есть принтер по умолчанию
			Прервать;
		КонецЕсли;
		Сч = Сч + 1;
		Стр = "";
	КонецЦикла;
	Принтер.ТекущаяСтрока(Сч);
	Форма.Принтер.Доступность(1);

КонецПроцедуры // ЗаполнитьПринтеры()

Процедура ПриОткрытии()
	Если Метаданные.Справочник("Номенклатура").Реквизит("ПодконтроленМеркурию").Выбран() = 0 Тогда
		Форма.кнСоздатьПродукцию.Доступность(0);
	КонецЕсли;

	ВыбФирма = "";
	ГМ._ПриОткрытии(Контекст);

	флФильтрПоСкладу = ВосстановитьЗначение("ФильтрПоСкладу");

	ЗаголовокНадпись();

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Реализации");
	Форма.Закладки.ДобавитьЗначение("Партии");
	Форма.Закладки.ДобавитьЗначение("Производство");
	Форма.Закладки.ДобавитьЗначение("Параметры");

	Форма.ИспользоватьСлой("Основной, СписокДокументов, Реализации");

	Партия = "";

	// Обработку можно вызвать для заполнения списка реализаций на основании маршрута
	// для этого в Маршрут в печатные формы добавьте ПечФорма_ВСД_ГрупповаяОбработка.ert
	//
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда

		Если ПустоеЗначение(Парам)=0 тогда
			Для Д=1 По Парам.РазмерСписка() Цикл
				Док = Парам.ПолучитьЗначение(Д);
				СписокДокументов.НоваяСтрока();
				СписокДокументов.Пометка= 0;
				//СписокДокументов.инфо = ;
				СписокДокументов.Док = Док;
				//СписокДокументов.ВСД = ;
				СписокДокументов.Колво = Док.ВесДокумента;
				//СписокДокументов.Вес = Док.ВесДокумента;
				Попытка СписокДокументов.КолвоМест = Док.КоличествоМестДокумента; Исключение КонецПопытки;
				СписокДокументов.Контрагент = Док.Контрагент;
				СписокДокументов.Грузополучатель = Док.ПолучитьАтрибут( ГМ.ПолучитьКонстанту("НазваниеРеквизитаГрузополучатель") );
				СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(СписокДокументов.Контрагент);
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту(СписокДокументов.Грузополучатель);
			КонецЦикла;

			//РаскраситьСписокДокументов();

			ВыделитьВсеДокументы();
		КонецЕсли;
	Иначе
		//стандартное заполнение документов
		ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;
	//

	Если ПустоеЗначение( ГМ.ПолучитьКонстанту("ДобавлятьУпаковки") )=1 Тогда

		СписокДокументов.УдалитьКолонку("КолвоМест");

	КонецЕсли;

	ГМ.СписокФирм.Выгрузить(СписокФирм);
	Если СписокФирм.РазмерСписка() = 0 Тогда
		Предупреждение("Нет сохраненных настроек, обмен невозможен!");
		Возврат; СтатусВозврата(0);
	Иначе
		Поз = СписокФирм.НайтиЗначение(ВыбФирма);
		Если Поз <> 0 Тогда
			СписокФирм.ТекущаяСтрока(Поз);
		КонецЕсли;
		ПриИзмененииФирмы();
	КонецЕсли;

	ЗаполнитьПринтеры();

	Привязки_Инит(); //ADirks 25.06.2018
КонецПроцедуры

 // предопределенная процедура
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)

 	Если ЗначениеЗакладки="Реализации" Тогда
		Форма.ИспользоватьСлой("Основной, СписокДокументов, Реализации");
		//СписокДокументов.УдалитьСтроки();
		Если СписокДокументов.КоличествоСтрок()=0 Тогда
			ЗаполнитьСписокДокументов_Реализации();
		КонецЕсли;
	ИначеЕсли ЗначениеЗакладки="Партии" Тогда
		Форма.ИспользоватьСлой("Основной, Партии");
		//ЗаполнитьПартии();
	ИначеЕсли ЗначениеЗакладки="Производство" Тогда
		Форма.ИспользоватьСлой("Основной, Производство");
		//ЗаполнитьПартииПроизводства();
		тз = ГМ.ЗаполнитьПартииПроизводства( СписокДокументов );
		тзПартииПроизводство.Загрузить( тз );
		тпПартииПроизводство.ОбновитьСтроки();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("ФильтрПоСкладу", флФильтрПоСкладу);
КонецПроцедуры // ПриЗакрытии

//======================================================================
Процедура ПослеСозданияФормы()

	тпДокументов = ГМ.СоздатьТабличноеПоле(Контекст, "ТПДокументов", СписокДокументов,,1);
	тпНеобходимыеПартии = ГМ.СоздатьТабличноеПоле(Контекст, "тпНеобходимыеПартии", тзНеобходимыеПартии,0,1);
	тпПартииПроизводство = ГМ.СоздатьТабличноеПоле(Контекст, "тпПартииПроизводство", тзПартииПроизводство,0,1);
	
КонецПроцедуры

//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕНТОВ =================
//{
Процедура тпДокументовПриАктивизацииСтроки(ТабличноеПоле)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, СписокДокументов);
КонецПроцедуры

Процедура тпДокументовВыбор()
	ГМ.ПриАктивизацииСтрокиТП(ТПДокументов, СписокДокументов);
	ГМ.ПриАктивизацииКолонкиТП(ТПДокументов, СписокДокументов);
	
	текСтр=СписокДокументов.ТекущаяСтрока();
	Если текСтр=0 Тогда Возврат; КонецЕсли;
	текКол = СписокДокументов.ТекущаяКолонка();
	
	Если текКол="Площадка" Тогда 
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;
		//ЖД - нет по ХС площадок - открывались все
		Если СписокОтбора.размерСписка() = 0 Тогда
			СписокОтбора.ДобавитьЗначение("***");
			//или написать что нет площадок и выйти отсюда 
		КонецЕсли;
		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
КонецПроцедуры

Процедура тпДокументовПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
		
		Если (ПустоеЗначение(ДанныеСтроки.ВСД)=0) Тогда
			Если СокрЛП(ДанныеСтроки.ВСД.Статус)="COMPLETED" Тогда
				ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(ДанныеСтроки.ХозСубъект.GUID)=1 Тогда 			
			ОформлениеСтроки.ЦветФона = 255;	// Красный
//			ОформлениеСтроки.ЦветФона = 8421631;	// Красный
		ИначеЕсли (ПустоеЗначение(ДанныеСтроки.Площадка)=0) Тогда
			Если (ПустоеЗначение(ДанныеСтроки.Площадка.GUID)=0)  Тогда 
				//ДанныеСтроки.сЦвет = "";							
			КонецЕсли;
		Иначе			
			ОформлениеСтроки.ЦветФона = 8454143;	// Желтый
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура тпДокументовПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, СписокДокументов);
	СписокДокументов.Пометка = ?(СписокДокументов.Пометка = 1,0,1);
	ТабличноеПоле.ОбновитьСтроки();
	ОбновитьИнф();

	тзНеобходимыеПартии.УдалитьСтроки();
	//тзПартии.УдалитьСтроки();
КонецПроцедуры

//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕНТОВ =================

Процедура тпНеобходимыеПартииПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		//ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
		
		Если (ДанныеСтроки.КолвоНаСкладе > 0 ) и ( ПустоеЗначение(ДанныеСтроки.Партия)=0 ) Тогда 
			ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
		Иначе
 				ОформлениеСтроки.ЦветФона = 255;	// Красный
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура тпНеобходимыеПартииВыбор()
	ГМ.ПриАктивизацииСтрокиТП(тпНеобходимыеПартии, тзНеобходимыеПартии);
	ГМ.ПриАктивизацииКолонкиТП(тпНеобходимыеПартии, тзНеобходимыеПартии);
		
	Клик_партии();
		
КонецПроцедуры
//========================= ТАБЛИЧНОЕ ПОЛЕ ДОКУМЕНТОВ =================

Процедура тпПартииПроизводствоПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		//ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
 			
 		Если (ДанныеСтроки.КолвоНаСкладе = 0 ) Тогда
			ОформлениеСтроки.ЦветФона = 255;	// Красный
		ИначеЕсли (ДанныеСтроки.КолвоНаСкладе >= ДанныеСтроки.Количество) Тогда
			ОформлениеСтроки.ЦветФона = 65280;	// Зеленый
		Иначе
			ОформлениеСтроки.ЦветФона = 8454143;	// Желтый
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура тпПартииПроизводствоВыбор()
	ГМ.ПриАктивизацииСтрокиТП(тпПартииПроизводство, тзПартииПроизводство);
	ГМ.ПриАктивизацииКолонкиТП(тпПартииПроизводство, тзПартииПроизводство);	
	
	Клик_ПартииПроизводства();
	
КонецПроцедуры

//}

НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов = СоздатьОбъект("ТаблицаЗначений");
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("Грузополучатель",,,,,20,);
СписокДокументов.НоваяКолонка("Площадка",,,,,20,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Отправлен",,,,,7,);
СписокДокументов.НоваяКолонка("Статус",,,,,10,);
СписокДокументов.НоваяКолонка("Колво","Число",10,3,,10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,,10,);
СписокДокументов.НоваяКолонка("НомерАвто",,,,,10,);//+
СписокДокументов.НоваяКолонка("Док",,,,,30,);
СписокДокументов.НоваяКолонка("Склад",,,,,10,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,10,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,10,);

тзПартииПроизводство = СоздатьОбъект("Таблицазначений");
тзПартииПроизводство.НоваяКолонка("сЦвет",1,,,,1,);
тзПартииПроизводство.ВидимостьКолонки("сЦвет",0);//Скроем раскраску
тзПартииПроизводство.НоваяКолонка("Продукция_Элемент",,,,,20,);
тзПартииПроизводство.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
тзПартииПроизводство.НоваяКолонка("Количество","Число",,,,10,);
тзПартииПроизводство.НоваяКолонка("ВСД_Производство",,,,,3,);

тзНеобходимыеПартии = СоздатьОбъект("ТаблицаЗначений");
тзНеобходимыеПартии.НоваяКолонка("ДокРеализации",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Номенклатура",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Продукция_Элемент",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("Партия",,,,,20,);
тзНеобходимыеПартии.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
тзНеобходимыеПартии.НоваяКолонка("Количество","Число",,,,10,);
тзНеобходимыеПартии.НоваяКолонка("ПолеСортировки",,,,,10,);

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(0);
