// API 2.0

Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем КаталогОбработки;
Перем ВыбСтрока;
Перем Филиал;
Перем тзПартии;
Перем ВыбФирма Экспорт;
Перем оПривязки; //:Меркурий.Привязки


Процедура УменьшитьНаРаспределенныеПартии(тзАктуальныхПартий)
	// Подберем уже заполненнные, но не отправленные ВСД,
	// Выбираем ВСЕ документы, т.к. они м.б. не отмечены, но в них есть эти партии к отправке!!!
	тз = СоздатьОбъект("Таблицазначений");
	тзДокстр = СоздатьОбъект("Таблицазначений");
	СписокДокументов.Выгрузить(тз);
	тз.Свернуть("ВСД","");
	//	тз.Сортировать("ВСД");
	
	тзАктуальныхПартий.ДобавитьИндекс("ВСД_Партия","ВСД_Партия");
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз.ВСД) = 1 Тогда
		    Продолжить;
		КонецЕсли;
		Если (тз.ВСД.Проведен() = 1) или (СокрЛП(тз.ВСД.Статус) = "COMPLETED") Тогда
		    Продолжить;
		КонецЕсли;

		тз.ВСД.ВыгрузитьТабличнуюЧасть(тзДокстр);
		тзДокСтр.Свернуть("Партия","Количество");
		тзДокСтр.ВыбратьСтроки();
		Пока тзДокСтр.ПолучитьСтроку() = 1 Цикл
		    Если ПустоеЗначение(тздокСтр.Партия) = 1 Тогда
		        Продолжить;
			КонецЕсли;
			//стр = 0;
			//Если ТзАктуальныхПартий.НайтиЗначение(тздокСтр.Партия,стр,"ВСД_Партия") = 1 Тогда
			//	ТзАктуальныхПартий.ПолучитьСтрокуПоНомеру(стр);
			//	ТзАктуальныхПартий.Количество = ТзАктуальныхПартий.Количество - тздокСтр.Количество;
			//	Если ТзАктуальныхПартий.Количество < 0  Тогда
			//		Сообщить("В заполненных ранее ВСД на отправку обнаружено ПРЕВЫШЕНИЕ количества имеющейся партии (№ записи : "+СокрЛП(ТзАктуальныхПартий.ВСД_Партия.НомерЗаписи)+") ;"+тз.ВСД,"!!");
			//		ТзАктуальныхПартий.Количество = 0;
			//	КонецЕсли;
			//	//Сообщить("Есть в документах на отправку "+ТзАктуальныхПартий.ВСД_Партия+ ", уменьшаем на " + тздокСтр.Количество)
			//КонецЕсли;
			
			
			тзАктуальныхПартий.УстановитьФильтр(тздокСтр.Партия, тздокСтр.Партия, "ВСД_Партия");
			тзАктуальныхПартий.ВыбратьСтроки("ВСД_Партия");
			Пока тзАктуальныхПартий.ПолучитьСтроку("ВСД_Партия")=1 Цикл
				ТзАктуальныхПартий.Количество = ТзАктуальныхПартий.Количество - тздокСтр.Количество;
				Если ДетальнаяИнформация=1 Тогда
					Сообщить("Уменьшаем партию №"+СокрЛП(ТзАктуальныхПартий.ВСД_Партия.НомерЗаписи)+" на "+тздокСтр.Количество+" осталось = "+ТзАктуальныхПартий.Количество );
				КонецЕсли;
				Если ТзАктуальныхПартий.Количество < 0  Тогда
					Сообщить("В заполненных ранее ВСД на отправку обнаружено ПРЕВЫШЕНИЕ количества имеющейся партии (№ записи : "+СокрЛП(ТзАктуальныхПартий.ВСД_Партия.НомерЗаписи)+") ;"+тз.ВСД,"!!");
					ТзАктуальныхПартий.Количество = 0;
				КонецЕсли;				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	//Совсем выкинем уже распределенные Партии из списка Актуальных
	стр = 0;
	//Пока ТзАктуальныхПартий.НайтиЗначение(0,стр,"Количество") = 1 Цикл
	//	ТзАктуальныхПартий.УдалитьСтроку(стр);
	//	стр = 0;
	//КонецЦикла;
КонецПроцедуры

//****** Распределение партий - Исключительно вывод на форму
Процедура РаскраситьтзПартии2()
	тзНеобходимыеПартии.ВыбратьСтроки();
	Пока тзНеобходимыеПартии.ПолучитьСтроку() = 1 Цикл
		//Если _Подробно = 0 Тогда
 		//	Если (тзНеобходимыеПартии.КолвоНаСкладе = 0 ) Тогда
		//		тзНеобходимыеПартии.сЦвет = цвКрасный;
		//	ИначеЕсли (тзНеобходимыеПартии.КолвоНаСкладе >= тзНеобходимыеПартии.КолвоСписания) Тогда
		//		тзНеобходимыеПартии.сЦвет = цвЗеленый;
		//	Иначе
		//		тзНеобходимыеПартии.сЦвет = цвЖелтый;
		//	КонецЕсли;
		//Иначе
 			Если (тзНеобходимыеПартии.КолвоНаСкладе > 0 ) и ( ПустоеЗначение(тзНеобходимыеПартии.Партия)=0 ) Тогда
				тзНеобходимыеПартии.сЦвет = цвЗеленый;
			Иначе
				тзНеобходимыеПартии.сЦвет = цвКрасный;
			КонецЕсли;
		//КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиТзПартийВариант2()
	тзНеобходимыеПартии.УдалитьСтроки();
    // Используем список Продукция_Элемент, полученный ф-цией ЗаполнитьПартии
	сзПродукцияЭлементы = СоздатьОбъект("СписокЗначений"); // Для заполнения свободных партий
	тзПродукцияЭлементы = СоздатьОбъект("ТаблицаЗначений");

	тзПартии.Выгрузить(тзПродукцияЭлементы);
	тзПродукцияЭлементы.Свернуть("ВСД_Продукция_Элемент","КолвоНаСкладе,КолвоСписания"); //Вывод итогов по прод элементу
	тзПродукцияЭлементы.Выгрузить(сзПродукцияЭлементы,,,"ВСД_Продукция_Элемент");

	// Получим нужные нам Актуальные партии по фильтру
	тзАктуальныеПартии = ГМ.ПолучитьАкуальныеПартииИзСправочника(сзПродукцияЭлементы, Отправитель_Площадка, Отправитель_ХозСубъект);
	Если ПустоеЗначение(тзАктуальныеПартии) = 1 Тогда
		Если ПустоеЗначение(тзПродукцияЭлементы) = 1 Тогда    
			Сообщить("Нет актуальных партий по данным условиям отбора");
			Возврат;
		КонецЕсли;
	КонецЕсли;

    ПолеСортировкиПартий = ГМ.ПолучитьКонстанту("ПарамКолонкаСортировкиПартииСписания");
    ЗнакСортировкиПартий = ГМ.ПолучитьКонстанту("ПарамЗнакСортировкиУбывание");	
	
	тзПодобранныеПартии = СоздатьОбъект("ИндексированнаяТаблица");
	тзПодобранныеПартии.Загрузить(тзАктуальныеПартии);
	Если ЗнакСортировкиПартий=1 Тогда		
		тзПодобранныеПартии.ДобавитьИндекс("Продукция_Элемент","Продукция_Элемент, -#^ПолеСортировки");	
	Иначе
		тзПодобранныеПартии.ДобавитьИндекс("Продукция_Элемент","Продукция_Элемент, #^ПолеСортировки");	
	КонецЕсли;
	
	УменьшитьНаРаспределенныеПартии(тзПодобранныеПартии);

	тзРаспределения = СоздатьОбъект("ТаблицаЗначений"); // Итоговая таблица

	//Распределим по Актуальным
	тзПартии.Выгрузить(тзРаспределения); //скопируем структуру
	тзРаспределения.УдалитьСтроки();

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		тз = ГМ.ЗаполнитьТчДокументаПоТЗ(СписокДокументов.Док,Отправитель_Площадка, Отправитель_ХозСубъект, тзПодобранныеПартии);
		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			тзРаспределения.НоваяСтрока();
			тзРаспределения.ДокРеализации = СписокДокументов.Док;
			тзРаспределения.Номенклатура = тз.Номенклатура;
			тзРаспределения.ВСД_Продукция_Элемент = тз.Продукция_Элемент;
			тзРаспределения.Партия = тз.Партия;
			тзРаспределения.ПолеСортировки = тз.ПолеСортировки;				
			тзРаспределения.КолвоСписания = тз.Количество;
			Если ПустоеЗначение(тзРаспределения.Партия) = 0 Тогда 
				тзРаспределения.КолвоНаСкладе = тзРаспределения.Партия.Количество;
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;
	//КонецЕсли;

	//ТЗРаспределения.ВставитьКолонку("сЦвет",1,,,,,1);
	тзРаспределения.Выгрузить(тзНеобходимыеПартии);
//	тзНеобходимыеПартии.ВыводитьПиктограммы("Пометка");

	РаскраситьтзПартии2();
КонецПроцедуры
//
//Процедура КликПоказатьСвернуто()
//	ВывестиТзПартийВариант2();
//КонецПроцедуры
//****** Распределение партий - вывод на форму Окончание


Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

//=========================== СЛУЖЕБНЫЕ ФУНКЦИИ =============================

Процедура ОбновитьИнф()

	Форма.Инфо.Заголовок("Документов: "+СписокДокументов.КоличествоСтрок()+", количество: "+Окр(СписокДокументов.Итог("Колво"))+" ");

	ВыбКолво =0;
	ВыбДок = 0;
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда
			ВыбКолво = ВыбКолво + (СписокДокументов.Колво);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;
	ВыбКолво = Окр(ВыбКолво);

	Форма.ИнфоВыбор.Заголовок("Выбрано "+ВыбДок+" документов, количество = "+ВыбКолво+" ");

КонецПроцедуры


Процедура ЗаголовокНадпись()

	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

Процедура РаскраситьСписокДокументов(тзДок="", ТекСтрока = 1)

	Если ПустоеЗначение(тзДок)=1 Тогда
		тз = СоздатьОбъект("ТаблицаЗначений");
		СписокДокументов.Выгрузить(тз);
	Иначе
		тз = тзДок;
	КонецЕсли;

	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл

		Если (ПустоеЗначение(тз.ВСД)=0) Тогда
			тз.Статус = СокрЛП(тз.ВСД.Статус);

			Если ПустоеЗначение(тз.ВСД.ApplicationID) = 0 Тогда
				тз.Отправлен = "Отправлен";
			Иначе
				тз.Отправлен = "";
			КонецЕсли;
			Если СокрЛП(тз.ВСД.Статус)="COMPLETED" Тогда
				тз.сЦвет = цвЗеленый;
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(тз.ХозСубъект.GUID)=1 Тогда
			тз.сЦвет = цвКрасный;
		ИначеЕсли (ПустоеЗначение(тз.Площадка)=0) Тогда
			Если (ПустоеЗначение(тз.Площадка.GUID)=0)  Тогда
				тз.сЦвет = "";
			КонецЕсли;
		Иначе
			тз.сЦвет = цвЖелтый;
		КонецЕсли;

	КонецЦикла;

	Если ТекСтрока=1 Тогда
		ТекСтрока = СписокДокументов.ТекущаяСтрока();
	КонецЕсли;

	СписокДокументов.Загрузить(тз);

	СписокДокументов.ВыводитьПиктограммы("Пометка");

	Если ПустоеЗначение(ТекСтрока)=1 Тогда
		СписокДокументов.ТекущаяСтрока(1);
	Иначе
		СписокДокументов.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;
КонецПроцедуры


Процедура Клик()
	текСтр = СписокДокументов.ТекущаяСтрока();
	текКол = СписокДокументов.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = СписокДокументов.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			СписокДокументов.Пометка=1;
		Иначе
			СписокДокументов.Пометка=2;
		КонецЕсли;
		тзНеобходимыеПартии.УдалитьСтроки();
		тзПартии.УдалитьСтроки();
	ИначеЕсли текКол="Площадка" Тогда
		ВыбСтрока = текСтр;
		Площадка = СписокДокументов.ПолучитьЗначение(ТекСтр,текКол);

		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");

		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);

		СписокОтбора = СоздатьОбъект("СписокЗначений");

		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;

		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);

	ИначеЕсли текКол="ХозСубъект" Тогда

		ХозСубъект = СписокДокументов.ПолучитьЗначение(текСтр, "ХозСубъект");
		Если ПустоеЗначение(ХозСубъект)=1 Тогда
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
	   //+
	ИначеЕсли текКол="НомерАвто" Тогда
		текЗн = СписокДокументов.ПолучитьЗначение(ТекСтр, текКол);
		ВвестиЗначение(текЗн, "","Строка",20);
		СписокДокументов.УстановитьЗначение(текСтр, текКол, текЗн);

		//+
	Иначе
		Эл = СписокДокументов.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	КонецЕсли;

	ОбновитьИнф();
КонецПроцедуры

Процедура Клик_партии()
	текСтр = тзНеобходимыеПартии.ТекущаяСтрока();
	текКол = тзНеобходимыеПартии.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			тзНеобходимыеПартии.Пометка=1;
		Иначе
			тзНеобходимыеПартии.Пометка=2;
		КонецЕсли;
	ИначеЕсли (текКол="ВСД_Продукция_Элемент") и (тзНеобходимыеПартии.ВидимостьКолонки("ДокРеализации") > 0) Тогда
		Если (ПустоеЗначение(тзНеобходимыеПартии.ВСД_Продукция_Элемент) = 1) Тогда
			//Выбрать и привязать
			ВыбСтрока = текСтр;
			ТекНоменклатура = тзНеобходимыеПартии.ПолучитьЗначение(ТекСтр,"Номенклатура");
			Продукция_элемент = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
			Если Продукция_элемент.Выбрать("Укажите элемент для установки соответствия","ФормаСписка") = 0 Тогда
				Возврат;
			КонецЕсли;
			ТВопроса = "Установить соответствие "+ТекНоменклатура+" -> "+ Продукция_элемент.ТекущийЭлемент();
			Если Вопрос(ТВопроса,"Да+Нет") = "Да" Тогда
				СпрНом = СоздатьОбъект("Справочник.Номенклатура");
				СпрНом.НайтиЭлемент(ТекНоменклатура.ТекущийЭлемент());
				СпрНом.ВСД_Продукция_Элемент = Продукция_элемент.ТекущийЭлемент();
				СпрНом.Записать();
				тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"ВСД_Продукция_Элемент", Продукция_элемент.ТекущийЭлемент());
				Предупреждение("Необходимо перезаполнить партии !!!");
			КонецЕсли;
			//ОткрытьПодбор("Справочник.ВСД_Продукция_Элемент", "ФормаСписка");
		Иначе
			Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзНеобходимыеПартии.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	КонецЕсли;

	ОбновитьИнф();
КонецПроцедуры

//	// НЕ ИСПОЛЬЗУЕТСЯ
//Процедура ВыбратьПартию_ВСД_Производство()
//	СпрПартия = СоздатьОбъект("Справочник.ВСД_Партия");
//
//	тзПартии.ВыбратьСтроки();
//	Пока тзПартии.ПолучитьСтроку() = 1 Цикл
//		Если ПустоеЗначение(тзПартии.ВСД_Производство)=1 Тогда
//			Продолжить;
//		КонецЕсли;
//
//		Если тзПартии.ВСД_Производство.Проведен()=1 Тогда
//			Если СпрПартия.ВыбратьЭлементыПоРеквизиту("ДокОснование", тзПартии.ВСД_Производство, 0, 0)=1 Тогда
//				Пока СпрПартия.ПолучитьЭлемент()=1 Цикл
//					Если СпрПартия.ПометкаУдаления()=1 Тогда
//						Продолжить;
//					КонецЕсли;
//					Если СпрПартия.Продукция_Элемент <> тзПартии.ВСД_Продукция_Элемент Тогда
//						Продолжить;
//					КонецЕсли;
//
//					тзПартии.Партия = СпрПартия.ТекущийЭлемент();
//					тзПартии.Колво = тзПартии.Партия.Количество;
//					Попытка
//						//тзПартии.КолвоМест = тзПартии.Партия.КоличествоМест;
//					Исключение
//					КонецПопытки;
//				КонецЦикла;
//			КонецЕсли;
//		КонецЕсли;
//	КонецЦикла;
//
//КонецПроцедуры

//=========================== ПЕЧАТНЫЕ ФОРМЫ =============================

Процедура Реестр()
	ДобавлятьУпаковки = ГМ.ПолучитьКонстанту("ДобавлятьУпаковки");

	Таб = СоздатьОбъект("Таблица");
	Таб.ВывестиСекцию("Шапка|Осн");
	Если ДобавлятьУпаковки = 1 Тогда
		Таб.ПрисоединитьСекцию("Шапка|ВесМест");
	КонецЕсли;
	Таб.ПрисоединитьСекцию("Шапка|Хвост");

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл

		Таб.ВывестиСекцию("Строка|Осн");
		Если ДобавлятьУпаковки = 1 Тогда
			Таб.ПрисоединитьСекцию("Строка|ВесМест");
		КонецЕсли;
		Таб.ПрисоединитьСекцию("Строка|Хвост");
	КонецЦикла;

	Таб.Опции(0,0,0,0);
	Таб.ТолькоПросмотр();
	Таб.Показать("Реестр");
КонецПроцедуры

Процедура ПечатьСокрВСД(ВыбПринтер="")

	тз = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если (тз.Пометка<>2) или (Пустоезначение(тз.ВСД)=1) Тогда
			Продолжить;
		КонецЕсли;
		ГМ.ПечатьСокрВСД(тз.ВСД.ТекущийДокумент(), ВыбПринтер );
	КонецЦикла;

КонецПроцедуры


Процедура МенюПечать()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("Реестр", "Реестр");
	спМеню.ДобавитьЗначение("СокрВСД", "Сокращенный ВСД");
	спМеню.ДобавитьЗначение("СокрВСД_печать", "Сокращенный ВСД (сразу печать)");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Реестр" Тогда
		Реестр();
	ИначеЕсли зн = "СокрВСД" Тогда
		ПечатьСокрВСД();
	ИначеЕсли зн = "СокрВСД_печать" Тогда
		ТекущийПринтер="";
		Принтер.ПолучитьЗначение(Принтер.ТекущаяСтрока(),ТекущийПринтер);
		ПечатьСокрВСД( ТекущийПринтер );
	КонецЕсли;

КонецПроцедуры


//=========================== ФУНКЦИИ КНОПОК =============================

Процедура ЗаполнитьСписокДокументов_Реализации()
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение(НачДата, "НачДата");
	СписокПараметров.ДобавитьЗначение(КонДата, "КонДата");
	СписокПараметров.ДобавитьЗначение(ВыбКонтрагент, "ВыбКонтрагент");
	СписокПараметров.ДобавитьЗначение(ВыбФирма, "ВыбФирма");
	СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,"Площадка"); //ЖД для фильтра по складу
	СписокПараметров.ДобавитьЗначение(ГМ,"ГМ");
	СписокПараметров.ДобавитьЗначение(ГМ2,"ГМ2");
	СписокПараметров.ДобавитьЗначение(1,"Версия2");
	Если флФильтрПоСкладу = 1 Тогда
		СписокПараметров.ДобавитьЗначение(флФильтрПоСкладу,"флФильтрПоСкладу"); //ТАС для фильтра по складу
	КонецЕсли;

    Если  ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов2.ert")=1 Тогда
		//{ переопределение функции заполнения списка документов
		// интеграция переопределяется в \Меркурий_Подключаемый_ЗаполнитьСписокДокументов.ert
		//
		ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_ЗаполнитьСписокДокументов2.ert");

		тз = "";

		Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
			тз = СписокПараметров.Получить("ТЗ");
		Иначе
			Возврат;
		КонецЕсли;
		Если ПустоеЗначение(ТЗ)=1 Тогда
			Предупреждение("Отсутствуют документы Реализации за выбранный период","!");
			СписокДокументов.УдалитьСтроки();
			Возврат;
		КонецЕсли;
		//}
	Иначе // стандартный запрос
		тз = ГМ.ПолучитьТзРеализаций(СписокПараметров);
	КонецЕсли;

	ТекСтрока = СписокДокументов.ТекущаяСтрока();

	СписокДокументов.УдалитьСтроки();

	тзДок = СоздатьОбъект("ТаблицаЗначений");
	СписокДокументов.Выгрузить(тзДок);

	Попытка
		тз.ВыбратьСтроки();
	Исключение
		Возврат;
	КонецПопытки;

	Ном=0;
	Пока тз.ПолучитьСтроку()=1 Цикл
		тзДок.НоваяСтрока();
		тзДок.Пометка=1;
		тзДок.Контрагент = тз.Контрагент;
		тзДок.Грузополучатель = тз.Грузополучатель;
		тзДок.Док = тз.Док;
		тзДок.Колво = тз.Количество;
		//тзДок.Вес = тз.Количество;
		Попытка
			//тзДок.КолвоМест = тз.КоличествоМест;
		Исключение
		КонецПопытки;

		тзДок.ХозСубъект = ГМ.НайтиХозСубъект(тз.Контрагент);
		Если ПустоеЗначение(тзДок.ХозСубъект)=0 Тогда
			тзДок.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( тзДок.Грузополучатель);
		КонецЕсли;

		Попытка
			Если тз.ДокВСД.ПометкаУдаления()=0 Тогда
				тзДок.ВСД = тз.ДокВСД;
			КонецЕсли;
		Исключение
		КонецПопытки;
	//+
		доквсд=тзДок.ВСД;
		если ПустоеЗначение(доквсд)=0 Тогда
			// Степанова
			Если СокрЛП(доквсд.номерАвто) = "" Тогда
				тзДок.НомерАвто = ГМ.ПолучитьНомерАвто(тзДок.док);
			Иначе
				тзДок.НомерАвто = доквсд.номерАвто;
			КонецЕсли;
			// Степанова
			тзДок.Статус = СокрЛП(доквсд.Статус);
			Если ПустоеЗначение(доквсд.ApplicationID) = 0 Тогда
				тзДок.Отправлен = "Отправлен";
			Иначе
				тзДок.Отправлен = "";
			КонецЕсли;
		Иначе
			тзДок.НомерАвто=ГМ.ПолучитьНомерАвто(тзДок.док);
		КонецЕсли;
	//+
		Попытка тзДок.Склад = тз.Док.Склад; Исключение КонецПопытки;

	КонецЦикла;

	РаскраситьСписокДокументов( тзДок, ТекСтрока );
	ОбновитьИнф();
КонецПроцедуры

процедура ВыбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока()));
		СписокДокументов.УдалитьСтроки();
		тзНеобходимыеПартии.УдалитьСтроки();
		тзПартии.УдалитьСтроки();
		ЗаполнитьСписокДокументов_Реализации();
	конецесли;
конецпроцедуры

// не используется
//Процедура СоздатьВСД()
//
//	Если тзПартии.КоличествоСтрок()=0 Тогда
//		Сообщить("Не заполнена таблица партий.","!");
//		Возврат;
//	КонецЕсли;
//
//	СписокДокументов.ВыбратьСтроки();
//	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
//		Если СписокДокументов.Пометка<>2 Тогда
//			Продолжить;
//		КонецЕсли;
//
//		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда
//			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда
//				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
//				Продолжить;
//			КонецЕсли;
//		КонецЕсли;
//
//		Состояние("Заполнение списка партий ВСД ");
//
//		ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
//		ДокВСД.Новый();
//		ДокВСД.Фирма = ВыбФирма;		
//		ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
//		ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
//		ДокВСД.Получатель_ХозСубъект = СписокДокументов.ХозСубъект;;
//		ДокВСД.Получатель_Площадка = СписокДокументов.Площадка;
//		ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
//		
//		// остальные реквизиты заполним стандартно 
//		ГМ2.ЗаполнитьВСД2_Транзакция( ДокВСД, СписокДокументов.Док);
//		
//		ДокВСД.Записать();
//		ДокументСсылка = ДокВСД.ТекущийДокумент();
//		
//		СписокДокументов.ВСД = ДокументСсылка;
//
//		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");
//	КонецЦикла;
//
//	тзПартии.УдалитьСтроки();
//	тзНеобходимыеПартии.УдалитьСтроки();
//	ЗаполнитьСписокДокументов_Реализации();
//КонецПроцедуры

Процедура СоздатьВСД_ПоТзРаспределения()
	Если тзНеобходимыеПартии.ВидимостьКолонки("ДокРеализации") < 0 Тогда
		Сообщить("Включите режим Распределить партии","i");
		Возврат;
	КонецЕсли;
	Если тзНеобходимыеПартии.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица с распределенными партиями.","!");
		Возврат;
	КонецЕсли;

	Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert")=1 Тогда
		Сообщить("ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакция.ert отключено.
		|Используйте модуль Меркурий_Интеграция.ert для переопределения функций","!");
		Возврат;
	КонецЕсли;
	
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(СписокДокументов.ВСД)=0) Тогда
			Если (ПустоеЗначение(СписокДокументов.ВСД.Статус) = 1) Тогда
				Сообщить("Для "+СписокДокументов.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		стр = 0;
		Если тзНеобходимыеПартии.НайтиЗначение(СписокДокументов.Док,стр,"ДокРеализации") = 0 тогда
			Сообщить("Для "+СписокДокументов.Док+" нет данных в тз Распределенных партий","i");
			Продолжить;
		КонецЕсли;

		тзНеобходимыеПартии.ПолучитьСтрокуПоНомеру(стр);

		Состояние("Создание ВСД ");
		ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
		ДокВСД.Новый();
		ДокВСД.Фирма = ВыбФирма;
		ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
		ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
		ДокВСД.Получатель_ХозСубъект = СписокДокументов.ХозСубъект;;
		ДокВСД.Получатель_Площадка = СписокДокументов.Площадка;
		ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
		
		// остальные реквизиты заполним стандартно 
		ГМ2.ЗаполнитьВСД2_Транзакция( ДокВСД, СписокДокументов.Док, 0 );

		Пока (стр <= тзНеобходимыеПартии.КоличествоСтрок()) и (СписокДокументов.Док = тзНеобходимыеПартии.ДокРеализации) Цикл
			ДокВСД.НоваяСтрока();
			//ДокВСД.Номенклатура = тзНеобходимыеПартии.Номенклатура;
			ДокВСД.Партия = тзНеобходимыеПартии.Партия;
			ДокВСД.Количество = тзНеобходимыеПартии.КолвоСписания;
		
			ГМ.ЗаполнитьСтрокуДокумента( ДокВСД, тзНеобходимыеПартии, ДокВСД);
			стр = стр + 1;
			Если стр > тзНеобходимыеПартии.КоличествоСтрок() Тогда
			    Прервать;
			КонецЕсли;
			тзНеобходимыеПартии.ПолучитьСтрокуПоНомеру(стр);
		КонецЦикла;
		
		ДокВСД.ТермическоеСостояние = ГМ.УстановитьТермическоеСостояние( ДокВСД );		
		
		Если ДокВСД.КоличествоСтрок() = 0 Тогда
		    Продолжить;
		КонецЕсли;

		ДокВСД.Записать();
		ДокументСсылка = ДокВСД.ТекущийДокумент();

		СписокДокументов.ВСД = ДокументСсылка;

		Сообщить("["+СписокДокументов.Грузополучатель+"] создан документ "+СписокДокументов.ВСД,"i");
	КонецЦикла;
	тзПартии.УдалитьСтроки();
	тзНеобходимыеПартии.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры


Процедура ОтменитьВсеДокументы()
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		СписокДокументов.Пометка=1;
	КонецЦикла;

	тзНеобходимыеПартии.УдалитьСтроки();
	тзПартии.УдалитьСтроки();

	ОбновитьИнф();
КонецПроцедуры

Процедура ВыделитьВсеДокументы()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("ВыделитьВсе", "Выделить все документы");
	спМеню.ДобавитьЗначение("ВыделитьСоздать", "Выделить пустые ВСД");
	спМеню.ДобавитьЗначение("ВыделитьНеОтправленные", "Выделить НЕ ОТПРАВЛЕННЫЕ");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "ВыделитьВсе" Тогда
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			//Если СписокДокументов.сЦвет = "" Тогда
				СписокДокументов.Пометка=2;
			//КонецЕсли;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьСоздать" Тогда
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.сЦвет = "" Тогда
				СписокДокументов.Пометка=2;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли зн = "ВыделитьНеОтправленные" Тогда
		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если ( ПустоеЗначение(СписокДокументов.ВСД) = 0 ) Тогда
				Если ( СокрЛП(СписокДокументов.ВСД.Статус) <> "COMPLETED" ) Тогда
					СписокДокументов.Пометка=2;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;




	тзНеобходимыеПартии.УдалитьСтроки();
	тзПартии.УдалитьСтроки();

	ОбновитьИнф();
КонецПроцедуры

Процедура ЗаполнитьТзПартии()
	тзПартии.УдалитьСтроки();

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если ПустоеЗначение(СписокДокументов.ВСД) = 0 Тогда
			Сообщить("Уже создан "+СписокДокументов.ВСД+" Пропускаю");
		    Продолжить;
		КонецЕсли;

		Состояние("Заполнение списка партий ВСД ");

		тз = ГМ.ВыгрузитьТч(СписокДокументов.Док);

		тз.ВыбратьСтроки();
		Пока тз.ПолучитьСтроку() = 1 Цикл
			тзПартии.НоваяСтрока();
			тзПартии.ДокРеализации = тз.ДокРеализации;
			тзПартии.Номенклатура = тз.Номенклатура;
			тзПартии.ВСД_Продукция_Элемент = тз.ВСД_Продукция_Элемент;
			тзПартии.КолвоСписания = тз.Количество;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьПартии()
	ВремТЗПодобранныеПартии = "";
	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");
		Возврат;
	КонецЕсли;
	//Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
	//	Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");
	//	Возврат;
	//КонецЕсли;

	//_Подробно = 0;

	Форма.Закладки.ТекущаяСтрока(2);
	Форма.ИспользоватьСлой("Основной, Партии");

	ЗаполнитьТзПартии();
	ВывестиТЗПартийВариант2();
КонецПроцедуры


Процедура Клик_ПартииПроизводства()
	текСтр = тзПартииПроизводство.ТекущаяСтрока();
	текКол = тзПартииПроизводство.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = тзПартииПроизводство.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			тзПартииПроизводство.Пометка=1;
		Иначе
			тзПартииПроизводство.Пометка=2;
		КонецЕсли;
	ИначеЕсли (текКол="ВСД_Продукция_Элемент") Тогда
		Если (ПустоеЗначение( тзПартииПроизводство.ВСД_Продукция_Элемент) = 1) Тогда
		//	//Выбрать и привязать
		//	ВыбСтрока = текСтр;
		//	ТекНоменклатура = тзПартииПроизводство.ПолучитьЗначение(ТекСтр,"Номенклатура");
		//	Продукция_элемент = СоздатьОбъект("Справочник.ВСД_Продукция_Элемент");
		//	Если Продукция_элемент.Выбрать("Укажите элемент для установки соответствия","ФормаСписка") = 0 Тогда
		//		Возврат;
		//	КонецЕсли;
		//	ТВопроса = "Установить соответствие "+ТекНоменклатура+" -> "+ Продукция_элемент.ТекущийЭлемент();
		//	Если Вопрос(ТВопроса,"Да+Нет") = "Да" Тогда
		//		СпрНом = СоздатьОбъект("Справочник.Номенклатура");
		//		СпрНом.НайтиЭлемент(ТекНоменклатура.ТекущийЭлемент());
		//		СпрНом.ВСД_Продукция_Элемент = Продукция_элемент.ТекущийЭлемент();
		//		СпрНом.Записать();
		//		тзНеобходимыеПартии.УстановитьЗначение(ВыбСтрока,"ВСД_Продукция_Элемент", Продукция_элемент.ТекущийЭлемент());
		//		Предупреждение("Необходимо перезаполнить партии !!!");
		//	КонецЕсли;
		Иначе
			Эл = тзПартииПроизводство.ПолучитьЗначение(текСтр, текКол);
			ОткрытьФорму(Эл);
		КонецЕсли;
	Иначе
		Эл = тзПартииПроизводство.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	КонецЕсли;

	ОбновитьИнф();
КонецПроцедуры


Процедура РаскраситьтзПартииПроизводства()
	тзПартииПроизводство.ВыбратьСтроки();
	Пока тзПартииПроизводство.ПолучитьСтроку() = 1 Цикл
 		Если (тзПартииПроизводство.КолвоНаСкладе = 0 ) Тогда
			тзПартииПроизводство.сЦвет = цвКрасный;
		ИначеЕсли (тзПартииПроизводство.КолвоНаСкладе >= тзПартииПроизводство.КолвоСписания) Тогда
			тзПартииПроизводство.сЦвет = цвЗеленый;
		Иначе
			тзПартииПроизводство.сЦвет = цвЖелтый;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьПартииПроизводства()
	
	ЗаполнитьТзПартии();
		
	тзПартииПроизводство.УдалитьСтроки();
    // Используем список Продукция_Элемент, полученный ф-цией ЗаполнитьПартии
	сзПродукцияЭлементы = СоздатьОбъект("СписокЗначений"); // Для заполнения свободных партий
	
	//тзПродукцияЭлементы = СоздатьОбъект("ТаблицаЗначений");

	тзПартии.Выгрузить(сзПродукцияЭлементы, , , "ВСД_Продукция_Элемент");
	//тзПродукцияЭлементы.Свернуть("ВСД_Продукция_Элемент","КолвоНаСкладе,КолвоСписания"); //Вывод итогов по прод элементу
	//ВремПартии.Выгрузить(сзПродукцияЭлементы,,,"ВСД_Продукция_Элемент");

	// Получим нужные нам Актуальные партии по фильтру
	тзАктуальныеПартии = ГМ.ПолучитьАкуальныеПартииИзСправочника(сзПродукцияЭлементы, Отправитель_Площадка, Отправитель_ХозСубъект);
	Если ПустоеЗначение(тзАктуальныеПартии) = 1 Тогда
		Если ПустоеЗначение(сзПродукцияЭлементы) = 1 Тогда    
			Сообщить("Нет актуальных партий по данным условиям отбора");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	//тзПодобранныеПартии = СоздатьОбъект("ИндексированнаяТаблица");
	//тзПодобранныеПартии.Загрузить(тзАктуальныеПартии);
	//Если ЗнакСортировкиПартий=1 Тогда		
	//	тзПодобранныеПартии.ДобавитьИндекс("Продукция_Элемент","Продукция_Элемент, -#^ПолеСортировки");	
	//Иначе
	//	тзПодобранныеПартии.ДобавитьИндекс("Продукция_Элемент","Продукция_Элемент, #^ПолеСортировки");	
	//КонецЕсли;

	
	тзРаспределения = СоздатьОбъект("ТаблицаЗначений"); // Итоговая таблица	
	тзПартииПроизводство.Выгрузить( тзРаспределения );
	тзРаспределения.УдалитьСтроки();
	//тзПартииПроизводство.УдалитьСтроки();
	
	ВремПартии = СоздатьОбъект("ТаблицаЗначений");
	тзПартии.Выгрузить(ВремПартии);
	ВремПартии.Свернуть("ВСД_Продукция_Элемент","КолвоНаСкладе, КолвоСписания"); 
	тзАктуальныеПартии.Свернуть("Продукция_Элемент","Количество, КоличествоМест"); 
	
	ВремПартии.ВыбратьСтроки();
	Пока ВремПартии.ПолучитьСтроку() = 1 Цикл
		тзРаспределения.НоваяСтрока();
		тзРаспределения.ВСД_Продукция_Элемент = ВремПартии.ВСД_Продукция_Элемент;
		//тзРаспределения.КолвоНаСкладе = ВремПартии.КолвоНаСкладе;
		тзРаспределения.КолвоСписания = ВремПартии.КолвоСписания;
		
		стр = 0;
		Если тзАктуальныеПартии.НайтиЗначение( ВремПартии.ВСД_Продукция_Элемент, стр, "Продукция_Элемент") = 1 Тогда
			тзАктуальныеПартии.ПолучитьСтрокуПоНомеру(стр);
			тзРаспределения.КолвоНаСкладе = ВремПартии.КолвоНаСкладе + тзАктуальныеПартии.ПолучитьЗначение(стр,"Количество");
			//ВремПартии.КолвоНаСкладе = тзАктуальныеПартии.Количество;
			//Если ТзАктуальныхПартий.Количество < 0  Тогда
			//	Сообщить("В заполненных ранее ВСД на отправку обнаружено ПРЕВЫШЕНИЕ количества имеющейся партии (№ записи : "+СокрЛП(ТзАктуальныхПартий.ВСД_Партия.НомерЗаписи)+") ;"+тз.ВСД,"!!");
			//	ТзАктуальныхПартий.Количество = 0;
			//КонецЕсли;
			//Сообщить("Есть в документах на отправку "+ТзАктуальныхПартий.ВСД_Партия+ ", уменьшаем на " + тздокСтр.Количество)
		КонецЕсли;

		
	КонецЦикла;
	тзРаспределения.Выгрузить(тзПартииПроизводство);
	
	РаскраситьтзПартииПроизводства();
КонецПроцедуры


Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;

	Возврат 1;
КонецФункции

Процедура ОтправитьВСД()

	СписокВСД = СоздатьОбъект("СписокЗначений");
	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка = 2 Тогда
			Если ПроверитьВСД(СписокДокументов.ВСД)=1 Тогда
				СписокВСД.ДобавитьЗначение(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ2.ОтправитьВсе_ВСД2_Транзакция(СписокВСД, НачДата, КонДата);
	//ЖД покрасить то забыли
	РаскраситьСписокДокументов( ,  );
	ОбновитьИнф();
КонецПроцедуры

Процедура ПолучитьПартии()
	ЗаписьЖурналаРегистрации("Ветис получение партий ");


	// 2.0
	//Состояние("Ветис получение партий 2.0")
	//ГМ2.ПолучитьПартии2(Отправитель_Площадка);

	// 2.1
	ПартииНачало = НачДата-30;
	ПартииОкончание = КонДата;
	Ненулевые = 1;
	ВвестиДату(ПартииНачало,"Загрузить партии, поступившие с :");
	Если ПустоеЗначение(ПартииНачало) = 1 Тогда
		//Все хотят
		ПартииНачало = "";
		ПартииОкончание = "";
		Ненулевые = 0;
		Сообщить("Ветис получение всех партий по площадке "+Отправитель_Площадка);
	Иначе
		Сообщить("Ветис получение ненулевых партий по площадке "+СокрЛП(Отправитель_Площадка.Наименование)+" за период "+ПериодСтр(ПартииНачало,ПартииОкончание));
	КонецЕсли;
	Состояние("Ветис получение партий 2.1");
	ГМ2.ПолучитьПартии2(Отправитель_Площадка, 0, 1,ПартииНачало, ПартииОкончание, Ненулевые);

КонецПроцедуры

Процедура ЗагрузитьПлощадки()

	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	СписокДействийВСД.ДобавитьЗначение("ЗагрузитьПоХС","Загрузить площадки по ХС");
	СписокДействийВСД.ДобавитьЗначение("НайтиПоИмени","Найти площадки по названию");
	СписокДействийВСД.ДобавитьЗначение("СоздатьХС","Создать ХозСубъект");
	СписокДействийВСД.ДобавитьЗначение("СоздатьПлощадку","Создать Площадку");

	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда

		Если Зн ="ЗагрузитьПоХС"  Тогда
			ГМ.ЗагрузитьПлощадки(СписокДокументов.ХозСубъект);
			РаскраситьСписокДокументов();
		ИначеЕсли Зн = "НайтиПоИмени" Тогда
			ГМ2.НайтиПлощадкиПоНазванию( СписокДокументов.ХозСубъект, Регион, 1);
			РаскраситьСписокДокументов();
		ИначеЕсли Зн = "СоздатьХС" Тогда
			ГМ.СоздатьХС( СписокДокументов );
			РаскраситьСписокДокументов();
		ИначеЕсли Зн = "СоздатьПлощадку" Тогда
			ГМ.СоздатьПлощадку( СписокДокументов );
			РаскраситьСписокДокументов();
		КонецЕсли;
	КонецЕсли;

	//ПриВыбореЗакладки(Форма.Закладки.ТекущаяСтрока(),"Реализации");
КонецПроцедуры

Процедура Создать_ВСД_Производство()
	//Если тзНеобходимыеПартии.ВидимостьКолонки("ВСД_Производство") < 0 Тогда
	//	Сообщить("Отключите режим распределения партий","i");
	//	Возврат;
	//КонецЕсли;
	ВремПартии = СоздатьОбъект("ТаблицаЗначений");
	тзПартииПроизводство.Выгрузить(ВремПартии);
	ВремПартии.ВыбратьСтроки();
	Пока ВремПартии.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремПартии.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремПартии.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремПартии.КолвоНаСкладе >= ВремПартии.КолвоСписания Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремПартии.ВСД_Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;

		Состояние("Создание ВСД_Производство ");


		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_Производство.ert")=1 Тогда

			//{ переопределение функции создания ВСД
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_Производство.ert
			//

			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(ВыбФирма,				"Фирма");

			СписокПараметров.ДобавитьЗначение(Отправитель_ХозСубъект,				"Отправитель_ХозСубъект");
			СписокПараметров.ДобавитьЗначение(Отправитель_Площадка,					"Отправитель_Площадка");
			СписокПараметров.ДобавитьЗначение( ВремПартии.КолвоСписания,			"Колво");
			СписокПараметров.ДобавитьЗначение( ВремПартии.КолвоНаСкладе,			"КолвоВНаличии");
			СписокПараметров.ДобавитьЗначение( ВремПартии.ВСД_Продукция_Элемент,	"Продукция_Элемент");
			//
			//СписокПараметров.ДобавитьЗначение( ВСД_Экспертиза,		"ВСД_Экспертиза");
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,		"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,	"ВСД_ОсобыеОтметки");

			СписокПараметров.ДобавитьЗначение( НачДата,				"НачДата");
			СписокПараметров.ДобавитьЗначение( КонДата,				"КонДата");
			СписокПараметров.ДобавитьЗначение(ГМ,"ГМ");
			СписокПараметров.ДобавитьЗначение(ГМ2,"ГМ2");

			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_Производство.ert");

			ДокументСсылка = "";

			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда

				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");

			КонецЕсли;

			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}

		Иначе

			// ТЕСТ
			Если ВремПартии.КолвоНаСкладе  >= ВремПартии.КолвоСписания Тогда
			    Продолжить; //
			КонецЕсли;

			ДокВСД = СоздатьОбъект("Документ.ВСД2_Производство");
			ДокВСД.Новый();
			//ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
			ДокВСД.ДатаДок = НачДата;
			ДокВСД.Производитель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Производитель_площадка = Отправитель_Площадка;

			Автор = ГМ.ПолучитьАвтора();
			Попытка	ДокВСД.Автор 	= Автор;	Исключение 	КонецПопытки;
			Попытка	ДокВСД.Филиал 	= Автор.Филиал;	Исключение	КонецПопытки;
			Попытка ДокВСД.Фирма 	= ВыбФирма; Исключение КонецПопытки;
			ДокВСД.Местность 		= ВСД_Местность;
			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			ДокВСД.cargoExpertized  = 1;
			ДокВСД.cargoInspected  	= 1;
			ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");
		
			ДокВСД.НоваяСтрока();

			ДокВСД.Продукция_Элемент 	= ВремПартии.ВСД_Продукция_Элемент;
			ДокВСД.Количество 			= ВремПартии.КолвоСписания - ВремПартии.КолвоНаСкладе; 
			ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
			ДокВСД.ВидДвижения 			= 1;
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;


			ДокВСД.ЗавершитьОперацию = 1;
			ДокВСД.ДатаИзготовления1 = ГМ.Преобразовать_Дата_в_Строка(НачДата);
			Если КонДата>НачДата Тогда
				ДокВСД.ДатаИзготовления2 = ГМ.Преобразовать_Дата_в_Строка(КонДата);
			КонецЕсли;
			ДокВСД.ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка(НачДата+ДокВСД.Продукция_Элемент.СрокГодности);


			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;

		ВремПартии.ВСД_Производство = ДокументСсылка;

		Сообщить(" создан документ "+ВремПартии.ВСД_Производство,"i");
	КонецЦикла;
	ВремПартии.Выгрузить( тзПартииПроизводство );
КонецПроцедуры


Функция ПроверитьВСД_Производство(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	//Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
	//	Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
	//	Возврат 0;
	//КонецЕсли;

	Возврат 1;
КонецФункции


Процедура Отправить_ВСД_Производство()
	СписокВСД = СоздатьОбъект("СписокЗначений");
	тзПартииПроизводство.ВыбратьСтроки();
	Пока тзПартииПроизводство.ПолучитьСтроку() = 1 Цикл
		Если ПроверитьВСД_Производство( тзПартииПроизводство.ВСД_Производство)=1 Тогда
			СписокВСД.ДобавитьЗначение( тзПартииПроизводство.ВСД_Производство);
		КонецЕсли;
	КонецЦикла;

	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД Производство");

	ГМ2.ОтправитьВсе_ВСД2_Производство(СписокВСД, НачДата, КонДата);
    ВывестиТзПартийВариант2();

КонецПроцедуры

Процедура Очистить_Партию()
	тзПартииПроизводство.ВСД_Производство="";
КонецПроцедуры


Процедура АннулироватьВСД()
	Если Вопрос("Вы уверены, что хотите аннулировать выбранные ВСД?",4,30)=6 Тогда
		Сообщить("Выполняется аннулирование ВСД");

		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка = 2 Тогда
				ГМ2.Аннулировать_ВСД2_транзакция(СписокДокументов.ВСД);
			КонецЕсли;
		КонецЦикла;

		ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьУсловияПеревозки()
		Состояние("Получаем условия перевозки");

		ДокОб = создатьОбъект("Документ");

		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Если СписокДокументов.Пометка = 2 Тогда
				Рез = ГМ2.ПроверитьВозможностьПеремещения(СписокДокументов.ВСД);
				Если ТипЗначенияСтр(Рез) = "ТаблицаЗначений" Тогда
					ДокОб.НайтиДокумент( СписокДокументов.ВСД );
					Если Рез.КоличествоСтрок() = 0 Тогда
						ДокОб.ИмяФайлаРегионализация ="";
						Сообщить("Перевозка разрешена без условий");
					Иначе
						ДокОб.ИмяФайлаРегионализация = ГМ2.ПолучитьИмяФайлаРегионализация( СписокДокументов.ВСД );
						ЗначениеВФайл(ДокОб.ИмяФайлаРегионализация, Рез);
					КонецЕсли;
					ДокОб.Записать();
				Иначе
					Сообщить("Перевозка разрешена без условий");
				КонецЕсли;

			КонецЕсли;
		КонецЦикла;

		ЗаполнитьСписокДокументов_Реализации();
		Состояние("");
КонецПроцедуры

Процедура ПолучитьОтветВетис()
		Сообщить("Выполняется запрос ответов от ВЕТИС на отправленные документы без ответа");

		СписокДокументов.ВыбратьСтроки();
		Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
			Попытка
				Если (СписокДокументов.Отправлен = "Отправлен") и (НЕ(СписокДокументов.Статус = "COMPLETED") или НЕ(СписокДокументов.Статус = "REJECTED")) Тогда
					ГМ2.ПолучитьРезультат_ВСД_2(СписокДокументов.ВСД.applicationID, СписокДокументов.ВСД.ТекущийДокумент());
				КонецЕсли;
			Исключение
			    Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;

		ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

// ==================== МЕНЮ кнопок ===========================

Процедура МенюВСД()
	спМеню = СоздатьОбъект("СписокЗначений");
	спМеню.ДобавитьЗначение("СоздатьВСД2", "Создать ВСД");
	//спМеню.ДобавитьЗначение("СоздатьВСД", "Создать ВСД");
	спМеню.ДобавитьЗначение("ОтправитьВСД", "Отправить ВСД");
	спМеню.ДобавитьЗначение("АннулироватьВСД", "Аннулировать ВСД");
	спМеню.ДобавитьЗначение("ПолучитьУсловияПеревозки", "Получить условия перевозки");
	спМеню.ДобавитьЗначение("ПолучитьОтветВетис", "Получить ответ ВЕТИС");

	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	//Если зн = "СоздатьВСД" Тогда
	//	СоздатьВСД();
	Если зн = "СоздатьВСД2" Тогда
		СоздатьВСД_ПоТзРаспределения();
	ИначеЕсли зн = "ОтправитьВСД" Тогда
		ОтправитьВСД();
	ИначеЕсли зн = "АннулироватьВСД" Тогда
		АннулироватьВСД();
	ИначеЕсли зн = "ПолучитьУсловияПеревозки" Тогда
		ПолучитьУсловияПеревозки();
	ИначеЕсли зн = "ПолучитьОтветВетис" Тогда
		ПолучитьОтветВетис();
	КонецЕсли;

КонецПроцедуры

Процедура МенюПроизводство()
	спМеню = СоздатьОбъект("СписокЗначений");
//	спМеню.ДобавитьЗначение("Очистить_Партию", "Очистить выбранную партию");
	спМеню.ДобавитьЗначение("Создать_ВСД_Производство", "Создать ВСД Производство");
	спМеню.ДобавитьЗначение("Отправить_ВСД_Производство", "Отправить ВСД Производство");
	зн = "";
	спМеню.ВыбратьЗначение(зн,,,,1);
	Если зн = "Очистить_Партию" Тогда
		Очистить_Партию();
	ИначеЕсли зн = "Создать_ВСД_Производство" Тогда
		Создать_ВСД_Производство();
	ИначеЕсли зн = "Отправить_ВСД_Производство" Тогда
		Отправить_ВСД_Производство();
	КонецЕсли;

КонецПроцедуры

//*******************************************


Функция СоздатьВСДПоТзПартий()

	ХС = Поставщик_ХозСубъект;//ГМ.СписокКонстант.Получить("Поставщик_ХозСубъект");
	ВыбПлощадка  = Поставщик_Площадка;//ГМ.СписокКонстант.Получить("Поставщик_Площадка");

	Если ПустоеЗначение(ХС) = 1 Тогда
		СпрВрем = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
		//	 Выберем руками
		Если СпрВрем.Выбрать("Выберите ХС отправителя",) = 0 Тогда
	  	  Сообщить("Невозможно создать документ без ХС");
			Возврат "";
		КонецЕсли;
		ХС = СпрВрем.ТекущийЭлемент();
	КонецЕсли;

	Если ПустоеЗначение(ВыбПлощадка) = 1 Тогда
		СпрВрем = СоздатьОбъект("Справочник.ВСД_Площадка");
		//	 Выберем руками
		Если СпрВрем.Выбрать("Выберите Площадку Отправителя",) = 0 Тогда
	  	  Сообщить("Невозможно создать документ без Площадки");
			Возврат "";
		КонецЕсли;
		ВыбПлощадка = СпрВрем.ТекущийЭлемент();
	КонецЕсли;


		// создание кастомного ВСД
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакцияПоТзПартий.ert")=1 Тогда

			//{ переопределение функции создания ВСД
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_транзакция.ert
			//
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение(ВыбФирма,						"Фирма");
			СписокПараметров.ДобавитьЗначение(ХС,							"Отправитель_ХозСубъект");
			СписокПараметров.ДобавитьЗначение(ВыбПлощадка,					"Отправитель_Площадка");
			СписокПараметров.ДобавитьЗначение( Отправитель_ХозСубъект,		"Получатель_ХозСубъект");
			СписокПараметров.ДобавитьЗначение( Отправитель_Площадка,		"Получатель_Площадка");
			СписокПараметров.ДобавитьЗначение( СписокДокументов.Колво,		"Колво");
			СписокПараметров.ДобавитьЗначение( ВСД_Местность,				"ВСД_Местность");
			СписокПараметров.ДобавитьЗначение( ВСД_ОсобыеОтметки,			"ВСД_ОсобыеОтметки");
			СписокПараметров.ДобавитьЗначение( тзПартии,				"тзПартии");

			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД2_транзакцияПоТзПартий.ert");
			ДокументСсылка = "";

			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");
			КонецЕсли;

			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				Возврат "";
			КонецЕсли;
			// }
		Иначе
			// стандартное создание ВСД

			//тз = СоздатьОбъект("ТаблицаЗначений");
			//тзПартии.Выгрузить(тз);

			// ********* Получим нужные нам партии по фильтру Прод Элементов у Поставщик_ХозСубъект,  Поставщик_Площадка
			//ВремТз = СоздатьОбъект("ТаблицаЗначений");
			//тз.Выгрузить(ВремТз);
//
//			тз.Свернуть("ВСД_Продукция_Элемент","КолвоСписания,Колво");
//			СзПродукцияЭлементы = СоздатьОбъект("СписокЗначений");
//			тз.Выгрузить(СзПродукцияЭлементы,,,"ВСД_Продукция_Элемент");
			//ВремТз = "";
			//Состояние("Получение Актуальных Партий по "+ВыбПлощадка);
			//тзАктуальныхПартий = ГМ.ПолучитьАкуальныеПартииИзСправочника( СзПродукцияЭлементы, ВыбПлощадка, ХС );
			//Если (ПустоеЗначение(тзАктуальныхПартий) = 1) и (ПарамЗаполнятьВСДБезПартий = 0) Тогда
			//	Сообщить("Нет актуальных партий на предприятии "+ВыбПлощадка+" для создания перемещения ");
			//	Возврат "";
			//КонецЕсли;
			// ********** Получили Акт Партии по Поставщик_ХозСубъект,  Поставщик_Площадка
			Состояние("Заполнение ВСД2_Транзакция ");

			ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
			ДокВСД.Новый();
//			//ДокВСД.ДокОснование = СписокДокументов.Док;
//			Автор = ГМ.ПолучитьАвтора();
//			Попытка ДокВСД.Фирма = Поставщик_Фирма;Исключение КонецПопытки;       //ГМ.СписокКонстант.Получить("Поставщик_Фирма");
//			Попытка	ДокВСД.Автор = Автор;	Исключение	КонецПопытки;
//			Попытка	ДокВСД.Филиал = Автор.Филиал;	Исключение 	КонецПопытки;
//
//			ДокВСД.ДатаДок = ТекущаяДата();
			ДокВСД.Отправитель_ХозСубъект =  ХС;
			ДокВСД.Отправитель_Площадка = ВыбПлощадка;
			ДокВСД.Получатель_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Получатель_Площадка = Отправитель_Площадка;
			ДокВСД.Перевозчик_ХозСубъект = ХС;

			//остальные реквизиты документа заполним стандартно
			ГМ2.ЗаполнитьВСД2_Транзакция( ДокВСД, СписокДокументов.Док);
			
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();

//			ДокВСД.ТтнСерия = ""; //ТТН.Серия;
//			ДокВСД.ТтнНомер = ДокВСД.НомерДок;
//			ДокВСД.ТтнДата = ДокВСД.ДатаДок;
//			ДокВСД.номерАвто = СписокДокументов.номерАвто;//+ГМ.ПолучитьНомерАвто(ДокВСД.ДокОснование);
//
//		//	ДокВСД.Экспертиза 		= ВСД_Экспертиза;
//			ДокВСД.Местность 		= ВСД_Местность;
//			ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
//			ДокВСД.cargoExpertized  = 1;
//			ДокВСД.cargoInspected  	= 1;
//			ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");
//			//ДокВСД.ТермическоеСостояние = Перечисление.ВСД_ТермическиеУсловияПеревозки.ЗначениеПоНомеру(4);

//			тз.ВыбратьСтроки();  // Переберем Элементы из Необходимых ПродЭлементов
//			Пока тз.ПолучитьСтроку() = 1 Цикл
//
//				СтрокиПартий = ГМ.ПодобратьПартииПоПродукцияЭлемент(тзАктуальныхПартий,тз.ВСД_Продукция_Элемент, тз.КолвоСписания );
//
//				Если СтрокиПартий.КоличествоСтрок() = 0 Тогда
//					Если ПарамЗаполнятьВСДБезПартий = 1 Тогда
//						ДокВСД.НоваяСтрока();
//						ДокВСД.Количество			=  тз.КолвоСписания;// - тз.Колво;
//						ДокВСД.Продукция_Элемент 	= тз.ВСД_Продукция_Элемент;
//						ДокВСД.НаименованиеПродукции = тз.ВСД_Продукция_Элемент.Наименование;
//						ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
//						ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
//						//ЗаполнитьСтрокуДокумента(ДокВСД);
//
//						ГМ.ЗаполнитьСтрокуДокумента( ДокВСД, тз, ДокВСД);
//						Продолжить;
//					КонецЕсли;
//					Сообщить("Нет партий для ["+ тз.ВСД_Продукция_Элемент +"] Пропускаем!","!");
//				   	Продолжить;
//				КонецЕсли;
//
//				СтрокиПартий.ВыбратьСтроки();
//
//				Пока СтрокиПартий.ПолучитьСтроку() = 1 Цикл
//			        ДокВСД.НоваяСтрока();
//					ДокВСД.Партия 				= СтрокиПартий.Партия;
//					ДокВСД.Количество 			= СтрокиПартий.Колво;
//					ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Партия.ЕдиницаИзмерения;
//
//					ДокВСД.Продукция 			= ДокВСД.Партия.Продукция;
//					ДокВСД.ВидПродукции 		= ДокВСД.Партия.ВидПродукции;
//
//					ДокВСД.Продукция_Элемент 	= тз.ВСД_Продукция_Элемент;
//					//УстановитьТермическоеСостояние(ДокВСД,ДокВСД.Продукция_Элемент);
////					ДокВСД.ТермическоеСостояние = Мин( ДокВСД.Продукция_Элемент.ТермическиеУсловияПеревозки, ДокВСД.ТермическоеСостояние);
//					ДокВСД.НаименованиеПродукции = тз.ВСД_Продукция_Элемент.Наименование;
//
//					ГМ.ЗаполнитьСтрокуДокумента( ДокВСД, тз, ДокВСД);
//				КонецЦикла;
//
//				Если (СтрокиПартий.Итог("Колво") < (тз.КолвоСписания)) и (ПарамЗаполнятьВСДБезПартий = 1)  Тогда
//				//Добавим с пустыми партиями
//					ДокВСД.НоваяСтрока();
//					ДокВСД.Количество	=  тз.КолвоСписания - СтрокиПартий.Итог("Колво") ;
//					ДокВСД.Продукция_Элемент 	= тз.ВСД_Продукция_Элемент;
//					ДокВСД.НаименованиеПродукции = тз.ВСД_Продукция_Элемент.Наименование;
//					ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
//					ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
//					//ЗаполнитьСтрокуДокумента(ДокВСД);
//
//					ГМ.ЗаполнитьСтрокуДокумента( ДокВСД, тз, ДокВСД);
//				КонецЕсли;
//			КонецЦикла;
//			//ДокВСД.ТермическоеСостояние = ?( ПустоеЗначение(ДокВСД.ТермическоеСостояние) = 0, ДокВСД.ТермическоеСостояние, Перечисление.ВСД_ТермическиеУсловияПеревозки.ЗначениеПоНомеру(1));
////			ДокВСД.ТермическоеСостояние = ?( ДокВСД.ТермическоеСостояние = 0, 1, ДокВСД.ТермическоеСостояние);
//			ДокВСД.ТермическоеСостояние = ГМ.УстановитьТермическоеСостояние( ДокВСД );
//			ДокВСД.Записать();
//			ДокументСсылка = ДокВСД.ТекущийДокумент();
		КонецЕсли;

		Сообщить("Создан документ " + ДокументСсылка,"i");

		Возврат ДокументСсылка;
КонецФункции


Процедура ПереместитьВХС()
	// Переместить с 1 ХС на другой и Погасить
	ТВопроса = "Создать ВСД2_Транзакцию по списку партий
	|на перемещение ?";
	Если Вопрос(ТВопроса,"Да+Нет")="Нет" Тогда
	    Возврат;
	КонецЕсли;

	ДокВСД = СоздатьВСДПоТзПартий();

	Если ПустоеЗначение(ДокВСД) = 1 Тогда
	    Сообщить("Документ ВСД2_Транзакция не удалось создать");
		Возврат;
	КонецЕсли;

	ОткрытьФорму(ДокВСД);
	Сообщить("После гашения нажмите Выбрать Партии");
	Возврат;

	// Ниже Удалить после тестов
	ТВопроса = "Отправить и принять "+ДокВСД+" ?";
	Если Вопрос(ТВопроса,"Да+Нет")="Нет" Тогда
	    Возврат;
	КонецЕсли;

	рез = ГМ2.Отправить_ВСД2_Транзакция(ДокВСД);

	ДокОбъект = СоздатьОбъект("Документ");
	ДокОбъект.Найтидокумент(ДокВСД);

	Если НЕ(СокрЛП(ДокОбъект.Статус) = "COMPLETED") Тогда
		Сообщить("Неудача при отправке "+ДокОбъект,"!!");
		Возврат;
	КонецЕсли;
	ИмяОтвета = ГМ.Компонента.LogFilename;
   	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
   	Парам = СоздатьОбъект("СписокЗначений");
   	Парам.Установить("ФайлОтвета",ИмяОтвета);
   	Парам.Установить("Отправитель_ХозСубъект",ДокОбъект.Получатель_Хозсубъект);
   	Парам.Установить("Отправитель_Площадка",ДокОбъект.Получатель_Площадка);
   	Парам.Установить("Фирма",ГМ.ПолучитьФирмуПоХС(ДокОбъект.Получатель_Хозсубъект));
  	ОткрытьФормуМодально("Отчет", Парам, КаталогОбработки+"Меркурий_Гашение_ВСД2.ert");
	ЗаполнитьПартии();
	//Сообщить(ИмяОтвета);
КонецПроцедуры

Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
   	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
	СписокДокументов.УдалитьСтроки();
	тзПартии.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ


///******************************** ADirks 25.06.2018 ************
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	оПривязки.ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры
///******************************** ADirks 25.06.2018 ************

///******************************** ADirks 25.06.2018 ************
Процедура Привязки_Инит()
	//оПривязки = СоздатьОбъект("Меркурий.Привязки");
	//оПривязки.Инит(Контекст);

	//оПривязки.Добавить("кнОК, кнЗаписать, кнЗакрыть", "ВН", "Форма");
	//оПривязки.Добавить("текстВерсия", "ВН", "Форма");

	оПривязки.УстановитьФорму(Форма);
	оПривязки.Привязка("СписокДокументов", "H", "Форма", "W", "Форма");
	оПривязки.Привязка("тзНеобходимыеПартии", "H", "Форма", "W", "Форма");
	оПривязки.Привязка("тзПартииПроизводство", "H", "Форма", "W", "Форма");

КонецПроцедуры
///******************************** ADirks 25.06.2018 ************

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	оПривязки.ПослеОткрытия();
КонецПроцедуры

//=========================== ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ =============================

Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = Элемент.Контрагент;
		Если СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель")= СтараяПлощадка Тогда
			КонтФормы.Форма.Закрыть();
			Возврат;
		КонецЕсли;

		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если (ПустоеЗначение(СтараяПлощадка)=0) И
			(СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель")<> СтараяПлощадка) Тогда
			Если Вопрос("Выбранная площадка закреплена за "+Элемент.Контрагент+" Скопировать площадку?",4,30)=6 Тогда
				СпрПлощадка.Новый();
				СпрПлощадка.Наименование = Элемент.Наименование;
				СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
				СпрПлощадка.GUID = Элемент.GUID;
				СпрПлощадка.UUID = Элемент.UUID;
				СпрПлощадка.Адрес = Элемент.Адрес;
				СпрПлощадка.GuidХозСубъекта = Элемент.GuidХозСубъекта;
				СпрПлощадка.Склад = Элемент.Склад;
				СпрПлощадка.НомерПлощадки = Элемент.НомерПлощадки;
				СпрПлощадка.Записать();

			Иначе
				//замена контрагента в площадке

				Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка,0,0)=1 Тогда
					Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
						//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
						СпрПлощадка.Контрагент = "";
						СпрПлощадка.Записать();
					КонецЦикла;
				КонецЕсли;
				СпрПлощадка.НайтиЭлемент(Элемент);
				СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
				СпрПлощадка.Записать();

			КонецЕсли;
		Иначе
			СпрПлощадка.НайтиЭлемент(Элемент);
			СпрПлощадка.Контрагент = СписокДокументов.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
			СпрПлощадка.Записать();
		КонецЕсли;
		КонтФормы.Форма.Закрыть();

		СписокДокументов.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());

		//РаскраситьСписокДокументов( );
		ЗаполнитьСписокДокументов_Реализации();
	ИначеЕсли Элемент.Вид()="ВСД_Партия" Тогда
		КонтФормы.Форма.Закрыть();

		тзПартии.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		тзПартии.УстановитьЗначение(ВыбСтрока,"КолвоНаСкладе", Элемент.Количество);
		Попытка тзПартии.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест); Исключение КонецПопытки;
	ИначеЕсли Элемент.Вид()="Продукция_Элемент" Тогда
			Предупреждение("Выбран "+Элемент);
		//КонтФормы.Форма.Закрыть();

		//тзПартии.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		//тзПартии.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		//Попытка тзПартии.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест); Исключение КонецПопытки;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПринтеры()
	Перем Стр;
	//очистим список
	Принтер.УдалитьВсе();

	тзПринтеры = СоздатьОбъект("ТаблицаЗначений");
	тзПринтеры.НоваяКолонка("Имя");
	тзПринтеры.НоваяКолонка("Порт");

	//заполним список доступных принтеров
	Состояние("Заполняем список принтеров...");
    wshNetwork    = createObject("WScript.Network");
	oPrinters        = wshNetwork.EnumPrinterConnections();
	i = 0;
	Пока i < oPrinters.Count() - 1 Цикл
		//Если Найти(oPrinters.Item(i+1),"\\tsclient") > 0 Тогда
		//	i = i + 2;
		//	Продолжить;
		//КонецЕсли;
		тзПринтеры.НоваяСтрока();
		тзПринтеры.Имя = oPrinters.Item(i+1);
		тзПринтеры.Порт = oPrinters.Item(i);

		Принтер.ДобавитьЗначение(oPrinters.Item(i+1),oPrinters.Item(i+1));
		i = i + 2;
	КонецЦикла;

	//Принтер.ДобавитьЗначение("\\TSCLIENT\E","\\TSCLIENT\E"); // печать на принтере терминала по умолчанию

    //    Принтер по умолчанию
    wshPrint = CreateObject("WScript.Shell");
    Prn = СокрЛП(wshPrint.RegRead("HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Device")); //принтер по умолчанию, но вместе с портом
	Сч =  1;
	Пока Сч <= Принтер.РазмерСписка() Цикл
		Принтер.ПолучитьЗначение(Сч,Стр);
		Если Найти(Prn,Стр) > 0 Тогда
			//Это и есть принтер по умолчанию
			Прервать;
		КонецЕсли;
		Сч = Сч + 1;
		Стр = "";
	КонецЦикла;
	Принтер.ТекущаяСтрока(Сч);
	Форма.Принтер.Доступность(1);

КонецПроцедуры // ЗаполнитьПринтеры()

Процедура ПриОткрытии()
	Если Метаданные.Справочник("Номенклатура").Реквизит("ПодконтроленМеркурию").Выбран() = 0 Тогда
		Форма.кнСоздатьПродукцию.Доступность(0);
	КонецЕсли;

	ВыбФирма = "";
	ГМ._ПриОткрытии(Контекст);

	флФильтрПоСкладу = ВосстановитьЗначение("ФильтрПоСкладу");

	ЗаголовокНадпись();

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Реализации");
	Форма.Закладки.ДобавитьЗначение("Партии");
	Форма.Закладки.ДобавитьЗначение("Производство");
	Форма.Закладки.ДобавитьЗначение("Параметры");

	Форма.ИспользоватьСлой("Основной, СписокДокументов, Реализации");

	Партия = "";

	// Обработку можно вызвать для заполнения списка реализаций на основании маршрута
	// для этого в Маршрут в печатные формы добавьте ПечФорма_ВСД_ГрупповаяОбработка.ert
	//
	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда

		Если ПустоеЗначение(Парам)=0 тогда
			Для Д=1 По Парам.РазмерСписка() Цикл
				Док = Парам.ПолучитьЗначение(Д);
				СписокДокументов.НоваяСтрока();
				СписокДокументов.Пометка= 1;
				//СписокДокументов.инфо = ;
				СписокДокументов.Док = Док;
				//СписокДокументов.ВСД = ;
				СписокДокументов.Колво = Док.ВесДокумента;
				//СписокДокументов.Вес = Док.ВесДокумента;
				Попытка СписокДокументов.КолвоМест = Док.КоличествоМестДокумента; Исключение КонецПопытки;
				СписокДокументов.Контрагент = Док.Контрагент;
				СписокДокументов.Грузополучатель = Док.ПолучитьАтрибут( ГМ.ПолучитьКонстанту("НазваниеРеквизитаГрузополучатель") );
				СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(СписокДокументов.Контрагент);
				СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту(СписокДокументов.Грузополучатель);
			КонецЦикла;

			РаскраситьСписокДокументов();

			ВыделитьВсеДокументы();
		КонецЕсли;
	Иначе
		//стандартное заполнение документов
		//ЗаполнитьСписокДокументов_Реализации();
	КонецЕсли;
	//

	Если ПустоеЗначение( ГМ.ПолучитьКонстанту("ДобавлятьУпаковки") )=1 Тогда

		СписокДокументов.УдалитьКолонку("КолвоМест");

	КонецЕсли;

	ГМ.СписокФирм.Выгрузить(СписокФирм);
	Если СписокФирм.РазмерСписка() = 0 Тогда
		Предупреждение("Нет сохраненных настроек, обмен невозможен!");
		Возврат; СтатусВозврата(0);
	Иначе
		Поз = СписокФирм.НайтиЗначение(ВыбФирма);
		Если Поз <> 0 Тогда
			СписокФирм.ТекущаяСтрока(Поз);
		КонецЕсли;
		ПриИзмененииФирмы();
	КонецЕсли;

	ЗаполнитьПринтеры();

	Привязки_Инит(); //ADirks 25.06.2018
КонецПроцедуры

 // предопределенная процедура
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)

 	Если ЗначениеЗакладки="Реализации" Тогда
		Форма.ИспользоватьСлой("Основной, СписокДокументов, Реализации");
		//СписокДокументов.УдалитьСтроки();
		Если СписокДокументов.КоличествоСтрок()=0 Тогда
			ЗаполнитьСписокДокументов_Реализации();
		КонецЕсли;
	ИначеЕсли ЗначениеЗакладки="Партии" Тогда
		Форма.ИспользоватьСлой("Основной, Партии");
		//ЗаполнитьПартии();
	ИначеЕсли ЗначениеЗакладки="Производство" Тогда
		Форма.ИспользоватьСлой("Основной, Производство");
		ЗаполнитьПартииПроизводства();
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;

КонецПроцедуры


//ЖД доп
Процедура ПриИзмененииПлощадки()
	ГМ.СписокКонстант.Установить("Отправитель_Площадка",Отправитель_Площадка);
	//Обновить список документов
	СписокДокументов.УдалитьСтроки();
	тзПартии.УдалитьСтроки();
	ЗаполнитьСписокДокументов_Реализации();
КонецПроцедуры

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Процедура Создать_ВСД_Инв()
	Если тзНеобходимыеПартии.ВидимостьКолонки("ВСД_Производство") < 0 Тогда
		Сообщить("Отключите режим распределения партий","i");
		Возврат;
	КонецЕсли;
		Состояние("Создание ВСД_Инвентаризация ");
			ДокВСД = СоздатьОбъект("Документ.ВСД2_Инвентаризация");
			ДокВСД.Новый();
			ДокВСД.ДатаДок = НачДата;
			ДокВСД.Фирма=ВыбФирма;
			ДокВСД.Владелец_ХозСубъект = Отправитель_ХозСубъект;
			ДокВСД.Владелец_площадка = Отправитель_Площадка;
			ДокВСД.ПричинаРасхождения="Отсутсвие партий";
			ДокВСД.ОписаниеНесоответствия="Отсутсвие партий";
			Попытка	ДокВСД.Автор = ГМ.ПолучитьАвтора();;	Исключение 	КонецПопытки;
			Попытка	ДокВСД.Филиал = ДокВСД.Автор .Филиал;	Исключение	КонецПопытки;
			Попытка ДокВСД.Фирма = ВыбФирма; Исключение КонецПопытки;

	ВремтзПартии = СоздатьОбъект("ТаблицаЗначений");
	тзНеобходимыеПартии.Выгрузить(ВремтзПартии);
	ВремтзПартии.ВыбратьСтроки();
	Пока ВремтзПартии.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ВремтзПартии.ВСД_Производство)=0 Тогда
			Сообщить("В строке партий № "+ВремтзПартии.НомерСтроки+" указан документ. Пропускаем...");
			Продолжить;
		КонецЕсли;
		Если ВремтзПартии.КолвоНаСкладе >= ВремтзПартии.КолвоСписания Тогда
		    Продолжить;
		КонецЕсли;
		Если ПустоеЗначение(ВремтзПартии.ВСД_Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;

     	//ДокВСД.Местность 		= ВСД_Местность;
			//ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
			//ДокВСД.cargoExpertized  = 1;
			//ДокВСД.cargoInspected  	= 1;
			//ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");
			//ДокВСД.НоваяСтрока();
			//
			//ДокВСД.Продукция_Элемент 	= ВремтзПартии.ВСД_Продукция_Элемент;
			//ДокВСД.Количество 			= ВремтзПартии.КолвоСписания - ВремтзПартии.Колво; // ТЕСТ - разница
			//ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			//ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			//ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
			//ДокВСД.ВидДвижения 			= 1;
			//ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;

		разница= ВремтзПартии.КолвоСписания - ВремтзПартии.КолвоНаСкладе;
        // если разница>=0 тогда
        // 	Сообщить("В строке партий № "+ВремтзПартии.НомерСтроки+" достаточное количество. Пропускаем...");
		//	Продолжить;
		//КонецЕсли;
			ДокВСД.НоваяСтрока();

			ДокВСД.Продукция_Элемент 	= ВремтзПартии.ВСД_Продукция_Элемент;
			ДокВСД.Количество 			= разница;//тзПартии.КолвоСписания;
			Попытка ДокВСД.КоличествоМест 		= тзПартии.КолвоМестСписания;Исключение КонецПопытки;

			ДокВСД.Продукция 			= ДокВСД.Продукция_Элемент.Продукция;
			ДокВСД.ВидПродукции 		= ДокВСД.Продукция_Элемент.ВидПродукции;
		    ДокВСД.ЕдиницаИзмерения 	= ДокВСД.Продукция_Элемент.ЕдиницаИзмерения;
			ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование;
			ДокВСД.ДатаИзготовления1 = ГМ.Преобразовать_Дата_в_Строка(НачДата);
			Если КонДата>НачДата Тогда
				ДокВСД.ДатаИзготовления2 = ГМ.Преобразовать_Дата_в_Строка(КонДата);
			КонецЕсли;
			ДокВСД.ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка(НачДата+ДокВСД.Продукция_Элемент.СрокГодности);
			ДокВСД.Производитель_Страна	=гм.СписокКонстант.Получить("Страна");
			ДокВСД.Производитель_площадка=Отправитель_Площадка;
			ДокВСД.Записать();
			ДокументСсылка = ДокВСД.ТекущийДокумент();
		//тзПартии.ВСД_Производство = ДокументСсылка;


	КонецЦикла;
		Сообщить(" создан документ "+ДокументСсылка,"i");
		ОткрытьФорму( ДокументСсылка);
КонецПроцедуры//+

Процедура СоздатьПродукцию()
	//+
	Если Метаданные.Справочник("Номенклатура").Реквизит("ПодконтроленМеркурию").Выбран() = 0 Тогда
		Сообщить("Отсутствует реквизит ПодконтроленМеркурию в справочнике Номенклатура. Выполнение невозможно");
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_ХозСубъект)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_ХозСубъект ","!");
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(Отправитель_Площадка)=1 Тогда
		Сообщить("Не выбран параметр Отправитель_Площадка ","!");
		Возврат;
	КонецЕсли;
	//Если ПустоеЗначение(Перевозчик_ХозСубъект)=1 Тогда
	//	Сообщить("Не выбран параметр Перевозчик_ХозСубъект ","!");
	//	Возврат;
	//КонецЕсли;
	//+
	ТЗ = СоздатьОбъект("ТаблицаЗначений");
	ТЗ.НоваяКолонка("Номенклатура");

	СписокДокументов.ВыбратьСтроки();
	Пока СписокДокументов.ПолучитьСтроку() = 1 Цикл
		Если СписокДокументов.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		//	тз = ГМ.СвернутьТч();
		до=СписокДокументов.Док;
		до.ВыбратьСтроки();
		Пока до.ПолучитьСтроку() = 1 Цикл

			Если (до.Номенклатура.ПодконтроленМеркурию.Получить(ТекущаяДата()) = 1) И (ПустоеЗначение(до.Номенклатура.ВСД_Продукция_Элемент) = 1) Тогда
				ТЗ.НоваяСтрока();
				ТЗ.Номенклатура = до.Номенклатура;
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;

	Если ТЗ.КоличествоСтрок() > 0 Тогда
		ОбработкаСоздатьПродукция_Элемент = КаталогОбработки+"ВСД_СоздатьПродукция_Элемент.ert";
		Если ФС.СуществуетФайл(ОбработкаСоздатьПродукция_Элемент) = 0 Тогда
			Сигнал();
			Предупреждение("Не найдена обработка " + ОбработкаСоздатьПродукция_Элемент, 6 );
		Иначе
			Конт="";
			ОткрытьФормуМодально("Отчет",ТЗ,ОбработкаСоздатьПродукция_Элемент);
		КонецЕсли;
	КонецЕсли;	Если ТЗ.КоличествоСтрок() > 0 Тогда
	ОбработкаСоздатьПродукция_Элемент = КаталогОбработки+"ВСД_СоздатьПродукция_Элемент.ert";
	Если ФС.СуществуетФайл(ОбработкаСоздатьПродукция_Элемент) = 0 Тогда
		Сигнал();
		Предупреждение("Не найдена обработка " + ОбработкаСоздатьПродукция_Элемент, 6 );
	Иначе
		Конт="";
		ОткрытьФормуМодально("Отчет",ТЗ,ОбработкаСоздатьПродукция_Элемент);
	КонецЕсли;
КонецЕсли;

КонецПроцедуры
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("ФильтрПоСкладу", флФильтрПоСкладу);
КонецПроцедуры // ПриЗакрытии


НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

СписокДокументов.НоваяКолонка("сЦвет",,,,,1,);
СписокДокументов.ВидимостьКолонки("сЦвет",0);//Скроем раскраску
СписокДокументов.НоваяКолонка("Пометка",,,,,5,);
СписокДокументов.НоваяКолонка("Грузополучатель",,,,,70,);
СписокДокументов.НоваяКолонка("Площадка",,,,,30,);
СписокДокументов.НоваяКолонка("ВСД",,,,,10,);
СписокДокументов.НоваяКолонка("Отправлен",,,,,7,);
СписокДокументов.НоваяКолонка("Статус",,,,,10,);
СписокДокументов.НоваяКолонка("Колво","Число",10,3,,10,);
//СписокДокументов.НоваяКолонка("Вес",,,,,10,);
СписокДокументов.НоваяКолонка("КолвоМест",,,,,10,);
СписокДокументов.НоваяКолонка("НомерАвто",,,,,10,);//+
СписокДокументов.НоваяКолонка("Док",,,,,30,);
СписокДокументов.НоваяКолонка("Склад",,,,,10,);
СписокДокументов.НоваяКолонка("Контрагент",,,,,10,);
СписокДокументов.НоваяКолонка("ХозСубъект",,,,,10,);
СписокДокументов.ВыводитьПиктограммы("Пометка");

тзПартии = СоздатьОбъект("Таблицазначений");
тзПартии.НоваяКолонка("сЦвет",1,,,,1);
тзПартии.НоваяКолонка("ДокРеализации",,,,,20,);
тзПартии.НоваяКолонка("Номенклатура",,,,,20,);
тзПартии.НоваяКолонка("ВСД_Продукция_Элемент",,,,,20,);
тзПартии.НоваяКолонка("Партия",,,,,20,);
тзПартии.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
//тзПартии.НоваяКолонка("КолвоМест","Число",,,,5,);
тзПартии.НоваяКолонка("КолвоСписания","Число",,,,10,);
тзПартии.НоваяКолонка("ПолеСортировки",,,,,10,);
//тзПартии.НоваяКолонка("КолвоМестСписания","Число",,,,5,);
//тзПартии.НоваяКолонка("ВСД_Производство",,,,,3,);

//тзПартииПроизводство = СоздатьОбъект("Таблицазначений");
тзПартииПроизводство.НоваяКолонка("сЦвет",1,,,,1,);
//тзПартииПроизводство.НоваяКолонка("ДокРеализации",,,,,20,);
//тзПартииПроизводство.НоваяКолонка("Номенклатура",,,,,20,);
тзПартииПроизводство.НоваяКолонка("ВСД_Продукция_Элемент",,,,,20,);
//тзПартииПроизводство.НоваяКолонка("Партия",,,,,20,);
тзПартииПроизводство.НоваяКолонка("КолвоНаСкладе","Число",,,,10,);
//тзПартииПроизводство.НоваяКолонка("КолвоМест","Число",,,,5,);
тзПартииПроизводство.НоваяКолонка("КолвоСписания","Число",,,,10,);
//тзПартииПроизводство.НоваяКолонка("ПолеСортировки",,,,,10,);
//тзПартииПроизводство.НоваяКолонка("КолвоМестСписания","Число",,,,5,);
тзПартииПроизводство.НоваяКолонка("ВСД_Производство",,,,,3,);

ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
Сервис.ИспользоватьПланРаскраски(0);
