// Меркурий_Интеграция.ert = модуль для замены стандартных функций ГМ (Глобального Модуля)
// для кастомизации модуля внедрения под конфигурацию заказчика
// ВНИМАНИЕ:
// При обновлении этот модуль НЕ ОБНОВЛЯТЬ
//
// ===============================================================
// Автор Анисимов Михаил mbIkola
// AnisimovM(не кошка)mail.ru
// сентябрь 2017

перем ГМ;

//{Служебные функции

Функция Этот(Конт) 	Возврат Конт; КонецФункции
Функция Сам() 	Возврат Этот(Контекст); КонецФункции

Процедура Конструктор()
КонецПроцедуры

Процедура Деструктор() 
КонецПроцедуры

Функция Инициализация(модульМеркурий) Экспорт
	
	ГМ = модульМеркурий;
	
	//Здесь описываются все функции которые будут переопределены
	ГМ.ПереопределитьФункцию("ПолучитьИНН", Сам());
	ГМ.ПереопределитьФункцию("ПолучитьКПП", Сам());
	ГМ.ПереопределитьФункцию("ПолучитьФактАдрес", Сам());		
	ГМ.ПереопределитьФункцию("ПолучитьЮрАдрес", Сам());
	ГМ.ПереопределитьФункцию("ПолучитьНаименованиеКлиента", Сам());
	//ГМ.ПереопределитьФункцию("ПолучитьТзРеализаций", Сам());			
	
КонецФункции // Инициализация
//}

Функция ПолучитьИНН(ВыбКлиент) экспорт 			//пример переопределения функции ПолучитьИНН
	Попытка
		ИННКПП = ВыбКлиент.Инн;
	Исключение
		ИННКПП = "";
	КонецПопытки;

	Если Найти(ИННКПП, "\") <> 0 Тогда
		// найден разделитель
		Возврат Лев(ИННКПП, Найти(ИННКПП, "\") - 1);

	ИначеЕсли Найти(ИННКПП, "/") <> 0 Тогда
		// найден разделитель
		Возврат Лев(ИННКПП, Найти(ИННКПП, "/") - 1);
	Иначе
		Возврат СокрЛП(ИННКПП);
	КонецЕсли;	
	//Возврат _ИНН;
КонецФункции // 

Функция ПолучитьКПП(ВыбКлиент) экспорт 			//пример переопределения функции ПолучитьИНН
	ИННКПП = ВыбКлиент.ИНН;

	Если Найти(ИННКПП, "\") <> 0 Тогда
		// найден разделитель
		Возврат Сред(ИННКПП, Найти(ИННКПП, "\") + 1);

	ИначеЕсли Найти(ИННКПП, "/") <> 0 Тогда
		// найден разделитель
		Возврат Сред(ИННКПП, Найти(ИННКПП, "/") + 1);
	Иначе
		Возврат "";
	КонецЕсли;	

КонецФункции // 


Функция ПолучитьФактАдрес(ВыбКлиент) экспорт

	Возврат  СокрЛП(ВыбКлиент.ПочтовыйАдрес);
	
КонецФункции

Функция ПолучитьЮрАдрес(ВыбКлиент) экспорт

	Возврат  СокрЛП(ВыбКлиент.ЮридическийАдрес);
	
КонецФункции

Функция ПолучитьНаименованиеКлиента(ВыбКлиент) экспорт

	Возврат  СокрЛП(ВыбКлиент.ПолнНаименование);
	
КонецФункции

// Получение списка документов Реализаций за период с отбором по ВыбКонтрагенту
// Возвращаемое значение: ТаблицаЗначений
Функция ПолучитьТзРеализаций( спПараметры ) Экспорт

	t1 = ГМ.Старт();		
	
		
	Состояние("Запрос списка документов ");
	НачДата 		= спПараметры.Получить("НачДата");
	КонДата 		= спПараметры.Получить("КонДата");
	ВыбКонтрагент 	= спПараметры.Получить("ВыбКонтрагент");
	ВыбФирма 		= спПараметры.Получить("ВыбФирма");
	Версия2 		= спПараметры.Получить("Версия2");
	Площадка 		= спПараметры.Получить("Площадка");
	флФильтрПоСкладу= спПараметры.Получить("флФильтрПоСкладу");

	// Позже продолжить несколько видов реализаций через ",", в запросе через функцию COALESCE
	//
	//СписокДокументов = глРазложить(НазваниеВидаДокументаРеализация);
	//Для СЦ = 1 По СписокДокументов.РазмерСписка() Цикл
	//	Сообщить(СписокДокументов.ПолучитьЗначение(СЦ));
	//КонецЦикла;

	НазваниеВидаСправочникаФирмы		= ГМ.ПолучитьКонстанту("НазваниеВидаСправочникаФирмы");
	НазваниеВидаДокументаРеализация 	= ГМ.ПолучитьКонстанту("НазваниеВидаДокументаРеализация");
	НазваниеРеквизитаКонтрагент	 		= ГМ.ПолучитьКонстанту("НазваниеРеквизитаКонтрагент");
	НазваниеРеквизитаГрузополучатель 	= ГМ.ПолучитьКонстанту("НазваниеРеквизитаГрузополучатель");
	НазваниеРеквизитаНоменклатура		= ГМ.ПолучитьКонстанту("НазваниеРеквизитаНоменклатура");
	НазваниеРеквизитаКоличество 		= ГМ.ПолучитьКонстанту("НазваниеРеквизитаКоличество");
	НазваниеРеквизитаКоличествоМест 	= ГМ.ПолучитьКонстанту("НазваниеРеквизитаКоличествоМест");
	ПропускатьПустыеСвойства 			= ГМ.ПолучитьКонстанту("ПропускатьПустыеСвойства");

	Если ПустаяСтрока(НазваниеВидаСправочникаФирмы) = 1 Тогда
		Если ГМ.ПолучитьКонстанту("ВыводитьПодробнуюИнформацию")=1 Тогда 
			Сообщить("В Параметрах не указано НазваниеВидаСправочникаФирмы!","!"); //Возврат "";
		КонецЕсли;
	КонецЕсли;
	Если ПустаяСтрока(НазваниеРеквизитаГрузополучатель) = 1 Тогда
		Сообщить("Не выбрано название реквизита грузополучатель!","!"); Возврат "";
	КонецЕсли;

	ВидГрузополучателя = Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки(НазваниеРеквизитаГрузополучатель).Вид;
                        
	//НазваниеРеквизитаНоменклатура = "Номенклатура";
	ФирмаИмяРеквизита = "";
	ФирмаОбщийРеквизит = ГМ.ПолучитьИмяРеквизитаФирма(НазваниеВидаДокументаРеализация, ФирмаИмяРеквизита);

	ФильтрПоСкладу = 0;
	Если флФильтрПоСкладу = 1 Тогда
		Если ПустоеЗначение(Площадка) = 0 Тогда
			ВидСтравочникаСклады = Метаданные.Справочник("ВСД_Площадка").Реквизит("Склад").Вид;
			Если ПустаяСтрока(ВидСтравочникаСклады) = 1 Тогда
				ВидСтравочникаСклады = Метаданные.Справочник("ВСД_СкладыПлощадок").Реквизит("Склад").Вид;
			КонецЕсли;

			Если ПустаяСтрока(ВидСтравочникаСклады) = 0 Тогда
				СписокСкладов = СоздатьОбъект("СписокЗначений");
				Если ПустоеЗначение(Площадка.Склад) = 0 Тогда
					СписокСкладов.ДобавитьЗначение(Площадка.Склад);
				КонецЕсли;
				Спр = СоздатьОбъект("Справочник.ВСД_СкладыПлощадок");
				Спр.ИспользоватьВладельца(Площадка);
				Спр.ВыбратьЭлементы();
				Пока Спр.ПолучитьЭлемент() = 1 Цикл
					Если ПустоеЗначение(Спр.Склад) = 0 Тогда
						СписокСкладов.ДобавитьЗначение(Спр.Склад);
					КонецЕсли;
				КонецЦикла;

				Если СписокСкладов.РазмерСписка() > 0 Тогда
					ВыбСклад = Площадка.Склад;
					Для nn = 1 По Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки() Цикл
						Рекв = Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки(nn).Вид;
						Если Рекв = ВидСтравочникаСклады Тогда
							ФильтрПоСкладу = 1;
							СкладИмяРеквизита = Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки(nn).Идентификатор;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Попытка
		Если ГМ.ЭтоSQL=1 Тогда

			ТекстЗапроса = "
			|SELECT DISTINCT
			|    Жур.IDDoc as [Док $Документ],
			|    Жур.IDDocDef as Док_вид,
			|	COALESCE(ДокВСД.IDDoc, $ПустойИД) as [ДокВСД $Документ.ВСД_транзакция],
			|	ДокВСД.Статус as [Статус],
			|	ДокВСД.Отправлен as [Отправлен],
			|	Жур.DocNo as [НомерДок],
			|	$ДокР."+ НазваниеРеквизитаКонтрагент +" as [Контрагент $Справочник.Контрагенты],
			|	$ДокР."+ НазваниеРеквизитаГрузополучатель +" as [Грузополучатель $Справочник."+ ВидГрузополучателя +"],
			|	%ФункцияКоличество% as [Количество],
			|	%ФункцияКоличествоМест% as [КоличествоМест]
			|
			|FROM
			|    _1SJourn Жур
			|INNER JOIN
			|	$Документ."+ НазваниеВидаДокументаРеализация +" as ДокР
			|		ON Жур.IDDoc = ДокР.IDDoc
			|Left join
			//| исключаем помеченные на удаление документы ВСД_транзакция, иначе дублируются Реализации с пустыми ВСД
			//|	$Документ.ВСД_транзакция as ДокВСД
			|	(SELECT 
			|	Жур.IDDoc as IDDoc,
			|	COALESCE($ДокВСД_1.Статус, $ПустойИД) as [Статус],
			|	CASE
			|		WHEN $ДокВСД_1.applicationID <> ''
			|		THEN 'Да'
			|		ELSE 'Нет'
			|	END as [Отправлен],
			|	$ДокВСД_1.ДокОснование as ДокОснование
			|	FROM
			|   	_1SJourn Жур
			|	INNER JOIN
			|		$Документ.ВСД_транзакция as ДокВСД_1
			|			ON Жур.IDDoc = ДокВСД_1.IDDoc
			// ВСД тоже фильтруем по фирме !!!
			|				%УсловиеПоФирме%
			|WHERE
			| Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~
			| AND Жур.ISMARK = 0
			|	) as ДокВСД
			|	ON SUBSTRING(ДокВСД.ДокОснование, 5, 9) = Жур.IDDoc	
			|
			|WHERE
			|    Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = $ВидДокумента."+ НазваниеВидаДокументаРеализация +"
			|	and Жур.Closed & 1 = 1
			|
			|	and %ФункцияКоличество%  > 0
			|
			|	%УсловиеПоГрузополучателю%
			|	%УсловиеПоФирме%
			|	%УсловиеПоСкладу%
			|
			|order by Жур.DocNo
			|";

			Если ПустоеЗначение(Версия2) = 0 Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВСД_транзакция", "ВСД2_транзакция");
			КонецЕсли;

			Если ПропускатьПустыеСвойства = 0 Тогда
				ФункцияКоличество = " 
				| (SELECT SUM( $ДокСтроки1."+НазваниеРеквизитаКоличество+")
				|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки1
				|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
				|   AND $ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0) ";
				ФункцияКоличествоМест = " 
				| (SELECT SUM( $ДокСтроки2."+НазваниеРеквизитаКоличествоМест+" )
				|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки2
				|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
				|   AND $ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0) ";
			Иначе
				ФункцияКоличество = " 
				| (SELECT SUM( $ДокСтроки1."+НазваниеРеквизитаКоличество+")
				|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки1
				|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
				|   AND $ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0
				|   AND EXISTS(SELECT $Спр1.ВСД_Продукция_Элемент
				|      FROM $Справочник.ВСД_Номенклатура_Соответсвия AS Спр1
				|      WHERE  $Спр1.ВСД_Продукция_Элемент <> $ПустойИД 
				|		AND Спр1.ISMARK = 0
				|       AND Спр1.ParentExt = $ДокСтроки1."+НазваниеРеквизитаНоменклатура+")) ";				
				ФункцияКоличествоМест = " 
				| (SELECT SUM( $ДокСтроки2."+НазваниеРеквизитаКоличествоМест+")
				|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки2
				|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
				|   AND $ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0
				|   AND EXISTS(SELECT $Спр2.ВСД_Продукция_Элемент
				|      FROM $Справочник.ВСД_Номенклатура_Соответсвия AS Спр2
				|      WHERE  Спр2.ParentExt = $ДокСтроки2."+НазваниеРеквизитаНоменклатура+"
				|		AND Спр2.ISMARK = 0)) ";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличество%", ФункцияКоличество );
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличествоМест%", ФункцияКоличествоМест );
			
			
			УсловиеПоГрузополучателю = "";
			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда
				Если ВыбКонтрагент.ЭтоГруппа() = 1 Тогда
					УсловиеПоГрузополучателю = " and $ДокР."+ НазваниеРеквизитаГрузополучатель +" IN (SELECT Val FROM #ГруппаК) ";
					ГМ.RS.УложитьСписокОбъектов(ВыбКонтрагент, "#ГруппаК","Контрагенты");
				Иначе
					УсловиеПоГрузополучателю = " AND $ДокР."+НазваниеРеквизитаГрузополучатель+" = :ВыбКонтрагент ";
					ГМ.RS.УстановитьТекстовыйПараметр("ВыбКонтрагент", ВыбКонтрагент);
				КонецЕсли;								
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);

			//условие по фирме
			УсловиеПоФирме="";
			Если ПустоеЗначение(ВыбФирма) = 0 Тогда
				Если ФирмаОбщийРеквизит > 0 Тогда
					Если ФирмаОбщийРеквизит = 1 Тогда
						УсловиеПоФирме = " and Жур.$ОбщийРеквизит."+ФирмаИмяРеквизита+" = :ВыбФирма";
					Иначе
						УсловиеПоФирме = " and $ДокР."+ФирмаИмяРеквизита+" = :ВыбФирма";
					КонецЕсли;
					ГМ.RS.УстановитьТекстовыйПараметр("ВыбФирма", ВыбФирма);
				КонецЕсли;
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);

			//условие по складу
			УсловиеПоСкладу = "";
			Если ФильтрПоСкладу = 1 Тогда
				Если СписокСкладов.РазмерСписка() = 1 Тогда
					УсловиеПоСкладу = " and $ДокР."+СкладИмяРеквизита+" = :ВыбСклад";
					ГМ.RS.УстановитьТекстовыйПараметр("ВыбСклад", СписокСкладов.ПолучитьЗначение(1));
				Иначе
					УсловиеПоСкладу = " and $ДокР."+ СкладИмяРеквизита +" IN (SELECT Val FROM #Склады) ";
					ГМ.RS.УложитьСписокОбъектов(СписокСкладов, "#Склады",ВидСтравочникаСклады);
				КонецЕсли;
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСкладу%", УсловиеПоСкладу);

			ГМ.RS.УстановитьТекстовыйПараметр("НачДата", НачДата);
			ГМ.RS.УстановитьТекстовыйПараметр("КонДата", КонДата);

			//RS.Отладка(1);
			ТЗ = ГМ.RS.ВыполнитьИнструкцию(ТекстЗапроса);
			//ТЗ.ВыбратьСтроку();

		Иначе

			Запрос = ГМ.базаДанных.НовыйЗапрос();

			ТекстЗапроса = "
			|SELECT
			|    Жур.IDDoc as [Док :Документ],
			|    Жур.IDDocDef as Док_вид,
			|	Жур.DocNo as [НомерДок],
			|	COALESCE(ДокВСД.IDDoc, :ПустойИД) as [ДокВСД :Документ.ВСД_транзакция],
			|	ДокВСД.Статус as [Статус],
			|	ДокВСД.Отправлен as [Отправлен],
			|	ДокР."+ НазваниеРеквизитаКонтрагент +" as [Контрагент :Справочник.Контрагенты],
			|	ДокР."+ НазваниеРеквизитаГрузополучатель +" as [Грузополучатель :Справочник."+ ВидГрузополучателя +"],
			|
			|	%ФункцияКоличество% as [Количество],
			|	%ФункцияКоличествоМест% as [КоличествоМест]
			|
			|FROM
			|    Журнал Жур
			|INNER JOIN
			| [Документ."+НазваниеВидаДокументаРеализация+"] AS ДокР
			|  ON Жур.IDDoc = ДокР.IDDoc
			|  %УсловиеПоГрузополучателю%
			|  %УсловиеПоСкладу%
			|Left join
			//| исключаем помеченные на удаление документы ВСД_транзакция, иначе дублируются Реализации с пустыми ВСД
			//|	$Документ.ВСД_транзакция as ДокВСД
			|	(SELECT 
			|	Жур.IDDoc as IDDoc,
			|	COALESCE(ДокВСД_1.Статус, :ПустойИД) as [Статус],
			|	CASE
			|		WHEN ДокВСД_1.applicationID <> ''
			|		THEN 'Да'
			|		ELSE 'Нет'
			|	END as [Отправлен],
			|	ДокВСД_1.ДокОснование as ДокОснование
			|	FROM
			|   	Журнал Жур
			|	INNER JOIN
			|		[Документ.ВСД_транзакция] as ДокВСД_1
			|			ON Жур.IDDoc = ДокВСД_1.IDDoc
			// ВСД тоже фильтруем по фирме !!!
			//|				%УсловиеПоФирмеВСД%
			|WHERE
			| Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~
			| AND Жур.ISMARK = ''			
			|	) as ДокВСД
			|	ON SUBSTR(ДокВСД.ДокОснование, 5, 9) = Жур.IDDoc	
			|
			|WHERE
			|    Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = :ВидДокумента."+НазваниеВидаДокументаРеализация+"
			|	and Жур.Closed & 1 = 1
			|
			|	and  %ФункцияКоличество% >0
			|
			//|	%УсловиеПоФирме%
			|
			|ORDER BY Жур.DocNo
			|";

			УсловиеПоГрузополучателю = "";

			Если ПустоеЗначение(Версия2) = 0 Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВСД_транзакция", "ВСД2_транзакция");
			КонецЕсли;

			Если ПропускатьПустыеСвойства = 0 Тогда
				ФункцияКоличество = " 
				| (SELECT TOTAL(ДокСтроки1."+НазваниеРеквизитаКоличество+")
				|  FROM [ДокументСтроки."+НазваниеВидаДокументаРеализация+"] AS ДокСтроки1
				|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
				|   AND ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0) ";
				ФункцияКоличествоМест = "
				| (SELECT TOTAL(ДокСтроки2."+НазваниеРеквизитаКоличествоМест+")
				|  FROM [ДокументСтроки."+НазваниеВидаДокументаРеализация+"] AS ДокСтроки2
				|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
				|   AND ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0) ";
			Иначе
				ФункцияКоличество = " 
				| (SELECT TOTAL(ДокСтроки1."+НазваниеРеквизитаКоличество+")
				|  FROM [ДокументСтроки."+НазваниеВидаДокументаРеализация+"] AS ДокСтроки1
				|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
				|   AND ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0
				|   AND EXISTS(
				|		SELECT Спр1.ВСД_Продукция_Элемент
				|      FROM [Справочник.ВСД_Номенклатура_Соответсвия] AS Спр1
				|      WHERE  Спр1.ParentExt = ДокСтроки1."+НазваниеРеквизитаНоменклатура+"
				|		AND Спр1.ISMARK = '' ) 
				|	) ";
				ФункцияКоличествоМест = "
				| (SELECT TOTAL(ДокСтроки2."+НазваниеРеквизитаКоличествоМест+")
				|  FROM [ДокументСтроки."+НазваниеВидаДокументаРеализация+"] AS ДокСтроки2
				|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
				|   AND ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0
				|   AND EXISTS(SELECT Спр2.ВСД_Продукция_Элемент
				|      FROM [Справочник.ВСД_Номенклатура_Соответсвия] AS Спр2
				|      WHERE  Спр2.ParentExt = ДокСтроки2."+НазваниеРеквизитаНоменклатура+"
				|		AND Спр2.ISMARK = '' )) ";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличество%", ФункцияКоличество );
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличествоМест%", ФункцияКоличествоМест );
						
			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда
				Если ВыбКонтрагент.ЭтоГруппа() = 1 Тогда
					УсловиеПоГрузополучателю = " AND ДокР."+НазваниеРеквизитаГрузополучатель+" IN (SELECT Val FROM ГруппаК) ";
					ГМ.базаДанных.УложитьОбъекты(ВыбКонтрагент, "ГруппаК", "Контрагенты");
				Иначе
					УсловиеПоГрузополучателю = " AND ДокР."+НазваниеРеквизитаГрузополучатель+" = :ВыбКонтрагент ";
					Запрос.Подставлять("ВыбКонтрагент", ВыбКонтрагент);
				КонецЕсли;				
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);

			//условие по фирме
			УсловиеПоФирме="";
			УсловиеПоФирмеВСД="";
			//Если ПустоеЗначение(ВыбФирма) = 0 Тогда
			//	Если ФирмаОбщийРеквизит > 0 Тогда
			//		Если ФирмаОбщийРеквизит = 1 Тогда
			//			УсловиеПоФирме = " and Жур."+ФирмаИмяРеквизита+" = :ВыбФирма";
			//			УсловиеПоФирмеВСД = УсловиеПоФирме;
			//		ИначеЕсли ФирмаОбщийРеквизит = 2 Тогда
			//			УсловиеПоФирме = " and ДокР."+ФирмаИмяРеквизита+" = :ВыбФирма";
			//			УсловиеПоФирмеВСД = ""
			//		КонецЕсли;
			//		Запрос.Подставлять("ВыбФирма", ВыбФирма);
			//	КонецЕсли;
			//КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирмеВСД%", УсловиеПоФирмеВСД);

			//условие по складу
			УсловиеПоСкладу = "";
			Если ФильтрПоСкладу = 1 Тогда
				Если СписокСкладов.РазмерСписка() = 1 Тогда
					УсловиеПоСкладу = " and ДокР."+СкладИмяРеквизита+" = :ВыбСклад";
					Запрос.Подставлять("ВыбСклад", СписокСкладов.ПолучитьЗначение(1));
				Иначе
					УсловиеПоСкладу = " and ДокР."+ СкладИмяРеквизита +" IN (SELECT Val FROM Склады) ";
					ГМ.базаДанных.УложитьОбъекты(СписокСкладов, "Склады",ВидСтравочникаСклады);
				КонецЕсли;
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСкладу%", УсловиеПоСкладу);

			//Запрос.Подставлять("ВыбКлиент", ВыбКлиент);
			Запрос.Подставлять("НачДата", НачДата);
			Запрос.Подставлять("КонДата", КонДата);

			Запрос.Отладка();
			ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
			ТЗ.ВыбратьСтроку();
		КонецЕсли;
	Исключение
		ГМ.СообщитьОбОшибке("Не удалось выполнить запрос по документам. Проверьте параметры
		|"+ ОписаниеОшибки(),,"НомерСтрокиМдуля(7940)");
		
		тз = СоздатьОбъект("ТаблицаЗначений");
	КонецПопытки;

	ГМ.Финиш(t1, Сам(), "ПолучитьТзРеализаций", );
	
	Состояние("");
	возврат ТЗ;
КонецФункции

