Перем ТП;
Перем ТаблЧасть;
Перем оПривязки Экспорт;
Перем ВыбФирма Экспорт;


Процедура НомерИПрефикс(ВыбДок,_Номер,_Префикс)
	_Номер = глНомерНапечать(ВыбДок);
	Вход = Найти(ВыбДок.НомерДок,СокрЛП(_Номер));
	Если Вход>1 тогда
		_Префикс = Лев(ВыбДок.НомерДок,Вход-1);
	Иначе
		_Префикс = "";
	КонецЕсли;
КонецПроцедуры

Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	Форма.ИспользоватьСлой(ЗначениеЗакладки);
КонецПроцедуры

Процедура ПриВыбореРеализации()
	Если ВыбРеализация.Выбран() = 0 Тогда
		ВыбНомерДок = "";
		Возврат;
	КонецЕсли;
	//Внимание - стандартная функция конфигурации !!!
	_Номер = ""; _Префикс="";
	НомерИПрефикс(ВыбРеализация,_Номер,_Префикс);
	ВыбНомерДок = _Номер;
	Префикс = _Префикс;
КонецПроцедуры

Процедура ПриИзмененииФирмы()
	ГМ.Инициализация(Контекст);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);
    НазначитьВид(ВыбРеализация,ГМ.ПолучитьКонстанту("НазваниеВидаДокументаРеализация"));
КонецПроцедуры

Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());
		ПриИзмененииФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

// Вкладка Реализации


Процедура кнЗаполнитьРеализации()
	тзРеализации.УдалитьСтроки();
	Док = СоздатьОбъект("Документ."+ГМ.ПолучитьКонстанту("НазваниеВидаДокументаРеализация"));
	Док.УстановитьФильтр(1,0,1,1,1,1);
	НачатьТранзакцию();
	Док.Выбратьдокументы(НачалоПериода,КонецПериода);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если ВыбКонтрагент.Выбран() = 1 Тогда
		    Если НЕ(Док.Контрагент = ВыбКонтрагент) Тогда
		        Продолжить;
		    КонецЕсли;
		КонецЕсли;
		тзРеализации.НоваяСтрока();
		тзРеализации.Пометка = 2;
		тзРеализации.Реализация = Док.ТекущийДокумент();
		//Внимание - стандартная функция конфигурации !!!
		_Номер = ""; _Префикс="";
		НомерИПрефикс(тзРеализации.Реализация,_Номер,_Префикс);
		тзРеализации.НомерДок = _Номер;
		тзРеализации.ПрефиксНомера = _Префикс;
		//НомерИПрефикс(тзРеализации.Реализация,тзРеализации.НомерДок,тзРеализации.ПрефиксНомера);
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура ОтменитьВсеДокументы()
	ТзРеализации.ВыбратьСтроки();
	Пока ТзРеализации.ПолучитьСтроку() = 1 Цикл
		ТзРеализации.Пометка=1;
	КонецЦикла;

КонецПроцедуры

Процедура ВыделитьВсеДокументы()
	ТзРеализации.ВыбратьСтроки();
	Пока ТзРеализации.ПолучитьСтроку() = 1 Цикл
		ТзРеализации.Пометка=2;
	КонецЦикла;
КонецПроцедуры

Процедура КликРеализации()
	Если ТзРеализации.ТекущаяСтрока() = 0 Тогда
	    Возврат;
	КонецЕсли;
	текСтр = ТзРеализации.ТекущаяСтрока();
	текКол = ТзРеализации.ТекущаяКолонка();

	Если текКол="Пометка" Тогда
		Пометка = ТзРеализации.Пометка;
		Если Пометка = 2 Тогда
			ТзРеализации.Пометка=1;
		Иначе
			ТзРеализации.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол = "Реализация" Тогда
		//не открывает, зараза
		Эл = ТзРеализации.ПолучитьЗначение(текСтр, текКол);
		ОткрытьФорму(Эл);
	Иначе
		текЗн = ТзРеализации.ПолучитьЗначение(ТекСтр, текКол);
		ВвестиЗначение(текЗн, "","Строка",100);
		ТзРеализации.УстановитьЗначение(текСтр, текКол, текЗн);
	КонецЕсли;
КонецПроцедуры

//********************************

//<issueDate>2018-08-09T00:00:00</issueDate>
Функция ДатаСтрока( ДатаСтр )
	год = лев(ДатаСтр,4);
	мес = сред(ДатаСтр,6,2);
	дат = сред(ДатаСтр,9,2);

	Возврат Дата(год, мес, дат);

КонецФункции

Функция ОбъединитьТЗ(тз1, тз2);
	//тз = СоздатьОбъект("ТаблицаЗначений");
	//тз2 = СоздатьОбъект("ТаблицаЗначений");
	//тз1.Выгрузить(тз);
	Для А=1 По тз2.КоличествоСтрок() Цикл
		тз1.НоваяСтрока();
		Для Б=1 По тз2.КоличествоКолонок() Цикл
			зн = тз2.ПолучитьЗначение(А,Б);
//			Сообщить(зн);
			Попытка
				тз1.УстановитьЗначение(тз1.НомерСтроки, Б, зн);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;

	Возврат тз1;
КонецФункции

Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)

	Если (ЭлементДиалога = "ФайлОтвета") Тогда
		иф=""; ик="";
		ФС.ВыбратьФайл(0,иф,ик,"Выберите файл с ответом Меркурия:","(*.xml)|*.xml","xml",60);
		ФайлОтвета = ик+иф;
		ФлагПродолжения = 0;
	ИначеЕсли ( ЭлементДиалога = "ФайлНомераМашин" ) Тогда
		иф=""; ик="";
		ФС.ВыбратьФайл(0,иф,ик,"Выберите файл с ответом Меркурия:","(*.xml)|*.xml","xml",60);
		ФайлНомераМашин = ик+иф;
		ФлагПродолжения = 0;
	КонецЕсли;

КонецПроцедуры


Функция СоздатьТзМаршрутСледования()
	//Маршурт = СоздатьОбъект("ТаблицаЗначений");
	Маршурт = ГМ2.СоздатьТзМаршрутСледования();
	Маршурт.НоваяКолонка("НомерТС_ТранспортнаяКомпания","Строка",50,,"Номер ТС Траспортная Компания",10);
	Маршурт.НоваяКолонка("Прицеп_ТранспортнаяКомпания","Строка",50,,"Прицеп ТК",10);
	Маршурт.НоваяКолонка("Контейнер_ТранспортнаяКомпания","Строка",50,,"Контейнер ТК",10);

	Маршурт.НоваяКолонка("ВСД","Документ.ВСД2",10,,"ВСД",20);
	Маршурт.НоваяКолонка("Реализация",,10,,"Реализация",20);
	Маршурт.НоваяКолонка("ВСД2_ОбновитьТранспорт","Документ.ВСД2_ОбновитьТранспорт",10,,"ВСД2_ОбновитьТранспорт",20);

	Маршурт.НоваяКолонка("Пометка",,,,,5,);
	Возврат Маршурт;
КонецФункции

//*******************************************
Процедура ПриОткрытии()
	ВыбФирма = "";

	//Порядок колонок имеет значние при сохранинии в Файл / восстановлении => структура должна быть единообразна
	//ТаблЧасть = СоздатьОбъект("ТаблицаЗначений");
	ТаблЧасть = СоздатьТзМаршрутСледования();

	ГМ._ПриОткрытии(Контекст);
    НазначитьВид(ВыбРеализация,ГМ.ПолучитьКонстанту("НазваниеВидаДокументаРеализация"));
	оПривязки.Привязка("ТаблПоле","H","Форма","LW","Форма");

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Маршруты");
	Форма.Закладки.ДобавитьЗначение("Реализации");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	Форма.ИспользоватьСлой("Основной");
	_Service = ВосстановитьЗначение("SDGService");
	_Login = ВосстановитьЗначение("SDGLogin");
	_Password = ВосстановитьЗначение("SDGPassword");
КонецПроцедуры

//======================================================================
Процедура ПриЗакрытии()
	СохранитьЗначение("SDGService",_Service);
	СохранитьЗначение("SDGLogin",_Login);
	СохранитьЗначение("SDGPassword",_Password);
КонецПроцедуры

Процедура ПослеСозданияФормы()

	ТП = ГМ.СоздатьТабличноеПоле(Контекст, "ТаблПоле", ТаблЧасть,,1);

	Если ТаблЧасть.КоличествоСтрок() > 0 Тогда
		ТП.ТекущаяСтрока = 1;
	КонецЕсли;

КонецПроцедуры

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

Функция МаршрутСледования_из_XML(Routelist) Экспорт
    // Упрощенная схема - выбраны Площадки, а не ручная запись адреса
	//ТЗточкиМаршрута = СоздатьОбъект("ТаблицаЗначений");
	ТЗточкиМаршрута = СоздатьТзМаршрутСледования();

	//Попытка
	    Для l1 = 0 По Routelist.length - 1 Цикл
			Узел = Routelist.item(l1);
			ТЗточкиМаршрута.НоваяСтрока();
            //Попытка ТЗточкиМаршрута.UUID					 = 		Узел.selectSingleNode("uuid").text; Исключение КонецПопытки;
            ТЗточкиМаршрута.НомерТочки	= Узел.selectSingleNode("sqnId").text;
			Площадка_GUID = Узел.selectSingleNode("enterprise").selectSingleNode("GUID").text; //GUIDtest
			//По сути площадка тут не нужна
			Попытка ТЗточкиМаршрута.ВыбПлощадка	= ГМ.НайтиПлощадку( Площадка_GUID ); Исключение КонецПопытки;
			//Попытка ТЗточкиМаршрута.ПредприятиеНаименование	 =  	Узел.selectSingleNode("vd:enterprise").selectSingleNode("dt:name").text; Исключение КонецПопытки;
            ТЗточкиМаршрута.Перегрузка	= ?(Узел.selectSingleNode("transshipment").text = "true",1,0);
            ТЗточкиМаршрута.ТипТранспорта			 = 		Число(Узел.selectSingleNode("nextTransport").selectSingleNode("transportType").text);

			Если ТЗточкиМаршрута.ТипТранспорта = 1 Тогда
				Попытка ТЗточкиМаршрута.номеравто 		= Узел.selectSingleNode("nextTransport").selectSingleNode("transportNumber").selectSingleNode("vehicleNumber").text; Исключение КонецПопытки;
				Попытка ТЗточкиМаршрута.номерПрицепа 	= Узел.selectSingleNode("nextTransport").selectSingleNode("transportNumber").selectSingleNode("trailerNumber").text; Исключение КонецПопытки;;
				Попытка ТЗточкиМаршрута.номерКонтейнера = Узел.selectSingleNode("nextTransport").selectSingleNode("transportNumber").selectSingleNode("containerNumber").text; Исключение КонецПопытки;
			Иначеесли ТЗточкиМаршрута.ТипТранспорта = 2 Тогда
				Попытка ТЗточкиМаршрута.номерВагона 	= Узел.selectSingleNode("nextTransport").selectSingleNode("transportNumber").selectSingleNode("wagonNumber").text; Исключение КонецПопытки;
			Иначеесли ТЗточкиМаршрута.ТипТранспорта = 3 Тогда
				Попытка ТЗточкиМаршрута.НомерАвиарейса 	= Узел.selectSingleNode("nextTransport").selectSingleNode("transportNumber").selectSingleNode("flightNumber").text; Исключение КонецПопытки;
			Иначеесли (ТЗточкиМаршрута.ТипТранспорта = 4) или (ТЗточкиМаршрута.ТипТранспорта = 5) или (ТЗточкиМаршрута.ТипТранспорта = 6) Тогда
				Попытка ТЗточкиМаршрута.НазваниеСудна 	= Узел.selectSingleNode("nextTransport").selectSingleNode("transportNumber").selectSingleNode("shipName").text; Исключение КонецПопытки;
//			Иначеесли ТЗВСД.ТипТС = "7" Тогда
//					ТЗВСД.номеравто = transportInfo.selectSingleNode("*[local-name()='transportNumber'] ").selectSingleNode("*[local-name()='shipName']").text;

			КонецЕсли;

            // НомерТС = авто или вагон или авиарейс или судно
			ТЗточкиМаршрута.НомерТС = СокрЛП(ТЗточкиМаршрута.номеравто) + СокрЛП(ТЗточкиМаршрута.номерВагона) + СокрЛП(ТЗточкиМаршрута.НомерАвиарейса)+ СокрЛП(ТЗточкиМаршрута.НазваниеСудна);

		КонецЦикла;
	//Исключение КонецПопытки;

	ТЗточкиМаршрута.Сортировать("+НомерТочки");

	Если ТЗточкиМаршрута.КоличествоСтрок()>0 Тогда
	    Возврат (ТЗточкиМаршрута);
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

Функция ЗагрузитьМаршрутИзДок(НомерДок, ДатаДок)
	док = СоздатьОбъект("Документ");
	Если док.НайтиПоНомеру(НомерДок, ДатаДок, "Реализация")=0 Тогда
		Сообщить("Документ Реализация №"+НомерДок+ " от "+ДатаДок+" не найден");
		Возврат "";
	КонецЕсли;
	Маршурт = СоздатьТзМаршрутСледования();

	// Переходный период: изменена структура ТЗМаршрут в ГМ2 - добавлена колонка
	// Ранее сохраненные файлы маршрутов с < кол-вом колонок
	ВремМаршурт = ГМ2.СоздатьТзМаршрутСледования();
	КолонокВМаршруте = ВремМаршурт.КоличествоКолонок();

	тзВСД = ГМ.Выбрать_ВСД( док.ТекущийДокумент() );
	Сообщить("Найдено "+тзВСД.КоличествоСтрок()+" ВСД");

	тзВСД.ВыбратьСтроки();
	Пока тзВСД.ПолучитьСтроку()=1 Цикл

		ВСД = тзВСД.Док;
		Если ПустаяСтрока(ВСД.ИмяФайлаМаршрутДоставки) = 0 Тогда
			ВремТЗ = ЗначениеИзФайла(ВСД.ИмяФайлаМаршрутДоставки);
   //         Сообщить("Колонок в ВСД  = "+ВремТЗ.КоличествоКолонок());
			Если ТипЗначенияСтр(ВремТЗ) = "ТаблицаЗначений" Тогда

				// контроль структуры
				Если  КолонокВМаршруте <> ВремТЗ.КоличествоКолонок() Тогда
					ВремТЗ.НоваяКолонка("Наименование");
				КонецЕсли;

				ВремТЗ.НоваяКолонка("НомерТС_ТранспортнаяКомпания","Строка",50,,"Номер ТС Траспортная Компания",10);
				ВремТЗ.НоваяКолонка("Прицеп_ТранспортнаяКомпания","Строка",50,,"Прицеп ТК",10);
				ВремТЗ.НоваяКолонка("Контейнер_ТранспортнаяКомпания","Строка",50,,"Контейнер ТК",10);
				ВремТЗ.НоваяКолонка("ВСД","Документ.ВСД2",10,,"ВСД",10);
                ВремТЗ.НоваяКолонка("Реализация",,10,,"Реализация",10);

	//			ВремТЗ.НоваяКолонка("ВСД2_ОбновитьТранспорт","Документ.ВСД2_ОбновитьТранспорт",10,,"ВСД2_ОбновитьТранспорт",20);
	//			ВремТЗ.НоваяКолонка("Пометка",,,,,5,);

				ВремТЗ.ВыбратьСтроки();
				Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
					ВремТЗ.ВСД = ВСД;
					ВремТЗ.Реализация = док.ТекущийДокумент();
					//Сообщить("ВСД = "+ВремТз.ВСД);
					//Сообщить("Реал = "+ВремТз.Реализация);
				КонецЦикла;

			КонецЕсли;
			ОбъединитьТЗ(Маршурт, ВремТЗ);
		КонецЕсли;
	КонецЦикла;

	Возврат Маршурт;
КонецФункции

Процедура ЗагрузитьНомераАвто( ИмяФайла, _НомерДок = "",_ПрефиксНомера = "" )

	//Декодировать(ИмяФайла);
//    Возврат;

	objDom=СоздатьОбъект("MSXML2.DOMDocument");
    objDom.load(ИмяФайла);
    Попытка
		рез = objDom.selectSingleNode("soap:Envelope").selectSingleNode("soap:Body").selectSingleNode("m:GetTransportInfoResponse").selectSingleNode("m:return");
	Исключение
		Сообщить("Не удалось получить ответ от сервера, попробуйте позже");
		Сообщить(ИмяФайла);
		Возврат;
	КонецПопытки;
	//сохраняем m:return в отдельный файл в ИмяФайла2
	ИмяФайла2 = ИмяФайла+"-2.xml";
	ФайлРез = СоздатьОбъект("Текст");
	ФайлРез.КодоваяСтраница(0);
	ФайлРез.ДобавитьСтроку(рез.text);
	ФайлРез.Записать(ИмяФайла2);

	objDom=СоздатьОбъект("MSXML2.DOMDocument");
    objDom.load(ИмяФайла2);

	Попытка
		List = objDom.selectSingleNode("waybills").selectNodes("waybill");
		Для i1 = 0 По List.length - 1 Цикл
        	waybill=List.item(i1);
			НомерДок = _ПрефиксНомера+waybill.selectSingleNode("issueNumber").text;
			ДатаДок = ДатаСтрока( waybill.selectSingleNode("issueDate").text );
			Если НЕ(НомерДок = (_ПрефиксНомера+_НомерДок)) Тогда
				Сообщить("Пропускаю № "+НомерДок+" от "+ДатаДок);
				Продолжить;
			КонецЕсли;
			Сообщить("Получены сведения по № "+НомерДок+" от "+ДатаДок);

			МаршрутСледования = МаршрутСледования_из_XML( waybill.selectSingleNode("shipmentRoute").selectNodes("routePoint"));
			//МаршрутСледования.ВыбратьСтроку();

			МаршрутИзДок = ЗагрузитьМаршрутИзДок(НомерДок, ДатаДок);
			Если ПустоеЗначение(МаршрутИзДок)=0 Тогда
				МаршрутИзДок.ВыбратьСтроки();
				Пока МаршрутИзДок.ПолучитьСтроку() = 1 Цикл
//					Сообщить("Маршрут ВСД "+МаршрутИзДок.ВСД);
					Попытка
						МаршрутИзДок.НомерТС_ТранспортнаяКомпания = МаршрутСледования.ПолучитьЗначение(МаршрутИзДок.НомерТочки,"НомерТС");
						МаршрутИзДок.Контейнер_ТранспортнаяКомпания = МаршрутСледования.ПолучитьЗначение(МаршрутИзДок.НомерТочки,"номерКонтейнера");
						МаршрутИзДок.Прицеп_ТранспортнаяКомпания = МаршрутСледования.ПолучитьЗначение(МаршрутИзДок.НомерТочки,"номерПрицепа");
					Исключение
						Сообщить(ОписаниеОшибки());
					КонецПопытки;
				КонецЦикла;
				//МаршрутИзДок.ВыбратьСтроку();
				ТаблЧасть = ОбъединитьТЗ(ТаблЧасть, МаршрутИзДок);
			КонецЕсли;

			//ТаблЧасть.Загрузить(МаршрутИзДок);
			ТП.ОбновитьСтроки();
		КонецЦикла;


		ТаблЧасть.ВыбратьСтроки();
		Пока ТаблЧасть.ПолучитьСтроку() = 1 Цикл
		    ТаблЧасть.Пометка = 1;
		КонецЦикла;
		ТП.ОбновитьСтроки();
	Исключение
		Сообщить("ЗагрузитьНомераАвто() - Нет Данных или Ошибка чтения "+ИмяФайла+"");
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

Функция Номер_Авто_ЗапросXML( _issueNumber, _issueDate)
	запрос = "
	|<soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope/'>
	|   <soap:Body>
	|      <m:GetTransportInfo xmlns:m='http://www.w3.org/2001/XMLSchema'>
	|         <m:issueNumber xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	|               xsi:type='m:string'>"+ _issueNumber +"</m:issueNumber>
	|         <m:issueDate xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	|               xsi:type='m:date'>"+ _issueDate +"</m:issueDate>
	|      </m:GetTransportInfo>
	|   </soap:Body>
	|</soap:Envelope>
	|";

	Возврат запрос;

КонецФункции

Процедура ЗагрузитьНомераАвтоСервер(ВыбНакладная, _НомерДок = "",_ПрефиксНомера = "")
	Если ПустоеЗначение(ВыбНакладная) = 1 Тогда
		Сообщить("Не указана накладная !");
		Возврат;
	КонецЕсли;
	_issueNumber = _НомерДок;// "1189"
	_issueDate = ГМ.ДатаXML(ВыбНакладная.ДатаДок);//"2018-08-09";

	ЗапросXML = Номер_Авто_ЗапросXML(_issueNumber, _issueDate);

	Опции = ГМ.Компонента.GetOptions();

	Опции.USERNAME 			= СокрЛП(_login);
    Опции.PASSWORD 			= СокрЛП(_password) ;
    Опции.ISSUER_ID 		= ГМ.ПолучитьКонстанту("param_issuer_id");
    Опции.SERVICE_ID 		= "";
    Опции.API_KEY 			= ГМ.ПолучитьКонстанту("param_api_key");
    Опции.INITIATOR_LOGIN 	= "";
    Опции.VETDOCTOR_LOGIN 	= "";
	Опции.LogsDir 			= СокрЛП(ГМ.КаталогЛогов);
	Опции.VETDOCTOR_FIO 	= "";
	Опции.VETDOCTOR_POST 	= "";

	Опции.DEBUG 				= ГМ.Компонента.TRUE();

	ГМ.Компонента.Init(Опции);

	метод = ГМ.Компонента.GetMethod();
    метод.Service = СокрЛП(_Service);
    метод.Action = "GetTransportInfo";

	appID = ГМ.Компонента.GUID();
	рез = ГМ.Компонента.GetAvtoNumber( ЗапросXML, Опции, метод, appID);
	Сообщить("Получен "+ГМ.Компонента.LogFilename);


	ЗагрузитьНомераАвто( ГМ.Компонента.LogFilename, _НомерДок, _ПрефиксНомера )

КонецПроцедуры

Процедура ТаблПолеВыбор(__тп, __стр, __кол, __рег)
	Если __рег =3 Тогда
		_тз =__тп.ПоставщикДанных.ТаблицаЗначений;
		_нк =__тп.Колонки.Индекс(__кол);
		_знач =_тз.ПолучитьЗначение(__стр, _нк);

		// работа с агрегатами (пример):
		//
		//Если ТипЗначения(_знач) <>11 Тогда
		//	_о =СоздатьОбъект("Справочник.Номенклатура");
		//	_о.ВыбратьЭлементы();
		//	_о.ПолучитьЭлемент();
		//	_знач =_о.ТекущийЭлемент();
		//КонецЕсли;

		__тп.РедактироватьЗначение(__стр, __кол, __рег, _знач,,, "ВыбЗнач", "0x100000");

		// на форму добавлен элемент с идентификатором"ВыбЗнач"
		// в дальнейшем с ним можно работать как с обычным элементом формы
		// через объект Форма
		//
		// например:
		//
		//Форма.ВыбЗнач.ВыборГруппы(0);
	КонецЕсли;
КонецПроцедуры

Процедура ТаблПолеПриРедактированииЗначения(__тп, __стр, __кол, __рег, __знач)
	Если __рег =3 Тогда
		_тз =__тп.ПоставщикДанных.ТаблицаЗначений;
		_нк =__тп.Колонки.Индекс(__кол) ;
		_тз.УстановитьЗначение(__стр, _нк, __знач);
		__тп.ОбновитьСтроки();
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура  ТаблПолеПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	Если ТипРегиона = 3 Тогда
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
	КонецЕсли;
КонецПроцедуры

Процедура ТаблПолеПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, ТаблЧасть);
	ТаблЧасть.Пометка = ?(ТаблЧасть.Пометка = 1,0,1);
	ТабличноеПоле.ОбновитьСтроки();
КонецПроцедуры

Процедура СоздатьДокументыИзменения()
	ТаблЧасть.ВыбратьСтроки();
	Пока ТаблЧасть.ПолучитьСтроку() = 1 Цикл
		Если НЕ(ТаблЧасть.Пометка = 1) Тогда
			Продолжить;
		КонецЕсли;
		Если (СокрЛП(ТаблЧасть.НомерТС) <> СокрЛП(ТаблЧасть.НомерТС_ТранспортнаяКомпания)) или
			(СокрЛП(ТаблЧасть.номерКонтейнера) <> СокрЛП(ТаблЧасть.Контейнер_ТранспортнаяКомпания)) или
			(СокрЛП(ТаблЧасть.номерПрицепа) <> СокрЛП(ТаблЧасть.Прицеп_ТранспортнаяКомпания))	Тогда
			док = СоздатьОбъект("Документ.ВСД2_ОбновитьТранспорт");
			Док.Новый();
			//Док.НомерДок = ;
			Док.ДатаДок = ТекущаяДата();
			Док.ДокОснование = ТаблЧасть.ВСД;
			Док.Отправитель_ХозСубъект = Док.ДокОснование.Отправитель_ХозСубъект ;
			Док.Отправитель_Площадка = Док.ДокОснование.Отправитель_Площадка ;
			Док.Фирма = Док.ДокОснование.Фирма;
			Док.ЮрЛицо = Док.ДокОснование.ЮрЛицо;
			Док.Автор = ГМ.ПолучитьАвтора();
				Док.НоваяСтрока();
				Док.ТочкаМаршрутаUUID = ТаблЧасть.UUID;
				Док.SequenceNumber = ТаблЧасть.НомерТочки;
				Док.transportType = ТаблЧасть.ТипТранспорта;
				Док.vehicleNumber = ТаблЧасть.НомерТС_ТранспортнаяКомпания;
				Док.containerNumber = ТаблЧасть.Контейнер_ТранспортнаяКомпания;
				Док.trailerNumber = ТаблЧасть.Прицеп_ТранспортнаяКомпания;

			Док.Записать();
			ТаблЧасть.ВСД2_ОбновитьТранспорт = Док.ТекущийДокумент();
			ТП.ОбновитьСтроки();
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ОтправитьДокументыИзменения()
	Если ТаблЧасть.КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;
	ГМ.Инициализация(Контекст);
	ТаблЧасть.ВыбратьСтроки();
	Пока ТаблЧасть.ПолучитьСтроку() = 1 Цикл
		Если (ПустоеЗначение(ТаблЧасть.ВСД2_ОбновитьТранспорт)=0) и (ТаблЧасть.ВСД2_ОбновитьТранспорт.Проведен()=0) Тогда
			ГМ2.Отправить_ОбновитьТранспортВМаршуртеДоставки( ТаблЧасть.ВСД2_ОбновитьТранспорт );
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


Процедура ЗагрузитьПоОтмеченнымСервер()
	ТаблЧасть.УдалитьСтроки();

	тз = создатьОбъект("ТаблицаЗначений");
	ТзРеализации.Выгрузить(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
	    Если тз.Пометка = 2 Тогда
	    	ЗагрузитьНомераАвтоСервер(тз.Реализация,СокрЛП(тз.НомерДок),СокрЛП(тз.ПрефиксНомера));
	    КонецЕсли;
	КонецЦикла;
	//Форма.ИспользоватьСлой("Основной");
КонецПроцедуры

Процедура ЗагрузитьПоОтмеченнымФайл()
	ТаблЧасть.УдалитьСтроки();

	тз = создатьОбъект("ТаблицаЗначений");
	ТзРеализации.Выгрузить(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
	    Если тз.Пометка = 2 Тогда
			ЗагрузитьНомераАвто( ФайлНомераМашин , СокрЛП(тз.НомерДок),СокрЛП(тз.ПрефиксНомера) )
	    КонецЕсли;
	КонецЦикла;
	//Форма.ИспользоватьСлой("Основной");
КонецПроцедуры



НачалоПериода = ТекущаяДата();
КонецПериода = ТекущаяДата();

ТзРеализации.НоваяКолонка("Пометка",,,,,2,);
ТзРеализации.НоваяКолонка("Реализация",,,,,30,);
ТзРеализации.НоваяКолонка("НомерДок","Строка",10,,,5,);
ТзРеализации.НоваяКолонка("ПрефиксНомера","Строка",10,,,5,);
ТзРеализации.ВыводитьПиктограммы("Пометка");
