//Все права принадлежат ИП Синявский Ф.А. http://www.kb99.pro
// KB99.PRO Обработка подбора партий в ВСД_Транзакция
// Автор Zhukov@kb99.pro

Перем КонтекстВызывающего; // Входной Параметр - Контекст ВСД2_транзакция
Перем ТЗРезультирующая; // переносимая в тч документа результирующая таблица  - убрать в дальнейшем с формы
// В нее загружаются все данные

Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;

// ТЗЭлементы - заполняется из документов ВСД2_транзакция либо его основания
// Номенклатурой и связанным с ней Продукция_Элементом
// в дальнейшем по каждой строке этой ТЗ подбираем партии по фильтру и с контролем количества

// ТЗПодбора - связана с ТЗЭлементы по Продукция_Элемент - при смене позиции ТЗЭлементы перечитывается
// сюда подбираем партии, в ней ведется подсчет итогового количества

Процедура РаскраситьСписокЭлементов()

	тз = СоздатьОбъект("ТаблицаЗначений");
	ТЗЭлементы.Выгрузить(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз.Недостача)=1 Тогда
			тз.сЦвет = цвЗеленый;
		Иначе
			тз.сЦвет = цвКрасный;
		КонецЕсли;
	КонецЦикла;

	ТекСтрока = ТЗЭлементы.ТекущаяСтрока();
	ТЗЭлементы.Загрузить(тз);

	Если ПустоеЗначение(ТекСтрока)=1 Тогда
		ТЗЭлементы.ТекущаяСтрока(1);
	Иначе
		ТЗЭлементы.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;

КонецПроцедуры

//*******************************************
Процедура СкопироватьСтрокуВТЗ(ТзРез,ТзИсточник)
	ТзРез.НоваяСтрока();
	ТзРез.Номенклатура = ТзИсточник.Номенклатура;
	Попытка ТзРез.Продукция_Элемент = ТзИсточник.Продукция_Элемент; Исключение ТзРез.Продукция_Элемент = ТзИсточник.Номенклатура.ВСД_Продукция_Элемент;КонецПопытки;
	Попытка // Расходная накладная
	ТзРез.Партия = ТзИсточник.Партия;
	ТзРез.Количество = ТзИсточник.Количество;
	ТзРез.НомерПартии = СокрЛП(ТзРез.Партия.НомерПартии);
	ТзРез.Изготовлено = ТзРез.Партия.ДатаИзготовления1;
	ТзРез.СрокГодности = ТзРез.Партия.ДатаСрокГодности1;
	ТзРез.ЕдиницаИзмерения = ТзРез.Партия.ЕдиницаИзмерения;
	Исключение КонецПопытки;
	// С местами и упаковками нужно отдельно поразбираться
	//ТзРез.КоличествоМест = ТзИсточник.КоличествоМест; // нужно считать, и возможно по неск уровням
КонецПроцедуры

// Обработка связанных ТЗ
Процедура ДобавитьВыбранноеВРезультат(ВыбПодбор)
//	ТЗРезультирующая.Заполнить(ВыбПодбор,ТЗРезультирующая.КоличествоСтрок()+1);  //Это не работает
//	Возврат;

	ВыбПодбор.ВыбратьСтроки();
	Пока ВыбПодбор.ПолучитьСтроку() = 1 Цикл
		СкопироватьСтрокуВТЗ(ТЗРезультирующая,ВыбПодбор);
	КонецЦикла;
КонецПроцедуры

Процедура ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ВыбПродукцияЭлемент)
	ТЗПодбора.УдалитьСтроки();
	ТЗРезультирующая.Сортировать("+Продукция_Элемент");
	стр = 0;
	Пока ТЗРезультирующая.НайтиЗначение(ВыбПродукцияЭлемент,стр,"Продукция_Элемент") = 1 Цикл
		ТЗРезультирующая.ПолучитьСтрокуПоНомеру(стр);
		Если ПустоеЗначение(ТЗРезультирующая.Партия) = 0 Тогда
			СкопироватьСтрокуВТЗ(ТЗПодбора,ТЗРезультирующая);
		КонецЕсли;

		ТЗРезультирующая.УдалитьСтроку(стр);
		стр = 0;
	КонецЦикла;
КонецПроцедуры


//*** обработка действий с ТЗ
Процедура КликПоТзПодбора()
	Если ТЗПодбора.ТекущаяСтрока() = 0 Тогда
	    Возврат;
	КонецЕсли;
	Если НЕ(ТЗПодбора.ТекущаяКолонка() = "Количество") Тогда
	    Возврат;
	КонецЕсли;
	выбраноКол = ТЗПодбора.Количество;
	Если НЕ(ВвестиЧисло(выбраноКол,"Введите количество",12,3) = 1) Тогда
	    Возврат;
	КонецЕсли;

	КолВПартии = ТЗПодбора.Партия.Количество;
	Если ВыбраноКол > КолВПартии Тогда
		Предупреждение("В Партии всего "+КолВПартии);
		ВыбраноКол = КолВПартии;
	КонецЕсли;
	//ВыбраноКол = Мин(ВыбраноКол,(ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество")));
	ТЗПодбора.Количество = ВыбраноКол;
	Если (ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество")) < 0 Тогда
		ТЗПодбора.Количество = ТЗПодбора.Количество + ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество");
	КонецЕсли;
	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
	РаскраситьСписокЭлементов()
КонецПроцедуры

// пермещаемся по ТЗЭлементы - перерисовываем связанные таблицы
Функция ПриСменеСтрокиТЗ()
	Если ТЗЭлементы.ТекущаяСтрока() = 0 Тогда
	    Возврат "";
	КонецЕсли;
	Если НЕ(Форма.АктивныйЭлемент() = "ТЗЭлементы") Тогда
		Возврат "";
	КонецЕсли;
	ДобавитьВыбранноеВРезультат(ТЗПодбора);
	ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ТЗЭлементы.Продукция_Элемент);

	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
КонецФункции

Процедура УдалитьТекСтроку(ТекСтрокаТЗ)
	Если ПустоеЗначение(ТекСтрокаТЗ) = 1 Тогда
	    Возврат;
	КонецЕсли;
	ТекСтрокаТЗ.УдалитьСтроку(ТекСтрокаТЗ.ТекущаяСтрока());
	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
	РаскраситьСписокЭлементов();
КонецПроцедуры

Процедура ТзПодбораУдалитьСтроки()
	ТЗПодбора.УдалитьСтроки();
	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
	РаскраситьСписокЭлементов();
КонецПроцедуры

Процедура ОбработкаПодбора(ВыбЭлемент,КФ)
	Если ПустоеЗначение(Выбэлемент) = 1 Тогда
	    Возврат;
	КонецЕсли;

	стр =0;
	Если ТЗПодбора.НайтиЗначение(ВыбЭлемент,стр,"Партия")>0 Тогда
		Предупреждение("Партия уже выбрана !");
		ТЗПодбора.ТекущаяСтрока(стр);
		Возврат;
	КонецЕсли;
    //Проконтролируем еще и наличие партии в Результирующей таблицы
	стр =0;
	Если ТЗРезультирующая.НайтиЗначение(ВыбЭлемент,стр,"Партия")>0 Тогда
		Предупреждение("Партия уже выбрана !");
		Возврат;
	КонецЕсли;
	ПодобраноКол = ТЗПодбора.Итог("Количество");

	НужноВсего = ТЗЭлементы.Количество;
	ОсталосьПодобрать = НужноВсего - ПодобраноКол;

	Если ОсталосьПодобрать <= 0 Тогда
	    Предупреждение("Достаточно");
		Возврат;
	КонецЕсли;

	Если ВыбЭлемент.Количество <= ОсталосьПодобрать Тогда
	    КолКподбору = ВыбЭлемент.Количество;
	Иначе
		КолКподбору = ОсталосьПодобрать;
	КонецЕсли;
	Если ВвестиЧисло(КолКподбору,"Укажите количество",12,3) = 0 Тогда
	    Возврат;
	КонецЕсли;

	КолКподбору = Мин(КолКподбору,ВыбЭлемент.Количество,ОсталосьПодобрать);

	ТЗПодбора.НоваяСтрока();
	ТЗПодбора.Номенклатура = ТЗЭлементы.Номенклатура;
	ТЗПодбора.Продукция_Элемент = ТЗЭлементы.Продукция_Элемент;
	ТЗПодбора.Партия = ВыбЭлемент;
	ТЗПодбора.НомерПартии = СокрЛП(ВыбЭлемент.НомерПартии);
	ТЗПодбора.Изготовлено = ВыбЭлемент.ДатаИзготовления1;
	ТЗПодбора.СрокГодности = ВыбЭлемент.ДатаСрокГодности1;
	ТЗПодбора.Количество = КолКподбору;
	//ТЗПодбора.КоличествоМест = 0;

	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
	РаскраситьСписокЭлементов();
КонецПроцедуры

Процедура ПодобратьПартии()
	Если ТЗЭлементы.ТекущаяСтрока() = 0 Тогда
	    Возврат;
	КонецЕсли;
	ПодобраноКол = ТЗПодбора.Итог("Количество");
	НужноВсего = ТЗЭлементы.Количество;
	ОсталосьПодобрать = НужноВсего - ПодобраноКол;

	Если ОсталосьПодобрать <= 0 Тогда
	    Предупреждение("Достаточно");
		Возврат;
	КонецЕсли;


	// перечитаем таблицы - м.б. сменилась позиция ТЗЭлементы
	ДобавитьВыбранноеВРезультат(ТЗПодбора);
	ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ТЗЭлементы.Продукция_Элемент);

	парам = создатьОбъект("СписокЗначений");
	Парам.Установить("ВСД_Продукция_Элемент",ТЗЭлементы.Продукция_Элемент);
    Парам.Установить("Площадка",Отправитель_Площадка);
	Парам.Установить("ХозСубъект",Отправитель_ХозСубъект);
	ОткрытьПодбор("Справочник.ВСД_Партия", "ФормаСписка",Парам,1);
КонецПроцедуры

// при другом названии Реквизита Номенклатура в конфигурации
Процедура ИзменитьИдентКолонкиТЗ(ТЗ,Идент,НовыйИдент)
     ЗначениеИзСтрокиВнутр(СтрЗаменить(ЗначениеВСтрокуВнутр(ТЗ),"},"+Симв(10)+"{"""+Идент+"""","},"+Симв(10)+"{"""+НовыйИдент+""""),ТЗ);
КонецПроцедуры

// Заполняет данными из документа при открытии обработки или интерактивно
Процедура ЗаполнитьТЗЭлементов(Док)
	ТЗЭлементы.УдалитьСтроки();
	ТЗПодбора.УдалитьСтроки();
	ТЗРезультирующая.Загрузить(ТЗПодбора);// копируем структуру
	тз = СоздатьОбъект("ТаблицаЗначений");
	Док.ВыгрузитьТабличнуюЧасть(тз);

	Если НЕ(Док.Вид() = "ВСД2_транзакция") Тогда
	    Если НЕ(ГМ.НазваниеРеквизитаНоменклатура() = "Номенклатура") Тогда // в нестандартной конфе ->
	    	ИзменитьИдентКолонкиТЗ(тз,ГМ.НазваниеРеквизитаНоменклатура(),"Номенклатура");
	    КонецЕсли;
	КонецЕсли;

	// Заполним по ВСД2_транзакция или Реализации
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(тз.Номенклатура.ВСД_Продукция_Элемент) = 1 Тогда
			Попытка
				Если ПустоеЗначение(тз.Продукция_Элемент) = 1 Тогда
					Продолжить;
				КонецЕсли;
			Исключение
				Продолжить;
			КонецПопытки
			//Продолжить;
		КонецЕсли;
		ТЗЭлементы.НоваяСтрока();
		ТЗЭлементы.Номенклатура = тз.Номенклатура;
		Попытка
			ТЗЭлементы.Продукция_Элемент = тз.Продукция_Элемент;
		Исключение
			ТЗЭлементы.Продукция_Элемент = тз.Номенклатура.ВСД_Продукция_Элемент;
		КонецПопытки;

		ТЗЭлементы.Количество = тз.Количество;

		//Сомнительный момен: в Результат нужно всегда писать
//		Если Док.Вид() = "ВСД2_транзакция" Тогда
			СкопироватьСтрокуВТЗ(ТЗРезультирующая,тз);
//		КонецЕсли;
	КонецЦикла;

    ТЗЭлементы.Свернуть("Номенклатура,Продукция_Элемент","Количество,Недостача");
	ТЗЭлементы.ВставитьКолонку("сЦвет",1,,,,,1);

    // Подсчитаем недостачу
	ТЗЭлементы.ВыбратьСтроки();
	Пока ТЗЭлементы.ПолучитьСтроку() = 1 Цикл
		ДобавитьВыбранноеВРезультат(ТЗПодбора);
		ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ТЗЭлементы.Продукция_Элемент);
		ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
	КонецЦикла;
    ДобавитьВыбранноеВРезультат(ТЗПодбора);
	ТЗПодбора.УдалитьСтроки();
	// Позиционируем на 1 строке и заполняем связанные таблицы
	Если ТЗЭлементы.КоличествоСтрок()>0 Тогда
	    ТЗЭлементы.ПолучитьСтрокуПоНомеру(1);// ТекущаяСтрока(1);
		ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ТЗЭлементы.Продукция_Элемент);
	КонецЕсли;
	РаскраситьСписокЭлементов();

КонецПроцедуры


Процедура ПриОткрытии()
    ТЗПодбора.ВидимостьКолонки("Номенклатура",0);
    ТЗПодбора.ВидимостьКолонки("Продукция_Элемент",0);
	ТЗПодбора.ВидимостьКолонки("ЕдиницаИзмерения",0);
	Парам = Форма.Параметр;
	Если ПустоеЗначение(Парам) = 0 Тогда
		Отправитель_ХозСубъект = Парам.Получить("Отправитель_ХозСубъект");
		Отправитель_Площадка = Парам.Получить("Отправитель_Площадка");

		Если ПустоеЗначение(Парам.Получить("Заголовок")) = 0 Тогда
			Форма.Заголовок(Парам.Получить("Заголовок"));
		КонецЕсли;

		//ДокОснование = Парам.Получить("ДокОснование");
		//ТекДок = Парам.Получить("ТекущийДокумент");

		КонтекстВызывающего = Парам.Получить("ТекущийДокумент");
		Попытка ГМ = КонтекстВызывающего.ГМ; Исключение ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль"); КонецПопытки;
		ДокОснование = КонтекстВызывающего.ДокОснование;
		Форма.ПолучательПлощадка.Заголовок("");
		Если ПустоеЗначение(КонтекстВызывающего) = 0 Тогда
			Форма.ПолучательПлощадка.Заголовок(Строка(КонтекстВызывающего.Получатель_Площадка));
		    Если КонтекстВызывающего.КоличествоСтрок() > 0 Тогда
		    	ЗаполнитьТЗЭлементов(КонтекстВызывающего);
			КонецЕсли;
		КонецЕсли;
		//Транзакция пустая - попробуем по Реализации
		Если  (ПустоеЗначение(КонтекстВызывающего.ДокОснование) = 0) и (ТЗЭлементы.КоличествоСтрок()=0) Тогда
			ЗаполнитьТЗЭлементов(КонтекстВызывающего.ДокОснование);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Процедура ПриЗакрытии()
	Если Вопрос("Перенести в документ ?","Да+Нет") = "Нет" Тогда
	    Возврат;
	КонецЕсли;

	// спросим и  Перенесем данные из ТЗРезультирующая в документ
	// Предварительно дополнив ее строками из ТЗПодбор
	ДобавитьВыбранноеВРезультат(ТЗПодбора);

	//Добавим в результат строки с недостачаей - чтобы сохранить состав документа
	ТЗЭлементы.ВыбратьСтроки();
	Пока ТЗЭлементы.ПолучитьСтроку() = 1 Цикл
	    Если ТЗЭлементы.Недостача = 0 Тогда
	        Продолжить;
		КонецЕсли;
		ТЗРезультирующая.НоваяСтрока();
		ТЗРезультирующая.Номенклатура = ТЗЭлементы.Номенклатура;
		ТЗРезультирующая.Продукция_Элемент = ТЗЭлементы.Продукция_Элемент;
		ТЗРезультирующая.Количество = ТЗЭлементы.Недостача;
	КонецЦикла;

	ТЗРезультирующая.НоваяКолонка("Продукция");
	ТЗРезультирующая.НоваяКолонка("ВидПродукции");
	ТЗРезультирующая.НоваяКолонка("НаименованиеПродукции");
    ТЗРезультирующая.ВыбратьСтроки();
	Пока  ТЗРезультирующая.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТЗРезультирующая.Продукция_Элемент) = 1 Тогда
		    Продолжить;
		КонецЕсли;
		ТЗРезультирующая.Продукция = ТЗРезультирующая.Продукция_Элемент.Продукция;
		ТЗРезультирующая.ВидПродукции = ТЗРезультирующая.Продукция_Элемент.ВидПродукции;
		ТЗРезультирующая.НаименованиеПродукции = ТЗРезультирующая.Продукция_Элемент.Наименование;
	КонецЦикла;

	//*************************** Для СТМ
	// Получение Упаковок на двух уровнях и Артикула из ДокОснования
	ТЗРезультирующая.НоваяКолонка("ФормаУпак2");
	ТЗРезультирующая.НоваяКолонка("ФормаУпак4");
	ТЗРезультирующая.НоваяКолонка("КолвоУпак2");
	ТЗРезультирующая.НоваяКолонка("КолвоУпак4");
	ТЗРезультирующая.НоваяКолонка("КодПродукции");
	ТЗРезультирующая.НоваяКолонка("Цель");

	ТЗРезультирующая.НоваяКолонка("КлассМаркировки1_4");
	ТЗРезультирующая.НоваяКолонка("ЗначениеМаркировки1_4");

    ТЗРезультирующая.ВыбратьСтроки();
	Пока  ТЗРезультирующая.ПолучитьСтроку() = 1 Цикл

		ГМ.ЗаполнитьСтрокуДокумента(ТЗРезультирующая, ТЗРезультирующая)

	КонецЦикла;

	//Толко после всего вышеуказанного переносить в документ!!!!!!!!
	КонтекстВызывающего.УдалитьСтроки();
	КонтекстВызывающего.ЗагрузитьТабличнуюЧасть(ТЗРезультирующая);
	КонтекстВызывающего.Форма.Обновить(1);
	//ОткрытьФорму(ТекДок);

КонецПроцедуры


Процедура ЗаполнитьВсеПартии()

	КонтекстВызывающего.УдалитьСтроки();
	ТЗЭлементы.УдалитьСтроки();
	ТЗРезультирующая.УдалитьСтроки();
	ТЗПодбора.УдалитьСтроки();

	КолвоМакс =500;
	ВвестиЧисло(КолвоМакс, "Введите колво партий", 10, 0, );

	СпрПартии = СоздатьОбъект("Справочник.ВСД_Партия");
	СпрПартии.ВыбратьЭлементы();
	колво=0;
	Пока СпрПартии.ПолучитьЭлемент()=1 Цикл
		Если (СпрПартии.ПометкаУдаления()=1) Тогда
			Продолжить;
		КонецЕсли;
		Если (СпрПартии.Получатель_Площадка <>  Отправитель_площадка) Тогда
			Продолжить;
		КонецЕсли;
		Если (СпрПартии.Получатель_ХозСубъект <>  Отправитель_ХозСубъект) Тогда
			Продолжить;
		КонецЕсли;

		колво =колво+1;
		КонтекстВызывающего.НоваяСтрока();
		КонтекстВызывающего.Партия = СпрПартии.ТекущийЭлемент();
		КонтекстВызывающего.Продукция = КонтекстВызывающего.Партия.Продукция;
		КонтекстВызывающего.ВидПродукции = КонтекстВызывающего.Партия.ВидПродукции;
		КонтекстВызывающего.ЕдиницаИзмерения = КонтекстВызывающего.Партия.ЕдиницаИзмерения;
		КонтекстВызывающего.Количество = КонтекстВызывающего.Партия.Количество;
		КонтекстВызывающего.НаименованиеПродукции = КонтекстВызывающего.Партия.НаименованиеПродукции;
		КонтекстВызывающего.Продукция_Элемент = КонтекстВызывающего.Партия.Продукция_Элемент;

		если колво >= КолвоМакс Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
    ПриОткрытии();

КонецПроцедуры


ТЗРезультирующая = СоздатьОбъект("ТаблицаЗначений");

ТЗЭлементы.НоваяКолонка("сЦвет",,,,,1,);
ТЗЭлементы.НоваяКолонка("Номенклатура","Справочник.Номенклатура");
ТЗЭлементы.НоваяКолонка("Продукция_Элемент","Справочник.ВСД_Продукция_Элемент");
ТЗЭлементы.НоваяКолонка("Количество","Число",12,3);
ТЗЭлементы.НоваяКолонка("Недостача","Число",12,3);

ТЗПодбора.НоваяКолонка("Номенклатура","Справочник.Номенклатура");
ТЗПодбора.НоваяКолонка("Продукция_Элемент","Справочник.ВСД_Продукция_Элемент");
ТЗПодбора.НоваяКолонка("Партия","Справочник.ВСД_Партия");
ТЗПодбора.НоваяКолонка("Количество","Число",12,3);
//Информационные Реквизиты
ТЗПодбора.НоваяКолонка("Изготовлено",,,,,7);
ТЗПодбора.НоваяКолонка("СрокГодности",,,,,7);
ТЗПодбора.НоваяКолонка("НомерПартии",,,,,7);
ТЗПодбора.НоваяКолонка("ЕдиницаИзмерения","Справочник.ВСД_ЕдиницыИзмерения");

ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

