Перем ГМ;
Перем цвКрасный, цвЖелтый, цвЗеленый, цвГолубой, цвФиолетовый;
Перем КаталогОбработки;
Перем ВыбСтрока;

Перем ТекСтрока; //курсор в таблице 

Процедура ОбновитьИнф()
	
	Форма.Инфо.Заголовок("Строк: "+ТаблицаВСД.КоличествоСтрок()+", количество: "+Окр(ТаблицаВСД.Итог("Количество"))+" ");
	
	ВыбКолво =0;
	ВыбДок = 0;
	ТаблицаВСД.ВыбратьСтроки();
	Пока ТаблицаВСД.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаВСД.Пометка = 2 Тогда 
			ВыбКолво = ВыбКолво + (ТаблицаВСД.Количество);
			ВыбДок=ВыбДок+1;
		КонецЕсли;
	КонецЦикла;	      
	ВыбКолво = Окр(ВыбКолво);

	Форма.ИнфоВыбор.Заголовок("Выбрано "+ВыбДок+" строк, количество = "+ВыбКолво+" ");
	
КонецПроцедуры

Процедура РаскраситьСписокДокументов(тзДок="")
	
	Если ПустоеЗначение(тзДок)=1 Тогда 
		тз = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаВСД.Выгрузить(тз);
	Иначе
		тз = тзДок;
	КонецЕсли;	
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл		

		Если (ПустоеЗначение(тз.ВСД)=0) Тогда
			Если СокрЛП(тз.ВСД.Статус)="COMPLETED" Тогда
				тз.сЦвет = цвЗеленый;
			КонецЕсли;
		ИначеЕсли ПустоеЗначение(тз.ХозСубъект.GUID)=1 Тогда 			
			тз.сЦвет = цвКрасный;
		ИначеЕсли (ПустоеЗначение(тз.Площадка)=1) Тогда
			тз.сЦвет = цвЖелтый;
		ИначеЕсли (ПустоеЗначение(тз.ВСД_Партия)=1) Тогда
			тз.сЦвет = цвФиолетовый;
		ИначеЕсли ПустоеЗначение(тз.ВСД_Продукция_Элемент)=1 Тогда 			
			тз.сЦвет = ЦвГолубой;
		Иначе			
			тз.сЦвет = "";							
		КонецЕсли;
		
	КонецЦикла;
	
	ТекСтрока = ТаблицаВСД.ТекущаяСтрока();
	
	ТаблицаВСД.Загрузить(тз);
	
	ТаблицаВСД.ВыводитьПиктограммы("Пометка");

	Если ПустоеЗначение(ТекСтрока)=1 Тогда 
		ТаблицаВСД.ТекущаяСтрока(1);
	Иначе
		ТаблицаВСД.ТекущаяСтрока( ТекСтрока );
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьТаблицуВСД()  

	//Попытка
		
		Если ГМ.ЭтоSQL=1 Тогда 	
			RS = СоздатьОбъект("ODBCRecordset");
			RS.УстБД1С();     
			
			ТекстЗапроса = "
			|SELECT
			|	РегДвижения.IDDoc as [ДокументРеализация $Документ.Реализация],
			|	СпрК.ID as [Контрагент $Справочник.Контрагенты],
			|	СпрГ.ID as [Грузополучатель $Справочник.Контрагенты],
			|	$РегДвижения.Номенклатура as [Номенклатура $Справочник.Номенклатура],      
			|	$СпрП.ПриходныйДокумент as [ПриходныйДокумент $Документ],
			|	$СпрП.ВСД_Партия as [ВСД_Партия $Справочник.ВСД_Партия],
			|	$СпрН.ВСД_Продукция_Элемент as [ВСД_Продукция_Элемент $Справочник.ВСД_Продукция_Элемент],
			|
			|   SUM( CASE
			|    	WHEN РегДвижения.DEBKRED = 1 THEN $РегДвижения.Количество
			|    	ELSE 0 
			|	END ) as Количество
			|
			|FROM
			|   $Регистр.ПартииНаличие as РегДвижения
			|
			|INNER JOIN 
			|	$Документ.Реализация as ДокР ON ДокР.IDDoc = РегДвижения.IDDoc
			|INNER JOIN
			|	$Справочник.Контрагенты as СпрК ON СпрК.ID = $ДокР.Контрагент    
			|INNER JOIN
			|	$Справочник.Контрагенты as СпрГ ON СпрГ.ID = $ДокР.Грузополучатель    
			|INNER JOIN
			|	$Справочник.Партии as СпрП ON СпрП.ID = $РегДвижения.Партия    
			|INNER JOIN
			|	$Справочник.Номенклатура as СпрН ON СпрН.ID = $РегДвижения.Номенклатура    
			|
			|WHERE 
			|	(left(РегДвижения.Date_Time_IDDoc,9) BETWEEN :НачДата AND :КонДата~ ) 
			|	%УсловиеПоГрузополучателю%
			|
			|GROUP BY
			|	РегДвижения.IDDoc,
			|	СпрК.ID,
			|	СпрГ.ID,
			|	$РегДвижения.Номенклатура,
			|	$СпрН.ВСД_Продукция_Элемент,
			|	$СпрП.ПриходныйДокумент,
			|	$СпрП.ВСД_Партия
			|
			|ORDER BY
			|	РегДвижения.IDDoc
			|";			
			УсловиеПоГрузополучателю = "";
			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
				УсловиеПоГрузополучателю = " and $ДокР.Грузополучатель IN (SELECT Val FROM #ГруппаК) ";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
						
			RS.УложитьСписокОбъектов(ВыбКонтрагент, "#ГруппаК","Контрагенты");
			RS.УстановитьТекстовыйПараметр("НачДата", НачДата);
			RS.УстановитьТекстовыйПараметр("КонДата", КонДата);
			        
			//RS.Отладка(1);
			ТЗ = RS.ВыполнитьИнструкцию(ТекстЗапроса);
			//ТЗ.ВыбратьСтроку();
		  	
		Иначе	
				
//			Запрос = ГМ.базаДанных.НовыйЗапрос();
//		
//			ТекстЗапроса = "
//			|SELECT
//			|    Жур.IDDoc as [Док :Документ],
//			|    Жур.IDDocDef as Док_вид,
//			|	Жур.DocNo as [НомерДок],
//			|	ДокВСД.IDDoc as [ДокВСД $Документ.ВСД_транзакция],
//			|	ДокР."+НазваниеРеквизитаГрузополучатель+" as [Клиент :Справочник.Контрагенты],
//			|	SUM(ДокСтроки."+НазваниеРеквизитаКоличество+") [Количество],
//			|	SUM(ДокСтроки."+НазваниеРеквизитаКоличествоМест+") [КоличествоМест]
//			|FROM
//			|    Журнал Жур
//			|INNER JOIN 
//			|	[ДокументСтроки."+НазваниеВидаДокументаРеализация+"] as ДокСтроки 
//			|		ON Жур.IDDoc = ДокСтроки.IDDoc
//			|INNER JOIN 
//			|	[Документ."+НазваниеВидаДокументаРеализация+"] as ДокР 
//			|		ON Жур.IDDoc = ДокР.IDDoc
//			|Left join 
//			|	[Документ.ВСД_транзакция] as ДокВСД
//			|	ON SUBSTR(ДокВСД.ДокОснование, 5, 8) = Жур.IDDoc
//			|
//			|WHERE
//			|    Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~ AND
//			|    Жур.IDDocDef = :ВидДокумента."+НазваниеВидаДокументаРеализация+"
//			|	and Жур.Closed & 1 = 1
//			|	%УсловиеПоГрузополучателю%
//			//|	%УсловиеПоСвойствуТовара%
//			//|	%УсловиеПоФирме%
//			|	AND ДокСтроки."+НазваниеРеквизитаКоличество+" >0
//			|
//			|GROUP BY
//			|	Жур.IDDoc,
//			|	Жур.IDDocDef,
//			|	Жур.DocNo,
//			|	ДокР."+НазваниеРеквизитаГрузополучатель+",
//			|	ДокВСД.IDDoc
//			|
//			|order by Жур.DocNo
//			|";
//		
//			УсловиеПоГрузополучателю = "";
//
//			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда		
//				УсловиеПоГрузополучателю = " and ДокР."+НазваниеРеквизитаГрузополучатель+" IN (SELECT Val FROM ГруппаК) ";
//				ГМ.базаДанных.УложитьОбъекты(ВыбКонтрагент, "ГруппаК",, "Контрагенты");
//			КонецЕсли;
//			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
//	
//			////условие по фирме
//			//УсловиеПоФирме="";
//			//Если ПустоеЗначение(ВыбФирма) = 0 Тогда		
//			//	УсловиеПоФирме = " and Жур.Фирма = :ВыбФирма";
//			//КонецЕсли;
//			//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);
//			        
//			//Запрос.Подставлять("ВыбКлиент", ВыбКлиент);
//			//Запрос.Подставлять("ВСД_Продукция_Свойство", ВСД_Продукция_Свойство);    
//			//Запрос.Подставлять("ВыбТипПродукции", ВыбТипПродукции);    
//			Запрос.Подставлять("НачДата", НачДата);
//			Запрос.Подставлять("КонДата", КонДата);
//			Запрос.Подставлять("ВыбФирма", ВыбФирма);
//		
//			//Запрос.Отладка();
//			ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
//			//ТЗ.ВыбратьСтроку();
		КонецЕсли;
			
		ТаблицаВСД.УдалитьСтроки();
		
		тзДок = СоздатьОбъект("ТаблицаЗначений");
		ТаблицаВСД.Выгрузить(тзДок);
		
		тз.ВыбратьСтроки();
		Ном=0;
		ПредДок="";
		Пока тз.ПолучитьСтроку()=1 Цикл 
			тзДок.НоваяСтрока();
			тзДок.Пометка=1;
			
//ТаблицаВСД.НоваяКолонка("ВСД_Продукция_Элемент",,,,,30,);
//ТаблицаВСД.НоваяКолонка("ВСД",,,,,10,);

			тзДок.ДокументРеализация = тз.ДокументРеализация;
			тзДок.ВСД_Партия = тз.ВСД_Партия;
			тзДок.Номенклатура = тз.Номенклатура;
			тзДок.ВСД_Продукция_Элемент = тз.ВСД_Продукция_Элемент;
			тзДок.Количество = тз.Количество;
			//тзДок.Свво = тз.Свво;
			//Попытка			
			//	тзДок.КолвоМест = тз.КоличествоМест;
			//Исключение			
			//КонецПопытки;
					
			//Попытка
			//	Если тз.ДокВСД.ПометкаУдаления()=0 Тогда 
			//		тзДок.ВСД = тз.ДокВСД;
			//	КонецЕсли;
			//Исключение
			//КонецПопытки;
			
			тзДок.Контрагент = тз.Контрагент;
			тзДок.Грузополучатель = тз.Грузополучатель;
					
			тзДок.ХозСубъект = ГМ.НайтиХозСубъект(тзДок.Контрагент);
			Если ПустоеЗначение(тзДок.ХозСубъект)=0 Тогда
				тзДок.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту( тзДок.Грузополучатель);
			КонецЕсли;			
		КонецЦикла; 
		      
		РаскраситьСписокДокументов( тзДок );
		ОбновитьИнф();
	//Исключение
	//	Сообщить("Не удалось выполнить запрос по документам. Проверьте параметры
	//	|"+ ОписаниеОшибки());
	//КонецПопытки;		
КонецПроцедуры

Процедура ЗаголовокНадпись()
	
	форма.НачалоПериодаТекст.Заголовок(СокрЛП(НачДата));
	форма.КонецПериодаТекст.Заголовок(сокрлп(КонДата));

КонецПроцедуры // ЗаголовокНадпись

Процедура ПриОткрытии()
	ИмяФайла="";
	КаталогОбработки="";
	
	РасположениеФайла(КаталогОбработки, ИмяФайла);
	
   //{Интеграционный модуль для переопределения функций, плюс несколько базовых функций
    ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
	ГМ.Инициализация(Контекст);        
    ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	ГМ2 = СоздатьОбъект("Меркурий_ГлобальныйМодуль2");
	ГМ2.Инициализация(ГМ); 
   	ВыбФирма = ГМ.ПолучитьФирмуПоХС(Отправитель_Хозсубъект);  	
    //}		
	
	ЗаголовокНадпись();   
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("Параметры");
	          
	Форма.ИспользоватьСлой("Основной, Реализации");
		
	//{ Обработку можно вызвать для заполнения списка реализаций на основании маршрута
	// для этого в Маршрут в печатные формы добавьте ПечФорма_ВСД_ГрупповаяОбработка.ert
	//
	//Парам = Форма.Параметр;
	//Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
	//			
	//	Если ПустоеЗначение(Парам)=0 тогда 
	//		Для Д=1 По Парам.РазмерСписка() Цикл
	//			Док = Парам.ПолучитьЗначение(Д);
	//			СписокДокументов.НоваяСтрока();
	//			СписокДокументов.Пометка= 1;
	//			//СписокДокументов.инфо = ;
	//			СписокДокументов.Док = Док;
	//			//СписокДокументов.ВСД = ;
	//			СписокДокументов.Колво = Док.ВесДокумента;
	//			СписокДокументов.Вес = Док.ВесДокумента;
	//			СписокДокументов.КолвоМест = Док.КоличествоМестДокумента;
	//			СписокДокументов.Контрагент = Док.Контрагент;
	//			СписокДокументов.Грузополучатель = Док.ПолучитьАтрибут(НазваниеРеквизитаГрузополучатель);
	//			СписокДокументов.ХозСубъект = ГМ.НайтиХозСубъект(СписокДокументов.Контрагент);
	//			СписокДокументов.Площадка = ГМ.НайтиПлощадкуПоКонтрагенту(СписокДокументов.Грузополучатель);
	//		КонецЦикла;
	//		
	//		РаскраситьСписокДокументов();
	//		
	//		ВыделитьВсеДокументы();	
	//	КонецЕсли;
	//Иначе
		//стандартное заполнение документов
		ЗаполнитьТаблицуВСД();
	//КонецЕсли;   
	//}
	
КонецПроцедуры

// предопределенная процедура
 Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
 	Если ЗначениеЗакладки="Основной" Тогда
		Форма.ИспользоватьСлой("Основной");
	Иначе
		Форма.ИспользоватьСлой("Параметры");
	КонецЕсли;     
		
КонецПроцедуры 

процедура ВыбратьПериод()
	если ВвестиПериод(НачДата,КонДата)=1 тогда
		ЗаголовокНадпись();
		ТаблицаВСД.УдалитьСтроки();
		ЗаполнитьТаблицуВСД();
	конецесли;
конецпроцедуры

Процедура Клик()
	текСтр = ТаблицаВСД.ТекущаяСтрока();
	текКол = ТаблицаВСД.ТекущаяКолонка();
	
	Если текКол="Пометка" Тогда		
		Пометка = ТаблицаВСД.ПолучитьЗначение(ТекСтр,"Пометка");
		Если Пометка = 2 Тогда
			ТаблицаВСД.Пометка=1;
		Иначе
			ТаблицаВСД.Пометка=2;
		КонецЕсли;
	ИначеЕсли текКол="Площадка" Тогда 
		ВыбСтрока = текСтр;
		Площадка = ТаблицаВСД.ПолучитьЗначение(ТекСтр,текКол);
		
		ХозСубъект = ТаблицаВСД.ПолучитьЗначение(текСтр, "ХозСубъект");
					
		тз = ГМ.ВыбратьВсеПлощадкиХС(ХозСубъект);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;			
				
		ОткрытьПодбор("Справочник.ВСД_Площадка", "ФормаСписка", СписокОтбора,0, Площадка);
		
	ИначеЕсли текКол="ХозСубъект" Тогда 
		
		ХозСубъект = ТаблицаВСД.ПолучитьЗначение(текСтр, "ХозСубъект");	
		Если ПустоеЗначение(ХозСубъект)=1 Тогда 
			ОткрытьФорму("Справочник.ВСД_ХозСубъект");
		Иначе
			ОткрытьФорму(ХозСубъект);
		КонецЕсли;
		
	Иначе
		Эл = ТаблицаВСД.ПолучитьЗначение(текСтр, текКол);	
		ОткрытьФорму(Эл);
	КонецЕсли;
	
	ОбновитьИнф();	
КонецПроцедуры


Процедура ОтменитьВсеДокументы()
	ТаблицаВСД.ВыбратьСтроки();
	Пока ТаблицаВСД.ПолучитьСтроку() = 1 Цикл
		ТаблицаВСД.Пометка=1;		
	КонецЦикла;	 
	
	ОбновитьИнф();
КонецПроцедуры

Процедура ВыделитьВсеДокументы()
	ТаблицаВСД.ВыбратьСтроки();
	Пока ТаблицаВСД.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаВСД.сЦвет = "" Тогда 
			ТаблицаВСД.Пометка=2;		
		КонецЕсли;
	КонецЦикла;	      

	ОбновитьИнф();	
КонецПроцедуры

Процедура СоздатьВСД()
	
	Если ТаблицаВСД.КоличествоСтрок()=0 Тогда
		Сообщить("Не заполнена таблица партий.","!");
		Возврат;
	КонецЕсли;
	
	тзСозданныеВСД = СоздатьОбъект("ТаблицаЗначений");
	тзСозданныеВСД.НоваяКолонка("ДокументРеализация");
	тзСозданныеВСД.НоваяКолонка("ВСД");
	
	ТаблицаВСД.ВыбратьСтроки();
	Пока ТаблицаВСД.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаВСД.Пометка<>2 Тогда
			Продолжить;
		КонецЕсли;

		Если (ПустоеЗначение(ТаблицаВСД.ВСД)=0) Тогда       
			//Если (СокрЛП(СписокДокументов.ВСД.Статус)= "COMPLETED") Тогда  
			//	Сообщить("["+СписокДокументов.Док+"] партия ["+Партия+"] отправлен "+СписокДокументов.ВСД,"!");
			//	Продолжить;
			//КонецЕсли;
			
			Если (ПустоеЗначение(ТаблицаВСД.ВСД.Статус) = 1) Тогда 
				Сообщить("Для "+ТаблицаВСД.Док+" ВСД уже создан, но не отправлен","i");
				Продолжить;
			КонецЕсли;		
		КонецЕсли;		

		Состояние("Заполнение списка партий ВСД ");
				
		ХС = ТаблицаВСД.ХозСубъект;
		Площадка = ТаблицаВСД.Площадка;
		
		// создание кастомного ВСД
		Если ФС.СуществуетФайл(КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_транзакция.ert")=1 Тогда
			
			//{ переопределение функции создания ВСД 
			// интеграция переопределяется в Меркурий_Подключаемый_Создание_ВСД_транзакция.ert
			//
			СписокПараметров = СоздатьОбъект("СписокЗначений");
			СписокПараметров.ДобавитьЗначение( ТаблицаВСД.ДокументРеализация,	"ДокОснование");    
			СписокПараметров.ДобавитьЗначение( Отправитель_ХозСубъект,			"Отправитель_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение( Отправитель_Площадка,			"Отправитель_Площадка");    
			СписокПараметров.ДобавитьЗначение( Перевозчик_ХозСубъект,			"Перевозчик_ХозСубъект");    
			СписокПараметров.ДобавитьЗначение( ТаблицаВСД.Номенклатура,			"Номенклатура");    
			СписокПараметров.ДобавитьЗначение( ТаблицаВСД.Количество,			"Колво");    			
			СписокПараметров.ДобавитьЗначение( ТаблицаВСД.ВСД_Партия,			"СписокПартий");    
			СписокПараметров.ДобавитьЗначение( ГМ,	"ГМ");    			
				
			ОткрытьФормуМодально("Отчет",СписокПараметров,КаталогОбработки+"ПодключаемыеМодули\Меркурий_Подключаемый_Создание_ВСД_транзакция.ert");
			
			ДокументСсылка = "";
			
			Если ТипЗначенияСтр(СписокПараметров)  = "СписокЗначений" Тогда				
				ДокументСсылка = СписокПараметров.Получить("ДокументСсылка");				
			КонецЕсли;  
			
			Если ПустоеЗначение(ДокументСсылка)=1 Тогда
				Предупреждение("В подключаемом модуле не удалось создать ВСД","!");
				//Возврат "";
			КонецЕсли;
			//}
			
		Иначе
			// стандартное создание ВСД
			
			стр=0;
			Если тзСозданныеВСД.НайтиЗначение(ТаблицаВСД.ДокументРеализация, стр, "ДокументРеализация")=0 Тогда 
				ДокВСД = СоздатьОбъект("Документ.ВСД_транзакция");
				ДокВСД.Новый();				
				ДокВСД.ДокОснование = ТаблицаВСД.ДокументРеализация;			
				ДокВСД.ДатаДок = ДокВСД.ДокОснование.ДатаДок;
				ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
				ДокВСД.Отправитель_Площадка = Отправитель_Площадка;			
				ДокВСД.Получатель_ХозСубъект = ХС;		
				ДокВСД.Получатель_Площадка = Площадка;					
				ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;
				ТТН = ДокВСД.ДокОснование.Маршрут;		
				ДокВСД.ТтнСерия = ""; //ТТН.Серия;
				ДокВСД.ТтнНомер = ТаблицаВСД.ДокументРеализация.НомерДок;
				ДокВСД.ТтнДата = ТаблицаВСД.ДокументРеализация.ДатаДок;
				ДокВСД.номерАвто = ТТН.Авто.НомернойЗнак;
				Если ПустоеЗначение(ДокВСД.номерАвто)=1 Тогда
					ДокВСД.номерАвто = "не используется";
				КонецЕсли;
				
				Попытка
					ДокВСД.Автор = глПользователь;
				Исключение
				КонецПопытки;
	
				Попытка				
					ДокВСД.Филиал = глПользователь.Филиал;
				Исключение
				КонецПопытки;
				ДокВСД.ФормаВСД = 1;			
				ДокВСД.Экспертиза 		= ВСД_Экспертиза;
				ДокВСД.Местность 		= ВСД_Местность;
				ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
				ДокВСД.cargoExpertized  = 1;
				ДокВСД.cargoInspected  	= 1;	
				
				Сообщить("["+ТаблицаВСД.Грузополучатель+"] создан документ "+ДокВСД,"i");		
			Иначе
				СсылкаВСД = тзСозданныеВСД.ПолучитьЗначение(стр,"ВСД");
				ДокВСД = СоздатьОбъект("Документ");
				ДокВСД.НайтиДокумент(СсылкаВСД);
				
				Сообщить("["+ТаблицаВСД.Грузополучатель+"] изменен документ "+ДокВСД,"i");		
			КонецЕсли;
			
			ДокВСД.НоваяСтрока();
			ДокВСД.Партия = ТаблицаВСД.ВСД_Партия;
			ДокВСД.Количество = ТаблицаВСД.Количество;
			//ДокВСД.КоличествоМест = ТаблицаВСД.КоличествоМест;			
			ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
			ДокВСД.ФормаУпаковки = ДокВСД.Партия.ФормаУпаковки;
//			ДокВСД.Продукция = ДокВСД.Партия.Продукция;
//			ДокВСД.ВидПродукции = ДокВСД.Партия.ВидПродукции;
//
//			ДокВСД.Продукция_Элемент 	= тз.ВСД_Продукция_Элемент;
			ДокВСД.ТермическоеСостояние = ДокВСД.Партия.Продукция_Элемент.ТермическиеУсловияПеревозки;
			//ДокВСД.НаименованиеПродукции = тз.ВСД_Продукция_Элемент.Наименование;
			
			ДокВСД.Записать();
			ссылкаВСД = ДокВСД.ТекущийДокумент();
			
			тзСозданныеВСД.НоваяСтрока();
			тзСозданныеВСД.ДокументРеализация = ТаблицаВСД.ДокументРеализация;
			тзСозданныеВСД.ВСД = ссылкаВСД;
		КонецЕсли;
		
		ТаблицаВСД.ВСД = ссылкаВСД;
		
		
	КонецЦикла;

	//РаскраситьСписокДокументов();		
	
КонецПроцедуры


Процедура ОбработкаПодбора(Элемент, КонтФормы)
	Если Элемент.Вид()="ВСД_Площадка" Тогда
		СтараяПлощадка = ТаблицаВСД.ПолучитьЗначение(ВыбСтрока,"Площадка");
		
		СпрПлощадка = СоздатьОбъект("Справочник.ВСД_Площадка");
		Если ПустоеЗначение(СтараяПлощадка)=0 Тогда 
			Если СпрПлощадка.ВыбратьЭлементыПоРеквизиту("Контрагент",СтараяПлощадка.Контрагент,0,0)=1 Тогда
				Пока СпрПлощадка.ПолучитьЭлемент()=1 Цикл
					//Сообщить("Очистили привязку площадки "+СпрПлощадка.Контрагент);
					СпрПлощадка.Контрагент = "";
					СпрПлощадка.Записать();				
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		СпрПлощадка.НайтиЭлемент(Элемент);
		СпрПлощадка.Контрагент = ТаблицаВСД.ПолучитьЗначение(ВыбСтрока,"Грузополучатель");
		СпрПлощадка.Записать();
		//Сообщить("Установили привязку площадки "+СпрПлощадка.Контрагент);
		КонтФормы.Форма.Закрыть();    
		
		ТаблицаВСД.УстановитьЗначение(ВыбСтрока,"Площадка", СпрПлощадка.ТекущийЭлемент());
				
		РаскраситьСписокДокументов( );		
	ИначеЕсли Элемент.Вид()="ВСД_Партия" Тогда
		КонтФормы.Форма.Закрыть();    
		
		ТаблицаВСД.УстановитьЗначение(ВыбСтрока,"Партия", Элемент);
		//СписокПартий.УстановитьЗначение(ВыбСтрока,"Колво", Элемент.Количество);
		//СписокПартий.УстановитьЗначение(ВыбСтрока,"КолвоМест", Элемент.КоличествоМест);
		
		РаскраситьСписокДокументов( );			

	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьВСД(ВСД)
	Рез =1;
	Если ПустоеЗначение(ВСД)=1 Тогда
		Возврат 0;
	КонецЕсли;
	Если (СокрЛП(ВСД.Статус)="COMPLETED") Тогда
		Возврат 0;
	КонецЕсли;
	Если ПустоеЗначение(ВСД.ТермическоеСостояние)=1 Тогда
		Сообщить("ВСД "+ВСД+" не указано ТермическоеСостояние","!");
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
КонецФункции

Процедура ОтправитьВСД()
	
	СписокВСД = СоздатьОбъект("СписокЗначений");
	ТаблицаВСД.ВыбратьСтроки();
	Пока ТаблицаВСД.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаВСД.Пометка = 2 Тогда 		
			Если ПроверитьВСД(ТаблицаВСД.ВСД)=1 Тогда 
				СписокВСД.ДобавитьЗначение(ТаблицаВСД.ВСД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Меркурий отправка исходящих ВСД ");

	ГМ.ОтправитьВсе_ВСД_Транзакция(СписокВСД, НачДата, КонДата);
	
КонецПроцедуры

НачДата = ТекущаяДата();
КонДата = ТекущаяДата();

ТаблицаВСД.НоваяКолонка("сЦвет",,,,,1,);
ТаблицаВСД.НоваяКолонка("Пометка",,,,,5,);
ТаблицаВСД.НоваяКолонка("ДокументРеализация",,,,,30,);
ТаблицаВСД.НоваяКолонка("ВСД_Продукция_Элемент",,,,,30,);
ТаблицаВСД.НоваяКолонка("Номенклатура",,,,,30,);
ТаблицаВСД.НоваяКолонка("ВСД_Партия",,,,,10,);
ТаблицаВСД.НоваяКолонка("ВСД",,,,,10,);
ТаблицаВСД.НоваяКолонка("Количество",,,,,10,);
//ТаблицаВСД.НоваяКолонка("КоличествоМест",,,,,10,);
ТаблицаВСД.НоваяКолонка("Грузополучатель",,,,,30,);
ТаблицаВСД.НоваяКолонка("Площадка",,,,,30,);
ТаблицаВСД.НоваяКолонка("Контрагент",,,,,10,);
ТаблицаВСД.НоваяКолонка("ХозСубъект",,,,,10,);
ТаблицаВСД.ВыводитьПиктограммы("Пометка");


ЦвЖелтый 	= "FONT[0]BRUSH[65535]FONT_S[0]BRUSH_S[65535]                       ";
ЦвЗеленый 	= "FONT[0]BRUSH[65280]FONT_S[0]BRUSH_S[65280]                       ";
ЦвКрасный  	= "FONT[0]BRUSH[255]FONT_S[0]BRUSH_S[255]                           " ;
ЦвГолубой	= "FONT[0]BRUSH[13421619]FONT_S[0]BRUSH_S[13421619]                 ";
ЦвФиолетовый= "FONT[0]BRUSH[11665663]FONT_S[0]BRUSH_S[11665663]";

ЗагрузитьВнешнююКомпоненту("1cpp.dll");
ЗагрузитьВнешнююКомпоненту("formex.dll");

Сервис = СоздатьОбъект("Сервис");
Сервис.ВключитьРаскраскуТаблиц();
