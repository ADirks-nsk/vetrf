Функция ПолучитьЦветСтроки(СтатусДок)
	Если _Раскрашивать = 0  Тогда
	    Возврат "";
	КонецЕсли;
	
	Рез = "";
	Если (СокрЛП(СтатусДок) = "CONFIRMED") или 
		(СокрЛП(СтатусДок) = "COMPLETED") или 
		(СокрЛП(СтатусДок) = "Проведен") или 
		(СокрЛП(СтатусДок) = "UTILIZED") Тогда
		Рез = "Зеленый";
	ИначеЕсли  СокрЛП(СтатусДок) = "REJECTED" Тогда
		Рез = "Красный";
	ИначеЕсли  СокрЛП(СтатусДок) = "Аннулирова" Тогда
		Рез = "Желтый";
	Иначе
		//Сообщить("Цвет не определен Статус = "+СтатусДок);
	КонецЕсли;
	Возврат Рез;
КонецФункции

Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(СформироватьВСД)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|ОбрабатыватьДокументы все;";
	Если _БезУдаленных = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Обрабатывать НеПомеченныеНаУдаление;";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Обрабатывать ПомеченныеНаУдаление;";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ВСД = Документ.ВСД.ТекущийДокумент, Документ.ВСД2.ТекущийДокумент;
	|Транзакция = Документ.ВСД2.ДокОснование, Документ.ВСД.ДокОснование;
	|Группировка Транзакция;
	|Группировка ВСД;
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
    ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ВремТЗ,0,0); 
	Если ВремТЗ.КоличествоСтрок() = 0 Тогда
	    Предупреждение("Нет данных");
		Возврат;
	КонецЕсли;
	Состояние("Заполнение выходной таблицы...");
	
	ВремТЗ.НоваяКолонка("ОснованиеТранзакции","Документ");
	ВремТЗ.НоваяКолонка("Статус");
	ВремТЗ.НоваяКолонка("типВСД");
	ВремТЗ.ВыбратьСтроки();
	Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
		Если ВремТЗ.Транзакция.Выбран()  = 1 Тогда
		    ВремТЗ.ОснованиеТранзакции = ВремТЗ.Транзакция.ДокОснование;
		КонецЕсли;
		Если ВремТЗ.ВСД.Выбран()  = 1 Тогда
			ВремТЗ.Статус = ВремТЗ.ВСД.Статус;
			ВремТЗ.ТипВСД = ВремТЗ.ВСД.типВСД;;
		КонецЕсли;		
	КонецЦикла;
	//Сортировка по Основанию (Реализация, Перемещение и тп)
	ВремТЗ.Сортировать("+ОснованиеТранзакции,+Транзакция");
//	ВремТЗ.ВыбратьСтроку();
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Новая");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	
	ВремТЗ.ПолучитьСтрокуПоНомеру(1);
	
	ПредОснование = ВремТЗ.ОснованиеТранзакции;
	ПредТранзакция = ВремТЗ.Транзакция;
	СтатусТранзакции = ?(ВремТЗ.Транзакция.Выбран()=0,"",СокрЛП(ВремТЗ.Транзакция.Статус));
	ЦветСтроки = ПолучитьЦветСтроки(СтатусТранзакции);
	Если ПустоеЗначение(ПредОснование) = 0 Тогда
		Таб.ВывестиСекцию("ОснованиеТранзакции");    
	КонецЕсли;
	Если ПредТранзакция.Выбран() = 1 Тогда
		Таб.ВывестиСекцию("Транзакция"+ЦветСтроки);    
	КонецЕсли;
	
	ВремТЗ.ВыбратьСтроки();
	Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
		Если НЕ(ПредОснование = ВремТЗ.ОснованиеТранзакции) Тогда
		    ПредОснование = ВремТЗ.ОснованиеТранзакции;
			ЦветСтроки = "";			
			Таб.ВывестиСекцию("ОснованиеТранзакции");
		КонецЕсли;
		Если НЕ(ПредТранзакция = ВремТЗ.Транзакция) Тогда
		    ПредТранзакция = ВремТЗ.Транзакция;
			СтатусТранзакции = ?(ВремТЗ.Транзакция.Выбран()=0,"",СокрЛП(ВремТЗ.Транзакция.Статус));
			ЦветСтроки = ПолучитьЦветСтроки(СтатусТранзакции);
			Таб.ВывестиСекцию("Транзакция"+ЦветСтроки);
		КонецЕсли;
		ЦветСтроки = ПолучитьЦветСтроки(ВремТЗ.Статус);
		Таб.ВывестиСекцию("ВСД"+ЦветСтроки);    
	КонецЦикла;
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Сформировать", "");

КонецПроцедуры



Процедура Сформировать2()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|ОбрабатыватьДокументы все;
	|Обрабатывать НеПомеченныеНаУдаление;
	|ВСД = Документ.ВСД2_транзакция.ТекущийДокумент;
	|ДокОснование = Документ.ВСД2_транзакция.ДокОснование;
	|Статус = Документ.ВСД2_транзакция.Статус;
	|Группировка ДокОснование;
	|Группировка ВСД;
	|Группировка Статус;
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Сформировать");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Пока Запрос.Группировка(1) = 1 Цикл
		// Заполнение полей ДокОснование
		Пока Запрос.Группировка(2) = 1 Цикл
			// Заполнение полей ВСД
			Пока Запрос.Группировка(3) = 1 Цикл
				// Заполнение полей Статус
				Если СокрЛП(Запрос.Статус)="COMPLETED"  Тогда
					Таб.ВывестиСекцию("Статус");
				Иначе
					Таб.ВывестиСекцию("Статус0");
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Сформировать", "");
КонецПроцедуры


Процедура Отчет3()
	
	RS = СоздатьОбъект("ODBCRecordset");
	RS.УстБД1С();

	t1 = ГМ.Старт();		
	//tt1=_GetPerformanceCounter();
	
	Состояние("Запрос списка документов ");
	//НачДата 		= спПараметры.Получить("НачДата");
	//КонДата 		= спПараметры.Получить("КонДата");
	//ВыбКонтрагент 	= спПараметры.Получить("ВыбКонтрагент");
	//ВыбФирма 		= спПараметры.Получить("ВыбФирма");
	//Версия2 		= спПараметры.Получить("Версия2");
	//Площадка 		= спПараметры.Получить("Площадка");
	//флФильтрПоСкладу= спПараметры.Получить("флФильтрПоСкладу");

	// Позже продолжить несколько видов реализаций через ",", в запросе через функцию COALESCE
	//
	//СписокДокументов = глРазложить(НазваниеВидаДокументаРеализация);
	//Для СЦ = 1 По СписокДокументов.РазмерСписка() Цикл
	//	Сообщить(СписокДокументов.ПолучитьЗначение(СЦ));
	//КонецЦикла;

	НазваниеВидаСправочникаФирмы		= ГМ.ПолучитьКонстанту("НазваниеВидаСправочникаФирмы");
	НазваниеВидаДокументаРеализация 	= ГМ.ПолучитьКонстанту("НазваниеВидаДокументаРеализация");
	НазваниеРеквизитаГрузополучатель 	= ГМ.ПолучитьКонстанту("НазваниеРеквизитаГрузополучатель");
	НазваниеРеквизитаНоменклатура		= ГМ.ПолучитьКонстанту("НазваниеРеквизитаНоменклатура");
	НазваниеРеквизитаКоличество 		= ГМ.ПолучитьКонстанту("НазваниеРеквизитаКоличество");
	НазваниеРеквизитаКоличествоМест 	= ГМ.ПолучитьКонстанту("НазваниеРеквизитаКоличествоМест");
	ПропускатьПустыеСвойства 			= ГМ.ПолучитьКонстанту("ПропускатьПустыеСвойства");

	Если ПустаяСтрока(НазваниеВидаСправочникаФирмы) = 1 Тогда
		Сообщить("В Параметрах не указано НазваниеВидаСправочникаФирмы!","!"); //Возврат "";
	КонецЕсли;
	Если ПустаяСтрока(НазваниеРеквизитаГрузополучатель) = 1 Тогда
		Сообщить("Не выбрано название реквизита грузополучатель!","!"); Возврат ;
	КонецЕсли;

	ВидГрузополучателя = Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки(НазваниеРеквизитаГрузополучатель).Вид;
                        
	НоменклатураИмяРеквизита = "Номенклатура";
	ФирмаИмяРеквизита = "";
	ФирмаОбщийРеквизит = ГМ.ПолучитьИмяРеквизитаФирма(НазваниеВидаДокументаРеализация, ФирмаИмяРеквизита);

	ФильтрПоСкладу = 0;
//	флФильтрПоСкладу = 0;
//	Если флФильтрПоСкладу = 1 Тогда
//		Если ПустоеЗначение(Площадка) = 0 Тогда
//			ВидСтравочникаСклады = Метаданные.Справочник("ВСД_Площадка").Реквизит("Склад").Вид;
//			Если ПустаяСтрока(ВидСтравочникаСклады) = 1 Тогда
//				ВидСтравочникаСклады = Метаданные.Справочник("ВСД_СкладыПлощадок").Реквизит("Склад").Вид;
//			КонецЕсли;
//
//			Если ПустаяСтрока(ВидСтравочникаСклады) = 0 Тогда
//				СписокСкладов = СоздатьОбъект("СписокЗначений");
//				Если ПустоеЗначение(Площадка.Склад) = 0 Тогда
//					СписокСкладов.ДобавитьЗначение(Площадка.Склад);
//				КонецЕсли;
//				Спр = СоздатьОбъект("Справочник.ВСД_СкладыПлощадок");
//				Спр.ИспользоватьВладельца(Площадка);
//				Спр.ВыбратьЭлементы();
//				Пока Спр.ПолучитьЭлемент() = 1 Цикл
//					Если ПустоеЗначение(Спр.Склад) = 0 Тогда
//						СписокСкладов.ДобавитьЗначение(Спр.Склад);
//					КонецЕсли;
//				КонецЦикла;
//
//				Если СписокСкладов.РазмерСписка() > 0 Тогда
//					ВыбСклад = Площадка.Склад;
//					Для nn = 1 По Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки() Цикл
//						Рекв = Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки(nn).Вид;
//						Если Рекв = ВидСтравочникаСклады Тогда
//							ФильтрПоСкладу = 1;
//							СкладИмяРеквизита = Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки(nn).Идентификатор;
//							Прервать;
//						КонецЕсли;
//					КонецЦикла;
//				КонецЕсли;
//			КонецЕсли;
//		КонецЕсли;
//	КонецЕсли;
	
	Если ГМ.ЭтоSQL=1 Тогда

			ТекстЗапроса = "
			|SELECT 
			|    Жур.IDDoc as [Док $Документ],
			|    Жур.IDDocDef as Док_вид,
			|	COALESCE(Док_ВСД2_Транзакция.IDDoc, $ПустойИД) as [Док_ВСД2_Транзакция $Документ.ВСД2_транзакция],
			|	COALESCE(Док_ВСД2_Транзакция.ВСД2, $ПустойИД) as [ВСД2 $Документ.ВСД2], 
			|	COALESCE(Док_ВСД_Транзакция.IDDoc, $ПустойИД) as [Док_ВСД_Транзакция $Документ.ВСД_транзакция],
			|	COALESCE(Док_ВСД_Транзакция.ВСД1, $ПустойИД) as [ВСД $Документ.ВСД], 
			|	Док_ВСД2_Транзакция.Статус as [Статус2],
			|	Док_ВСД2_Транзакция.ВСД2_Статус as [Статус2_ВСД],
			|	Док_ВСД2_Транзакция.Отправлен as [Отправлен2],
			|	Док_ВСД_Транзакция.Статус as [Статус1],
			|	Док_ВСД_Транзакция.ВСД1_Статус as [Статус1_ВСД],
			|	Док_ВСД_Транзакция.Отправлен as [Отправлен1],
			|	Жур.DocNo as [НомерДок],
			|	CASE
			|		WHEN Жур.Closed & 1 = 1
			|		THEN 'Проведен'
			|		ELSE 'Не проведен'
			|	END as [Проведен],
			|	Жур.Closed & 1 as флПроведен,
			|	CASE
			|		WHEN Жур.ISMARK = 0
			|		THEN ''
			|		ELSE 'Удален'
			|	END as [Удален],
			|	Жур.ISMARK as флУдален,
			|	$ДокР.Контрагент as [Контрагент $Справочник.Контрагенты],
			|	$ДокР."+ НазваниеРеквизитаГрузополучатель +" as [Грузополучатель $Справочник."+ ВидГрузополучателя +"],
			|	%ФункцияКоличество% as [Количество],
			|	%ФункцияКоличествоМест% as [КоличествоМест]
			|
			|
			|FROM
			|    _1SJourn Жур
			|INNER JOIN
			|	$Документ."+ НазваниеВидаДокументаРеализация +" as ДокР
			|		ON Жур.IDDoc = ДокР.IDDoc
			// док ВСД2_Транзакция
			|LEFT JOIN
			|	(SELECT 
			|	Жур1.IDDoc as IDDoc,
			|	COALESCE(Док_ВСД2.IDDoc, $ПустойИД) as ВСД2,
			|	COALESCE(Док_ВСД2.Статус, $ПустойИД) as ВСД2_Статус,
			|	COALESCE($ДокВСД_1.Статус, $ПустойИД) as [Статус],
			|	CASE
			|		WHEN $ДокВСД_1.applicationID <> ''
			|		THEN 'Отправлен'
			|		ELSE 'НЕ отправлен'
			|	END as [Отправлен],
			|	$ДокВСД_1.ДокОснование as ДокОснование
			|	FROM
			|   	_1SJourn Жур1
			|	INNER JOIN
			|		$Документ.ВСД2_транзакция as ДокВСД_1
			|			ON Жур1.IDDoc = ДокВСД_1.IDDoc
			|	LEFT JOIN
				|	(SELECT 
				|	Жур2.IDDoc as IDDoc,
				|	ДокВСД3.IDDoc as ВСД,
				|	COALESCE($ДокВСД3.Статус, $ПустойИД) as [Статус],
				|	$ДокВСД3.ДокОснование as ДокОснование
				|	FROM
				|   	_1SJourn Жур2
				|	INNER JOIN
				|		$Документ.ВСД2 as ДокВСД3
				|			ON Жур2.IDDoc = ДокВСД3.IDDoc
				|	) as Док_ВСД2
			|	ON SUBSTRING(Док_ВСД2.ДокОснование, 5, 9) = Жур1.IDDoc				
			|	) as Док_ВСД2_Транзакция
			|	ON SUBSTRING(Док_ВСД2_Транзакция.ДокОснование, 5, 9) = Жур.IDDoc	
			// док ВСД_Транзакция
			|LEFT JOIN
			|	(SELECT 
			|	Жур1.IDDoc as IDDoc,
			|	COALESCE(Док_ВСД.IDDoc, $ПустойИД) as ВСД1,
			|	COALESCE(Док_ВСД.Статус, $ПустойИД) as ВСД1_Статус,
			|	COALESCE($ДокВСД_транзакция.Статус, $ПустойИД) as [Статус],
			|	CASE
			|		WHEN $ДокВСД_транзакция.applicationID <> ''
			|		THEN 'Отправлен'
			|		ELSE 'НЕ отправлен'
			|	END as [Отправлен],
			|	$ДокВСД_транзакция.ДокОснование as ДокОснование
			|	FROM
			|   	_1SJourn Жур1
			|	INNER JOIN
			|		$Документ.ВСД_транзакция as ДокВСД_транзакция 
			|			ON Жур1.IDDoc = ДокВСД_транзакция.IDDoc
			|	LEFT JOIN
				|	(SELECT 
				|	Жур2.IDDoc as IDDoc,
				|	ДокВСД.IDDoc as ВСД,
				|	COALESCE($ДокВСД.Статус, $ПустойИД) as [Статус],
				|	$ДокВСД.ДокОснование as ДокОснование
				|	FROM
				|   	_1SJourn Жур2
				|	INNER JOIN
				|		$Документ.ВСД as ДокВСД
				|			ON Жур2.IDDoc = ДокВСД.IDDoc
				|	) as Док_ВСД
			|	ON SUBSTRING(Док_ВСД.ДокОснование, 5, 9) = Жур1.IDDoc				
			|	) as Док_ВСД_Транзакция
			|	ON SUBSTRING(Док_ВСД_Транзакция.ДокОснование, 5, 9) = Жур.IDDoc	
			|
			|WHERE
			|    Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ AND
			|    Жур.IDDocDef = $ВидДокумента."+ НазваниеВидаДокументаРеализация +"
			|
			|
			//|	%УсловиеПоГрузополучателю%
			//|	%УсловиеПоФирме%
			//|	%УсловиеПоСкладу%
			//|
			|order by Жур.DocNo
			|";
	
	

			Если ПропускатьПустыеСвойства = 0 Тогда
				ФункцияКоличество = " 
				| (SELECT SUM( $ДокСтроки1."+НазваниеРеквизитаКоличество+")
				|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки1
				|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
				|   AND $ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0) ";
				ФункцияКоличествоМест = " 
				| (SELECT SUM( $ДокСтроки2."+НазваниеРеквизитаКоличествоМест+" )
				|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки2
				|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
				|   AND $ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0) ";
			Иначе
				ФункцияКоличество = " 
				| (SELECT SUM( $ДокСтроки1."+НазваниеРеквизитаКоличество+")
				|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки1
				|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
				|   AND $ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0
				|   AND EXISTS(SELECT $Спр1.ВСД_Продукция_Элемент
				|      FROM $Справочник.ВСД_Номенклатура_Соответсвия AS Спр1
				|      WHERE  $Спр1.ВСД_Продукция_Элемент <> $ПустойИД
				|       AND Спр1.ParentExt = $ДокСтроки1."+НоменклатураИмяРеквизита+")) ";				
				ФункцияКоличествоМест = " 
				| (SELECT SUM( $ДокСтроки2."+НазваниеРеквизитаКоличествоМест+")
				|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки2
				|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
				|   AND $ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0
				|   AND EXISTS(SELECT $Спр2.ВСД_Продукция_Элемент
				|      FROM $Справочник.ВСД_Номенклатура_Соответсвия AS Спр2
				|      WHERE  Спр2.ParentExt = $ДокСтроки2."+НоменклатураИмяРеквизита+")) ";
			КонецЕсли;
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличество%", ФункцияКоличество );
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличествоМест%", ФункцияКоличествоМест );
			
//			
//			УсловиеПоГрузополучателю = "";
//			Если ПустоеЗначение(ВыбКонтрагент) = 0 Тогда
//				Если ВыбКонтрагент.ЭтоГруппа() = 1 Тогда
//					УсловиеПоГрузополучателю = " and $ДокР."+ НазваниеРеквизитаГрузополучатель +" IN (SELECT Val FROM #ГруппаК) ";
//					RS.УложитьСписокОбъектов(ВыбКонтрагент, "#ГруппаК","Контрагенты");
//				Иначе
//					УсловиеПоГрузополучателю = " AND $ДокР."+НазваниеРеквизитаГрузополучатель+" = :ВыбКонтрагент ";
//					RS.УстановитьТекстовыйПараметр("ВыбКонтрагент", ВыбКонтрагент);
//				КонецЕсли;								
//			КонецЕсли;
//			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоГрузополучателю%", УсловиеПоГрузополучателю);
//
//			//условие по фирме
//			УсловиеПоФирме="";
//			//Если ПустоеЗначение(ВыбФирма) = 0 Тогда
//			//	Если ФирмаОбщийРеквизит > 0 Тогда
//			//		Если ФирмаОбщийРеквизит = 1 Тогда
//			//			УсловиеПоФирме = " and Жур.$ОбщийРеквизит."+ФирмаИмяРеквизита+" = :ВыбФирма";
//			//		Иначе
//			//			УсловиеПоФирме = " and $ДокР."+ФирмаИмяРеквизита+" = :ВыбФирма";
//			//		КонецЕсли;
//			//		RS.УстановитьТекстовыйПараметр("ВыбФирма", ВыбФирма);
//			//	КонецЕсли;
//			//КонецЕсли;
//			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоФирме%", УсловиеПоФирме);
//
//			//условие по складу
//			УсловиеПоСкладу = "";
//			//Если ФильтрПоСкладу = 1 Тогда
//			//	Если СписокСкладов.РазмерСписка() = 1 Тогда
//			//		УсловиеПоСкладу = " and $ДокР."+СкладИмяРеквизита+" = :ВыбСклад";
//			//		RS.УстановитьТекстовыйПараметр("ВыбСклад", СписокСкладов.ПолучитьЗначение(1));
//			//	Иначе
//			//		УсловиеПоСкладу = " and $ДокР."+ СкладИмяРеквизита +" IN (SELECT Val FROM #Склады) ";
//			//		RS.УложитьСписокОбъектов(СписокСкладов, "#Склады",ВидСтравочникаСклады);
//			//	КонецЕсли;
//			//КонецЕсли;
//			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеПоСкладу%", УсловиеПоСкладу);

			RS.УстановитьТекстовыйПараметр("НачДата", ВыбНачПериода);
			RS.УстановитьТекстовыйПараметр("КонДата", ВыбКонПериода);

			//RS.Отладка(1);
			тз = RS.ВыполнитьИнструкцию(ТекстЗапроса);
			//тз.ВыбратьСтроку();
		КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Отчет3");
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);

	ПредРеализация = "";
	ПредТранзакция1 = "";
	ПредТранзакция2 = "";
	ПредВСД1 = "";
	ПредВСД2 = "";

	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если (ПредРеализация <> тз.Док) Тогда
		    ПредРеализация = тз.док;
			ЦветСтроки = ПолучитьЦветСтроки(тз.Проведен);
			Таб.ВывестиСекцию("Реализация"+ЦветСтроки);
		КонецЕсли;
		Если (ПредТранзакция1 <> тз.Док_ВСД_Транзакция) Тогда
		    ПредТранзакция1 = тз.Док_ВСД_Транзакция;
			ЦветСтроки = ПолучитьЦветСтроки(тз.Статус1);
			Если ПустоеЗначение(тз.Док_ВСД_Транзакция)=0 Тогда 
				Таб.ВывестиСекцию("Док_ВСД_Транзакция"+ЦветСтроки);
			КонецЕсли;
		КонецЕсли;
		Если (ПредТранзакция2 <> тз.Док_ВСД2_Транзакция) Тогда
		    ПредТранзакция2 = тз.Док_ВСД2_Транзакция;
			ЦветСтроки = ПолучитьЦветСтроки(тз.Статус2);
			Если ПустоеЗначение(тз.Док_ВСД2_Транзакция)=0 Тогда 
				Таб.ВывестиСекцию("Док_ВСД2_Транзакция"+ЦветСтроки);
			КонецЕсли;
		КонецЕсли;
		Если (ПредВСД1 <> тз.ВСД) Тогда
		    ПредВСД1 = тз.ВСД;			
			ЦветСтроки = ПолучитьЦветСтроки(тз.Статус1_ВСД);
			Если ПустоеЗначение(тз.ВСД)=0 Тогда 
				Таб.ВывестиСекцию("ВСД"+ЦветСтроки);
			КонецЕсли;
		КонецЕсли;
		Если (ПредВСД2 <> тз.ВСД2) Тогда
		    ПредВСД2 = тз.ВСД2;
			ЦветСтроки = ПолучитьЦветСтроки(тз.Статус2_ВСД);
			Если ПустоеЗначение(тз.ВСД2)=0 Тогда 
				Таб.ВывестиСекцию("ВСД2"+ЦветСтроки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет_по_ВСД", "");

КонецПроцедуры

ВыбНачПериода = ТекущаяДата();
ВыбКонПериода = ВыбНачПериода;
_Раскрашивать = 1;