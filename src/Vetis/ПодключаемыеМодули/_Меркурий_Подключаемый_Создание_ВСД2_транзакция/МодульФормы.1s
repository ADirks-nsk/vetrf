// API 2.0
//ВСД2_Транзакция

Перем  ПропускатьПустыеСвойства;
Перем ГМ;
//*****************************************************************************


Функция СоздатьВСД(Парам)
	
	Сообщить("Подключаемый модуль Меркурий_Подключаемый_Создание_ВСД2_транзакция");

	ДокОснование 				= Парам.Получить("ДокОснование");
	Контрагент 					= Парам.Получить("Контрагент");
	Грузополучатель 			= Парам.Получить("Грузополучатель");
	Отправитель_ХозСубъект 		= Парам.Получить("Отправитель_ХозСубъект");
	Отправитель_Площадка 		= Парам.Получить("Отправитель_Площадка");
	Перевозчик_ХозСубъект 		= Парам.Получить("Перевозчик_ХозСубъект");
	Партия 						= Парам.Получить("Партия");
	//ТермическиеУсловияПеревозки = Парам.Получить("ТермическиеУсловияПеревозки");
	ХС 							= Парам.Получить("ХС");
	Площадка 					= Парам.Получить("Площадка"); 
	Колво 						= Парам.Получить("Колво"); 
	КолвоМест 					= Парам.Получить("КолвоМест"); 
	ВыбТипПродукции 			= Парам.Получить("ВыбТипПродукции"); 
	ВыбВидСвойств 				= Парам.Получить("ВыбВидСвойств"); 
	ВСД_Экспертиза 				= Парам.Получить("ВСД_Экспертиза");    
	ВСД_Местность				= Парам.Получить("ВСД_Местность");
	ВСД_ОсобыеОтметки 			= Парам.Получить("ВСД_ОсобыеОтметки");
	СписокПартий 				= Парам.Получить("СписокПартий");    
	ГМ 							= Парам.Получить("ГМ");
	
	ДокВСД = СоздатьОбъект("Документ.ВСД2_транзакция");
	ДокВСД.Новый();
	//ДокВСД.НомерДок = ;
	ДокВСД.ДокОснование = ДокОснование;
	ДокВСД.Фирма = ДокОснование.Фирма;
	Если ПустоеЗначение(ГМ) = 1 Тогда
    	ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль");
		ГМ.Инициализация(ДокОснование);
	КонецЕсли;
	
	ДокВСД.ДатаДок = ДокОснование.ДатаДок;
	
	ДокВСД.Отправитель_ХозСубъект = Отправитель_ХозСубъект;
	ДокВСД.Отправитель_Площадка = Отправитель_Площадка;
	
	ДокВСД.Получатель_ХозСубъект = ХС;		
	ДокВСД.Получатель_Площадка = Площадка;					
	ДокВСД.Перевозчик_ХозСубъект = Перевозчик_ХозСубъект;

	
	ТТН = ДокВСД.ДокОснование.Водитель;		
				
	ДокВСД.ТтнСерия = ""; //ТТН.Серия;
	ДокВСД.ТтнНомер = ГлНомерНаПечать(ДокВСД.ДокОснование);// возможно переопределение ГМ.ПолучитьСвязанныйДокумент(ДокОснование,"ТТН");
	ДокВСД.ТтнДата = ДокВСД.ДокОснование.ДатаДок;
	ДокВСД.Торг12Номер = ГлНомерНаПечать(ДокВСД.ДокОснование);// возможно переопределение ГМ.ПолучитьСвязанныйДокумент(ДокОснование,"ТОРГ12");
	ДокВСД.ТОРГ12Дата = ДокВСД.ДокОснование.ДатаДок;

	ДокВСД.номерАвто = ГМ.ПолучитьНомерАвто(ДокОснование);
	
	Попытка ДокВСД.Автор = ГМ.ПолучитьАвтора(); Исключение КонецПопытки;
	Попытка	ДокВСД.Филиал = глПользователь.Филиал; Исключение КонецПопытки; // Автор.Филиал;
		
	//ДокВСД.ФормаВСД = 1;
	
	ДокВСД.Местность 		= ВСД_Местность;
	ДокВСД.ОсобыеОтметки 	= ВСД_ОсобыеОтметки;
	ДокВСД.cargoExpertized  = 1; 
	
//	ДокВСД.НомерЗаказаПокупателя = СокрЛП(ДокОснование.Заказ);  // возможно переопределение ГМ.ПолучитьСвязанныйДокумент(ДокОснование,"Заказ");
//	ДокВСД.ДатаЗаказаПокупателя = СокрЛП(ДокОснование.ДатаЗаказа);

	ДокВСД.РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");;
	ДокВСД.cargoInspected  = 1; 
	
	ПропускатьПустыеСвойства = ГМ.СписокКонстант.Получить("ПропускатьПустыеСвойства");

	тз = СоздатьОбъект("Таблицазначений");
	ДокВСД.Докоснование.ВыгрузитьТабличнуюЧасть(тз);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		 Если (ПропускатьПустыеСвойства = 1) и (ПустоеЗначение(тз.Номенклатура.ВСД_Продукция_Элемент) = 1) Тогда
			Сообщить("Не указан ВСД_Продукция_Элемент у "+тз.Номенклатура+". Пропускаем","i");
			Продолжить; // Пропускаем Индивидуально
		 КонецЕсли;
			
			ВрПартия = ГМ.НайтиПервуюПартию(тз.Номенклатура.ВСД_Продукция_Элемент, ДокВСД.Отправитель_Площадка, ДокВСД.Отправитель_ХозСубъект);
			Если ПустоеЗначение(ВрПартия) = 1 Тогда
				Сообщить("Нет партий для "+тз.Номенклатура+ " " + тз.Номенклатура.ВСД_Продукция_Элемент,"!!");				
			    //Продолжить; // Пропускаем Индивидуально
			КонецЕсли;
			
			
			КСписанию = тз.Количество;  //Индивидуально
			
			Если ПустоеЗначение(ВрПартия) = 0 Тогда
				Если ВрПартия.Количество < КСписанию Тогда
					Сообщить("В партии "+ВрПартия+" недостаточно веса, в партии  "+ВрПартия.Количество,"!");
			    	//КСписанию = ВрПартия.Количество;
				КонецЕсли;
			КонецЕсли;

				ДокВСД.НоваяСтрока();
				ДокВСД.Номенклатура = тз.Номенклатура;
				ДокВСД.Партия = ВрПартия;
				ДокВСД.Количество = КСписанию;
//				ДокВСД.КоличествоМест = тз.КоличествоМест;			
				ДокВСД.ЕдиницаИзмерения = ДокВСД.Партия.ЕдиницаИзмерения;
				ДокВСД.Продукция = ДокВСД.Партия.Продукция;
				ДокВСД.ВидПродукции = ДокВСД.Партия.ВидПродукции;

				ДокВСД.Продукция_Элемент 	= ДокВСД.Номенклатура.ВСД_Продукция_Элемент;
				ДокВСД.ТермическоеСостояние = ДокВСД.Продукция_Элемент.ТермическиеУсловияПеревозки;
				ДокВСД.НаименованиеПродукции = ДокВСД.Продукция_Элемент.Наименование; 
//				ДокВСД.КодПродукции = тз.АртикулПокупателя;
				
				ДокВСД.ФормаУпак4 = ДокВСД.Продукция_Элемент.ТипФасовки;// Места на 4 уровне
				Если ПустоеЗначение(ДокВСД.ФормаУпак4) = 0 Тогда
					ДокВСД.КолвоУпак4 = тз.Количество;
				КонецЕсли;
				
	КонецЦикла;

	//свертка  КРОЛ
	тз=СоздатьОбъект("ТаблицаЗначений");
	ДокВСД.ВыгрузитьТабличнуюЧасть(тз);  
	спЧисловыеКолонки  = СоздатьОбъект("СписокЗначений"); 
	спГруппКолонки  = СоздатьОбъект("СписокЗначений"); 
	Для Н=1 По Метаданные.Документ("ВСД2_транзакция").РеквизитТабличнойЧасти() Цикл
		Рекв = Метаданные.Документ("ВСД2_транзакция").РеквизитТабличнойЧасти(Н);
		Если (Рекв.Тип = "Число") И НЕ(Рекв.Идентификатор="ОбъемЕдиницыФасовки") Тогда
			спЧисловыеКолонки.ДобавитьЗначение(Н+1);	
		Иначе	
			спГруппКолонки.ДобавитьЗначение(Н+1);	
		КонецЕсли;
		
	КонецЦикла;	  
	ЧисловыеКолонки = спЧисловыеКолонки.ВСтрокуСРазделителями();
	ГруппКолонки = спГруппКолонки.ВСтрокуСРазделителями();  
	спГруппКолонки = стрЗаменить(спГруппКолонки,"""","");
	ЧисловыеКолонки = стрЗаменить(ЧисловыеКолонки,"""","");
	
	тз.Свернуть(ГруппКолонки,ЧисловыеКолонки);       
	ДокВСД.ЗагрузитьТабличнуюЧасть(тз);
	//КРОЛ
	
	ДокВСД.Записать();
			
	Возврат ДокВСД.ТекущийДокумент();
	
КонецФункции

Процедура ПриОткрытии()

	Парам = Форма.Параметр;
	Если ТипЗначенияСтр(Парам)="СписокЗначений" Тогда  
		
		Если ПустоеЗначение(Парам.Получить("ДокОснование"))=1 Тогда
			Сообщить("В форму служебной обработки передан неверный параметр!","I");
			СтатусВозврата(0);Возврат;
		КонецЕсли;      
        
		ДокументСсылка = СоздатьВСД(Парам);
		
		СписокПараметров = СоздатьОбъект("СписокЗначений");
		СписокПараметров.ДобавитьЗначение(ДокументСсылка,"ДокументСсылка");
		                    
		Форма.Параметр = СписокПараметров;   

	КонецЕсли;
    
	СтатусВозврата(0); Возврат;
	
КонецПроцедуры